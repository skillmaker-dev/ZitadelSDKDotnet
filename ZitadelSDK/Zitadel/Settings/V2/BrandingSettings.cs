// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: zitadel/settings/v2/branding_settings.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Zitadel.Settings.V2 {

  /// <summary>Holder for reflection information generated from zitadel/settings/v2/branding_settings.proto</summary>
  public static partial class BrandingSettingsReflection {

    #region Descriptor
    /// <summary>File descriptor for zitadel/settings/v2/branding_settings.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BrandingSettingsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cit6aXRhZGVsL3NldHRpbmdzL3YyL2JyYW5kaW5nX3NldHRpbmdzLnByb3Rv",
            "EhN6aXRhZGVsLnNldHRpbmdzLnYyGi5wcm90b2MtZ2VuLW9wZW5hcGl2Mi9v",
            "cHRpb25zL2Fubm90YXRpb25zLnByb3RvGiJ6aXRhZGVsL3NldHRpbmdzL3Yy",
            "L3NldHRpbmdzLnByb3RvItMGChBCcmFuZGluZ1NldHRpbmdzEjsKC2xpZ2h0",
            "X3RoZW1lGAEgASgLMhoueml0YWRlbC5zZXR0aW5ncy52Mi5UaGVtZVIKbGln",
            "aHRUaGVtZRI5CgpkYXJrX3RoZW1lGAIgASgLMhoueml0YWRlbC5zZXR0aW5n",
            "cy52Mi5UaGVtZVIJZGFya1RoZW1lEooBCghmb250X3VybBgDIAEoCUJvkkFs",
            "MhR1cmwgdG8gdGhlIGZvbnQgdXNlZEpUImh0dHBzOi8vYWNtZS5jb20vYXNz",
            "ZXRzL3YxLzE2NTYxNzg1MDY5MjY1NDYwMS9wb2xpY3kvbGFiZWwvZm9udC0x",
            "ODA5NTAyNDMyMzc0MDU0NDEiUgdmb250VXJsEqYBChZoaWRlX2xvZ2luX25h",
            "bWVfc3VmZml4GAQgASgIQnGSQW4ybGhpZGVzIHRoZSBvcmcgc3VmZml4IG9u",
            "IHRoZSBsb2dpbiBmb3JtIGlmIHRoZSBzY29wZSAidXJuOnppdGFkZWw6aWFt",
            "Om9yZzpkb21haW46cHJpbWFyeTp7ZG9tYWlubmFtZX0iIGlzIHNldFITaGlk",
            "ZUxvZ2luTmFtZVN1ZmZpeBJSChFkaXNhYmxlX3dhdGVybWFyaxgFIAEoCEIl",
            "kkEiMiBib29sZWFuIHRvIGRpc2FibGUgdGhlIHdhdGVybWFya1IQZGlzYWJs",
            "ZVdhdGVybWFyaxK5AQoTcmVzb3VyY2Vfb3duZXJfdHlwZRgGIAEoDjImLnpp",
            "dGFkZWwuc2V0dGluZ3MudjIuUmVzb3VyY2VPd25lclR5cGVCYZJBXjJccmVz",
            "b3VyY2Vfb3duZXJfdHlwZSByZXR1cm5zIGlmIHRoZSBzZXR0aW5nIGlzIG1h",
            "bmFnZWQgb24gdGhlIG9yZ2FuaXphdGlvbiBvciBvbiB0aGUgaW5zdGFuY2VS",
            "EXJlc291cmNlT3duZXJUeXBlEoABCgp0aGVtZV9tb2RlGAcgASgOMh4ueml0",
            "YWRlbC5zZXR0aW5ncy52Mi5UaGVtZU1vZGVCQZJBPjI8c3RhdGVzIHdoZXRo",
            "ZXIgYm90aCBvciBvbmx5IGRhcmsgb3IgbGlnaHQgdGhlbWUgd2lsbCBiZSB1",
            "c2VkUgl0aGVtZU1vZGUi1gQKBVRoZW1lElAKDXByaW1hcnlfY29sb3IYASAB",
            "KAlCK5JBKDIbaGV4IHZhbHVlIGZvciBwcmltYXJ5IGNvbG9ySgkiIzU0Njlk",
            "NCJSDHByaW1hcnlDb2xvchJZChBiYWNrZ3JvdW5kX2NvbG9yGAIgASgJQi6S",
            "QSsyHmhleCB2YWx1ZSBmb3IgYmFja2dyb3VuZCBjb2xvckoJIiNGQUZBRkEi",
            "Ug9iYWNrZ3JvdW5kQ29sb3ISRwoKd2Fybl9jb2xvchgDIAEoCUIokkElMhho",
            "ZXggdmFsdWUgZm9yIHdhcm4gY29sb3JKCSIjQ0QzRDU2IlIJd2FybkNvbG9y",
            "EkcKCmZvbnRfY29sb3IYBCABKAlCKJJBJTIYaGV4IHZhbHVlIGZvciBmb250",
            "IGNvbG9ySgkiIzAwMDAwMCJSCWZvbnRDb2xvchKFAQoIbG9nb191cmwYBSAB",
            "KAlCapJBZzIPdXJsIHRvIHRoZSBsb2dvSlQiaHR0cHM6Ly9hY21lLmNvbS9h",
            "c3NldHMvdjEvMTY1NjE3ODUwNjkyNjU0NjAxL3BvbGljeS9sYWJlbC9sb2dv",
            "LTE4MDk1MDQxNjMyMTQ5NDY1NyJSB2xvZ29VcmwShQEKCGljb25fdXJsGAYg",
            "ASgJQmqSQWcyD3VybCB0byB0aGUgaWNvbkpUImh0dHBzOi8vYWNtZS5jb20v",
            "YXNzZXRzL3YxLzE2NTYxNzg1MDY5MjY1NDYwMS9wb2xpY3kvbGFiZWwvaWNv",
            "bi0xODA5NTA0OTg4NzQxNzg4MTciUgdpY29uVXJsKmcKCVRoZW1lTW9kZRIa",
            "ChZUSEVNRV9NT0RFX1VOU1BFQ0lGSUVEEAASEwoPVEhFTUVfTU9ERV9BVVRP",
            "EAESFAoQVEhFTUVfTU9ERV9MSUdIVBACEhMKD1RIRU1FX01PREVfREFSSxAD",
            "QtgBChdjb20ueml0YWRlbC5zZXR0aW5ncy52MkIVQnJhbmRpbmdTZXR0aW5n",
            "c1Byb3RvUAFaOGdpdGh1Yi5jb20veml0YWRlbC96aXRhZGVsL3BrZy9ncnBj",
            "L3NldHRpbmdzL3YyO3NldHRpbmdzogIDWlNYqgITWml0YWRlbC5TZXR0aW5n",
            "cy5WMsoCE1ppdGFkZWxcU2V0dGluZ3NcVjLiAh9aaXRhZGVsXFNldHRpbmdz",
            "XFYyXEdQQk1ldGFkYXRh6gIVWml0YWRlbDo6U2V0dGluZ3M6OlYyYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Grpc.Gateway.ProtocGenOpenapiv2.Options.AnnotationsReflection.Descriptor, global::Zitadel.Settings.V2.SettingsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Zitadel.Settings.V2.ThemeMode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Zitadel.Settings.V2.BrandingSettings), global::Zitadel.Settings.V2.BrandingSettings.Parser, new[]{ "LightTheme", "DarkTheme", "FontUrl", "HideLoginNameSuffix", "DisableWatermark", "ResourceOwnerType", "ThemeMode" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Zitadel.Settings.V2.Theme), global::Zitadel.Settings.V2.Theme.Parser, new[]{ "PrimaryColor", "BackgroundColor", "WarnColor", "FontColor", "LogoUrl", "IconUrl" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum ThemeMode {
    [pbr::OriginalName("THEME_MODE_UNSPECIFIED")] Unspecified = 0,
    [pbr::OriginalName("THEME_MODE_AUTO")] Auto = 1,
    [pbr::OriginalName("THEME_MODE_LIGHT")] Light = 2,
    [pbr::OriginalName("THEME_MODE_DARK")] Dark = 3,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class BrandingSettings : pb::IMessage<BrandingSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<BrandingSettings> _parser = new pb::MessageParser<BrandingSettings>(() => new BrandingSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<BrandingSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Zitadel.Settings.V2.BrandingSettingsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BrandingSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BrandingSettings(BrandingSettings other) : this() {
      lightTheme_ = other.lightTheme_ != null ? other.lightTheme_.Clone() : null;
      darkTheme_ = other.darkTheme_ != null ? other.darkTheme_.Clone() : null;
      fontUrl_ = other.fontUrl_;
      hideLoginNameSuffix_ = other.hideLoginNameSuffix_;
      disableWatermark_ = other.disableWatermark_;
      resourceOwnerType_ = other.resourceOwnerType_;
      themeMode_ = other.themeMode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public BrandingSettings Clone() {
      return new BrandingSettings(this);
    }

    /// <summary>Field number for the "light_theme" field.</summary>
    public const int LightThemeFieldNumber = 1;
    private global::Zitadel.Settings.V2.Theme lightTheme_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Zitadel.Settings.V2.Theme LightTheme {
      get { return lightTheme_; }
      set {
        lightTheme_ = value;
      }
    }

    /// <summary>Field number for the "dark_theme" field.</summary>
    public const int DarkThemeFieldNumber = 2;
    private global::Zitadel.Settings.V2.Theme darkTheme_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Zitadel.Settings.V2.Theme DarkTheme {
      get { return darkTheme_; }
      set {
        darkTheme_ = value;
      }
    }

    /// <summary>Field number for the "font_url" field.</summary>
    public const int FontUrlFieldNumber = 3;
    private string fontUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FontUrl {
      get { return fontUrl_; }
      set {
        fontUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hide_login_name_suffix" field.</summary>
    public const int HideLoginNameSuffixFieldNumber = 4;
    private bool hideLoginNameSuffix_;
    /// <summary>
    /// hides the org suffix on the login form if the scope \"urn:zitadel:iam:org:domain:primary:{domainname}\" is set
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HideLoginNameSuffix {
      get { return hideLoginNameSuffix_; }
      set {
        hideLoginNameSuffix_ = value;
      }
    }

    /// <summary>Field number for the "disable_watermark" field.</summary>
    public const int DisableWatermarkFieldNumber = 5;
    private bool disableWatermark_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableWatermark {
      get { return disableWatermark_; }
      set {
        disableWatermark_ = value;
      }
    }

    /// <summary>Field number for the "resource_owner_type" field.</summary>
    public const int ResourceOwnerTypeFieldNumber = 6;
    private global::Zitadel.Settings.V2.ResourceOwnerType resourceOwnerType_ = global::Zitadel.Settings.V2.ResourceOwnerType.Unspecified;
    /// <summary>
    /// resource_owner_type returns if the setting is managed on the organization or on the instance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Zitadel.Settings.V2.ResourceOwnerType ResourceOwnerType {
      get { return resourceOwnerType_; }
      set {
        resourceOwnerType_ = value;
      }
    }

    /// <summary>Field number for the "theme_mode" field.</summary>
    public const int ThemeModeFieldNumber = 7;
    private global::Zitadel.Settings.V2.ThemeMode themeMode_ = global::Zitadel.Settings.V2.ThemeMode.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Zitadel.Settings.V2.ThemeMode ThemeMode {
      get { return themeMode_; }
      set {
        themeMode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as BrandingSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(BrandingSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LightTheme, other.LightTheme)) return false;
      if (!object.Equals(DarkTheme, other.DarkTheme)) return false;
      if (FontUrl != other.FontUrl) return false;
      if (HideLoginNameSuffix != other.HideLoginNameSuffix) return false;
      if (DisableWatermark != other.DisableWatermark) return false;
      if (ResourceOwnerType != other.ResourceOwnerType) return false;
      if (ThemeMode != other.ThemeMode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (lightTheme_ != null) hash ^= LightTheme.GetHashCode();
      if (darkTheme_ != null) hash ^= DarkTheme.GetHashCode();
      if (FontUrl.Length != 0) hash ^= FontUrl.GetHashCode();
      if (HideLoginNameSuffix != false) hash ^= HideLoginNameSuffix.GetHashCode();
      if (DisableWatermark != false) hash ^= DisableWatermark.GetHashCode();
      if (ResourceOwnerType != global::Zitadel.Settings.V2.ResourceOwnerType.Unspecified) hash ^= ResourceOwnerType.GetHashCode();
      if (ThemeMode != global::Zitadel.Settings.V2.ThemeMode.Unspecified) hash ^= ThemeMode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (lightTheme_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LightTheme);
      }
      if (darkTheme_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DarkTheme);
      }
      if (FontUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FontUrl);
      }
      if (HideLoginNameSuffix != false) {
        output.WriteRawTag(32);
        output.WriteBool(HideLoginNameSuffix);
      }
      if (DisableWatermark != false) {
        output.WriteRawTag(40);
        output.WriteBool(DisableWatermark);
      }
      if (ResourceOwnerType != global::Zitadel.Settings.V2.ResourceOwnerType.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ResourceOwnerType);
      }
      if (ThemeMode != global::Zitadel.Settings.V2.ThemeMode.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) ThemeMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (lightTheme_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LightTheme);
      }
      if (darkTheme_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DarkTheme);
      }
      if (FontUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FontUrl);
      }
      if (HideLoginNameSuffix != false) {
        output.WriteRawTag(32);
        output.WriteBool(HideLoginNameSuffix);
      }
      if (DisableWatermark != false) {
        output.WriteRawTag(40);
        output.WriteBool(DisableWatermark);
      }
      if (ResourceOwnerType != global::Zitadel.Settings.V2.ResourceOwnerType.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) ResourceOwnerType);
      }
      if (ThemeMode != global::Zitadel.Settings.V2.ThemeMode.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) ThemeMode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (lightTheme_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LightTheme);
      }
      if (darkTheme_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DarkTheme);
      }
      if (FontUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FontUrl);
      }
      if (HideLoginNameSuffix != false) {
        size += 1 + 1;
      }
      if (DisableWatermark != false) {
        size += 1 + 1;
      }
      if (ResourceOwnerType != global::Zitadel.Settings.V2.ResourceOwnerType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ResourceOwnerType);
      }
      if (ThemeMode != global::Zitadel.Settings.V2.ThemeMode.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ThemeMode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(BrandingSettings other) {
      if (other == null) {
        return;
      }
      if (other.lightTheme_ != null) {
        if (lightTheme_ == null) {
          LightTheme = new global::Zitadel.Settings.V2.Theme();
        }
        LightTheme.MergeFrom(other.LightTheme);
      }
      if (other.darkTheme_ != null) {
        if (darkTheme_ == null) {
          DarkTheme = new global::Zitadel.Settings.V2.Theme();
        }
        DarkTheme.MergeFrom(other.DarkTheme);
      }
      if (other.FontUrl.Length != 0) {
        FontUrl = other.FontUrl;
      }
      if (other.HideLoginNameSuffix != false) {
        HideLoginNameSuffix = other.HideLoginNameSuffix;
      }
      if (other.DisableWatermark != false) {
        DisableWatermark = other.DisableWatermark;
      }
      if (other.ResourceOwnerType != global::Zitadel.Settings.V2.ResourceOwnerType.Unspecified) {
        ResourceOwnerType = other.ResourceOwnerType;
      }
      if (other.ThemeMode != global::Zitadel.Settings.V2.ThemeMode.Unspecified) {
        ThemeMode = other.ThemeMode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (lightTheme_ == null) {
              LightTheme = new global::Zitadel.Settings.V2.Theme();
            }
            input.ReadMessage(LightTheme);
            break;
          }
          case 18: {
            if (darkTheme_ == null) {
              DarkTheme = new global::Zitadel.Settings.V2.Theme();
            }
            input.ReadMessage(DarkTheme);
            break;
          }
          case 26: {
            FontUrl = input.ReadString();
            break;
          }
          case 32: {
            HideLoginNameSuffix = input.ReadBool();
            break;
          }
          case 40: {
            DisableWatermark = input.ReadBool();
            break;
          }
          case 48: {
            ResourceOwnerType = (global::Zitadel.Settings.V2.ResourceOwnerType) input.ReadEnum();
            break;
          }
          case 56: {
            ThemeMode = (global::Zitadel.Settings.V2.ThemeMode) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (lightTheme_ == null) {
              LightTheme = new global::Zitadel.Settings.V2.Theme();
            }
            input.ReadMessage(LightTheme);
            break;
          }
          case 18: {
            if (darkTheme_ == null) {
              DarkTheme = new global::Zitadel.Settings.V2.Theme();
            }
            input.ReadMessage(DarkTheme);
            break;
          }
          case 26: {
            FontUrl = input.ReadString();
            break;
          }
          case 32: {
            HideLoginNameSuffix = input.ReadBool();
            break;
          }
          case 40: {
            DisableWatermark = input.ReadBool();
            break;
          }
          case 48: {
            ResourceOwnerType = (global::Zitadel.Settings.V2.ResourceOwnerType) input.ReadEnum();
            break;
          }
          case 56: {
            ThemeMode = (global::Zitadel.Settings.V2.ThemeMode) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Theme : pb::IMessage<Theme>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Theme> _parser = new pb::MessageParser<Theme>(() => new Theme());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Theme> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Zitadel.Settings.V2.BrandingSettingsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Theme() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Theme(Theme other) : this() {
      primaryColor_ = other.primaryColor_;
      backgroundColor_ = other.backgroundColor_;
      warnColor_ = other.warnColor_;
      fontColor_ = other.fontColor_;
      logoUrl_ = other.logoUrl_;
      iconUrl_ = other.iconUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Theme Clone() {
      return new Theme(this);
    }

    /// <summary>Field number for the "primary_color" field.</summary>
    public const int PrimaryColorFieldNumber = 1;
    private string primaryColor_ = "";
    /// <summary>
    /// hex value for primary color
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string PrimaryColor {
      get { return primaryColor_; }
      set {
        primaryColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "background_color" field.</summary>
    public const int BackgroundColorFieldNumber = 2;
    private string backgroundColor_ = "";
    /// <summary>
    /// hex value for background color
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string BackgroundColor {
      get { return backgroundColor_; }
      set {
        backgroundColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "warn_color" field.</summary>
    public const int WarnColorFieldNumber = 3;
    private string warnColor_ = "";
    /// <summary>
    /// hex value for warning color
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string WarnColor {
      get { return warnColor_; }
      set {
        warnColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "font_color" field.</summary>
    public const int FontColorFieldNumber = 4;
    private string fontColor_ = "";
    /// <summary>
    /// hex value for font color
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FontColor {
      get { return fontColor_; }
      set {
        fontColor_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "logo_url" field.</summary>
    public const int LogoUrlFieldNumber = 5;
    private string logoUrl_ = "";
    /// <summary>
    /// url where the logo is served
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LogoUrl {
      get { return logoUrl_; }
      set {
        logoUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon_url" field.</summary>
    public const int IconUrlFieldNumber = 6;
    private string iconUrl_ = "";
    /// <summary>
    /// url where the icon is served
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string IconUrl {
      get { return iconUrl_; }
      set {
        iconUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Theme);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Theme other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PrimaryColor != other.PrimaryColor) return false;
      if (BackgroundColor != other.BackgroundColor) return false;
      if (WarnColor != other.WarnColor) return false;
      if (FontColor != other.FontColor) return false;
      if (LogoUrl != other.LogoUrl) return false;
      if (IconUrl != other.IconUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PrimaryColor.Length != 0) hash ^= PrimaryColor.GetHashCode();
      if (BackgroundColor.Length != 0) hash ^= BackgroundColor.GetHashCode();
      if (WarnColor.Length != 0) hash ^= WarnColor.GetHashCode();
      if (FontColor.Length != 0) hash ^= FontColor.GetHashCode();
      if (LogoUrl.Length != 0) hash ^= LogoUrl.GetHashCode();
      if (IconUrl.Length != 0) hash ^= IconUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PrimaryColor.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PrimaryColor);
      }
      if (BackgroundColor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BackgroundColor);
      }
      if (WarnColor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(WarnColor);
      }
      if (FontColor.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FontColor);
      }
      if (LogoUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LogoUrl);
      }
      if (IconUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(IconUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PrimaryColor.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PrimaryColor);
      }
      if (BackgroundColor.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BackgroundColor);
      }
      if (WarnColor.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(WarnColor);
      }
      if (FontColor.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FontColor);
      }
      if (LogoUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LogoUrl);
      }
      if (IconUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(IconUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PrimaryColor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PrimaryColor);
      }
      if (BackgroundColor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BackgroundColor);
      }
      if (WarnColor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WarnColor);
      }
      if (FontColor.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FontColor);
      }
      if (LogoUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LogoUrl);
      }
      if (IconUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IconUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Theme other) {
      if (other == null) {
        return;
      }
      if (other.PrimaryColor.Length != 0) {
        PrimaryColor = other.PrimaryColor;
      }
      if (other.BackgroundColor.Length != 0) {
        BackgroundColor = other.BackgroundColor;
      }
      if (other.WarnColor.Length != 0) {
        WarnColor = other.WarnColor;
      }
      if (other.FontColor.Length != 0) {
        FontColor = other.FontColor;
      }
      if (other.LogoUrl.Length != 0) {
        LogoUrl = other.LogoUrl;
      }
      if (other.IconUrl.Length != 0) {
        IconUrl = other.IconUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PrimaryColor = input.ReadString();
            break;
          }
          case 18: {
            BackgroundColor = input.ReadString();
            break;
          }
          case 26: {
            WarnColor = input.ReadString();
            break;
          }
          case 34: {
            FontColor = input.ReadString();
            break;
          }
          case 42: {
            LogoUrl = input.ReadString();
            break;
          }
          case 50: {
            IconUrl = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            PrimaryColor = input.ReadString();
            break;
          }
          case 18: {
            BackgroundColor = input.ReadString();
            break;
          }
          case 26: {
            WarnColor = input.ReadString();
            break;
          }
          case 34: {
            FontColor = input.ReadString();
            break;
          }
          case 42: {
            LogoUrl = input.ReadString();
            break;
          }
          case 50: {
            IconUrl = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
