// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: zitadel/settings/v2/settings_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Zitadel.Settings.V2 {
  public static partial class SettingsService
  {
    static readonly string __ServiceName = "zitadel.settings.v2.SettingsService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetGeneralSettingsRequest> __Marshaller_zitadel_settings_v2_GetGeneralSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetGeneralSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetGeneralSettingsResponse> __Marshaller_zitadel_settings_v2_GetGeneralSettingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetGeneralSettingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetLoginSettingsRequest> __Marshaller_zitadel_settings_v2_GetLoginSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetLoginSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetLoginSettingsResponse> __Marshaller_zitadel_settings_v2_GetLoginSettingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetLoginSettingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetActiveIdentityProvidersRequest> __Marshaller_zitadel_settings_v2_GetActiveIdentityProvidersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetActiveIdentityProvidersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetActiveIdentityProvidersResponse> __Marshaller_zitadel_settings_v2_GetActiveIdentityProvidersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetActiveIdentityProvidersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetPasswordComplexitySettingsRequest> __Marshaller_zitadel_settings_v2_GetPasswordComplexitySettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetPasswordComplexitySettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetPasswordComplexitySettingsResponse> __Marshaller_zitadel_settings_v2_GetPasswordComplexitySettingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetPasswordComplexitySettingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetPasswordExpirySettingsRequest> __Marshaller_zitadel_settings_v2_GetPasswordExpirySettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetPasswordExpirySettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetPasswordExpirySettingsResponse> __Marshaller_zitadel_settings_v2_GetPasswordExpirySettingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetPasswordExpirySettingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetBrandingSettingsRequest> __Marshaller_zitadel_settings_v2_GetBrandingSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetBrandingSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetBrandingSettingsResponse> __Marshaller_zitadel_settings_v2_GetBrandingSettingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetBrandingSettingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetDomainSettingsRequest> __Marshaller_zitadel_settings_v2_GetDomainSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetDomainSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetDomainSettingsResponse> __Marshaller_zitadel_settings_v2_GetDomainSettingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetDomainSettingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetLegalAndSupportSettingsRequest> __Marshaller_zitadel_settings_v2_GetLegalAndSupportSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetLegalAndSupportSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetLegalAndSupportSettingsResponse> __Marshaller_zitadel_settings_v2_GetLegalAndSupportSettingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetLegalAndSupportSettingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetLockoutSettingsRequest> __Marshaller_zitadel_settings_v2_GetLockoutSettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetLockoutSettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetLockoutSettingsResponse> __Marshaller_zitadel_settings_v2_GetLockoutSettingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetLockoutSettingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetSecuritySettingsRequest> __Marshaller_zitadel_settings_v2_GetSecuritySettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetSecuritySettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetSecuritySettingsResponse> __Marshaller_zitadel_settings_v2_GetSecuritySettingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetSecuritySettingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.SetSecuritySettingsRequest> __Marshaller_zitadel_settings_v2_SetSecuritySettingsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.SetSecuritySettingsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.SetSecuritySettingsResponse> __Marshaller_zitadel_settings_v2_SetSecuritySettingsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.SetSecuritySettingsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetHostedLoginTranslationRequest> __Marshaller_zitadel_settings_v2_GetHostedLoginTranslationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetHostedLoginTranslationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.GetHostedLoginTranslationResponse> __Marshaller_zitadel_settings_v2_GetHostedLoginTranslationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.GetHostedLoginTranslationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.SetHostedLoginTranslationRequest> __Marshaller_zitadel_settings_v2_SetHostedLoginTranslationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.SetHostedLoginTranslationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Settings.V2.SetHostedLoginTranslationResponse> __Marshaller_zitadel_settings_v2_SetHostedLoginTranslationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Settings.V2.SetHostedLoginTranslationResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Settings.V2.GetGeneralSettingsRequest, global::Zitadel.Settings.V2.GetGeneralSettingsResponse> __Method_GetGeneralSettings = new grpc::Method<global::Zitadel.Settings.V2.GetGeneralSettingsRequest, global::Zitadel.Settings.V2.GetGeneralSettingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGeneralSettings",
        __Marshaller_zitadel_settings_v2_GetGeneralSettingsRequest,
        __Marshaller_zitadel_settings_v2_GetGeneralSettingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Settings.V2.GetLoginSettingsRequest, global::Zitadel.Settings.V2.GetLoginSettingsResponse> __Method_GetLoginSettings = new grpc::Method<global::Zitadel.Settings.V2.GetLoginSettingsRequest, global::Zitadel.Settings.V2.GetLoginSettingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLoginSettings",
        __Marshaller_zitadel_settings_v2_GetLoginSettingsRequest,
        __Marshaller_zitadel_settings_v2_GetLoginSettingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Settings.V2.GetActiveIdentityProvidersRequest, global::Zitadel.Settings.V2.GetActiveIdentityProvidersResponse> __Method_GetActiveIdentityProviders = new grpc::Method<global::Zitadel.Settings.V2.GetActiveIdentityProvidersRequest, global::Zitadel.Settings.V2.GetActiveIdentityProvidersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetActiveIdentityProviders",
        __Marshaller_zitadel_settings_v2_GetActiveIdentityProvidersRequest,
        __Marshaller_zitadel_settings_v2_GetActiveIdentityProvidersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Settings.V2.GetPasswordComplexitySettingsRequest, global::Zitadel.Settings.V2.GetPasswordComplexitySettingsResponse> __Method_GetPasswordComplexitySettings = new grpc::Method<global::Zitadel.Settings.V2.GetPasswordComplexitySettingsRequest, global::Zitadel.Settings.V2.GetPasswordComplexitySettingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPasswordComplexitySettings",
        __Marshaller_zitadel_settings_v2_GetPasswordComplexitySettingsRequest,
        __Marshaller_zitadel_settings_v2_GetPasswordComplexitySettingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Settings.V2.GetPasswordExpirySettingsRequest, global::Zitadel.Settings.V2.GetPasswordExpirySettingsResponse> __Method_GetPasswordExpirySettings = new grpc::Method<global::Zitadel.Settings.V2.GetPasswordExpirySettingsRequest, global::Zitadel.Settings.V2.GetPasswordExpirySettingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPasswordExpirySettings",
        __Marshaller_zitadel_settings_v2_GetPasswordExpirySettingsRequest,
        __Marshaller_zitadel_settings_v2_GetPasswordExpirySettingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Settings.V2.GetBrandingSettingsRequest, global::Zitadel.Settings.V2.GetBrandingSettingsResponse> __Method_GetBrandingSettings = new grpc::Method<global::Zitadel.Settings.V2.GetBrandingSettingsRequest, global::Zitadel.Settings.V2.GetBrandingSettingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetBrandingSettings",
        __Marshaller_zitadel_settings_v2_GetBrandingSettingsRequest,
        __Marshaller_zitadel_settings_v2_GetBrandingSettingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Settings.V2.GetDomainSettingsRequest, global::Zitadel.Settings.V2.GetDomainSettingsResponse> __Method_GetDomainSettings = new grpc::Method<global::Zitadel.Settings.V2.GetDomainSettingsRequest, global::Zitadel.Settings.V2.GetDomainSettingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDomainSettings",
        __Marshaller_zitadel_settings_v2_GetDomainSettingsRequest,
        __Marshaller_zitadel_settings_v2_GetDomainSettingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Settings.V2.GetLegalAndSupportSettingsRequest, global::Zitadel.Settings.V2.GetLegalAndSupportSettingsResponse> __Method_GetLegalAndSupportSettings = new grpc::Method<global::Zitadel.Settings.V2.GetLegalAndSupportSettingsRequest, global::Zitadel.Settings.V2.GetLegalAndSupportSettingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLegalAndSupportSettings",
        __Marshaller_zitadel_settings_v2_GetLegalAndSupportSettingsRequest,
        __Marshaller_zitadel_settings_v2_GetLegalAndSupportSettingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Settings.V2.GetLockoutSettingsRequest, global::Zitadel.Settings.V2.GetLockoutSettingsResponse> __Method_GetLockoutSettings = new grpc::Method<global::Zitadel.Settings.V2.GetLockoutSettingsRequest, global::Zitadel.Settings.V2.GetLockoutSettingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLockoutSettings",
        __Marshaller_zitadel_settings_v2_GetLockoutSettingsRequest,
        __Marshaller_zitadel_settings_v2_GetLockoutSettingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Settings.V2.GetSecuritySettingsRequest, global::Zitadel.Settings.V2.GetSecuritySettingsResponse> __Method_GetSecuritySettings = new grpc::Method<global::Zitadel.Settings.V2.GetSecuritySettingsRequest, global::Zitadel.Settings.V2.GetSecuritySettingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSecuritySettings",
        __Marshaller_zitadel_settings_v2_GetSecuritySettingsRequest,
        __Marshaller_zitadel_settings_v2_GetSecuritySettingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Settings.V2.SetSecuritySettingsRequest, global::Zitadel.Settings.V2.SetSecuritySettingsResponse> __Method_SetSecuritySettings = new grpc::Method<global::Zitadel.Settings.V2.SetSecuritySettingsRequest, global::Zitadel.Settings.V2.SetSecuritySettingsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetSecuritySettings",
        __Marshaller_zitadel_settings_v2_SetSecuritySettingsRequest,
        __Marshaller_zitadel_settings_v2_SetSecuritySettingsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Settings.V2.GetHostedLoginTranslationRequest, global::Zitadel.Settings.V2.GetHostedLoginTranslationResponse> __Method_GetHostedLoginTranslation = new grpc::Method<global::Zitadel.Settings.V2.GetHostedLoginTranslationRequest, global::Zitadel.Settings.V2.GetHostedLoginTranslationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHostedLoginTranslation",
        __Marshaller_zitadel_settings_v2_GetHostedLoginTranslationRequest,
        __Marshaller_zitadel_settings_v2_GetHostedLoginTranslationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Settings.V2.SetHostedLoginTranslationRequest, global::Zitadel.Settings.V2.SetHostedLoginTranslationResponse> __Method_SetHostedLoginTranslation = new grpc::Method<global::Zitadel.Settings.V2.SetHostedLoginTranslationRequest, global::Zitadel.Settings.V2.SetHostedLoginTranslationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetHostedLoginTranslation",
        __Marshaller_zitadel_settings_v2_SetHostedLoginTranslationRequest,
        __Marshaller_zitadel_settings_v2_SetHostedLoginTranslationResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Zitadel.Settings.V2.SettingsServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of SettingsService</summary>
    [grpc::BindServiceMethod(typeof(SettingsService), "BindService")]
    public abstract partial class SettingsServiceBase
    {
      /// <summary>
      /// Get basic information over the instance
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Settings.V2.GetGeneralSettingsResponse> GetGeneralSettings(global::Zitadel.Settings.V2.GetGeneralSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the login settings
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Settings.V2.GetLoginSettingsResponse> GetLoginSettings(global::Zitadel.Settings.V2.GetLoginSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the current active identity providers
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Settings.V2.GetActiveIdentityProvidersResponse> GetActiveIdentityProviders(global::Zitadel.Settings.V2.GetActiveIdentityProvidersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the password complexity settings
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Settings.V2.GetPasswordComplexitySettingsResponse> GetPasswordComplexitySettings(global::Zitadel.Settings.V2.GetPasswordComplexitySettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the password expiry settings
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Settings.V2.GetPasswordExpirySettingsResponse> GetPasswordExpirySettings(global::Zitadel.Settings.V2.GetPasswordExpirySettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the current active branding settings
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Settings.V2.GetBrandingSettingsResponse> GetBrandingSettings(global::Zitadel.Settings.V2.GetBrandingSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the domain settings
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Settings.V2.GetDomainSettingsResponse> GetDomainSettings(global::Zitadel.Settings.V2.GetDomainSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the legal and support settings
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Settings.V2.GetLegalAndSupportSettingsResponse> GetLegalAndSupportSettings(global::Zitadel.Settings.V2.GetLegalAndSupportSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the lockout settings
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Settings.V2.GetLockoutSettingsResponse> GetLockoutSettings(global::Zitadel.Settings.V2.GetLockoutSettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the security settings
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Settings.V2.GetSecuritySettingsResponse> GetSecuritySettings(global::Zitadel.Settings.V2.GetSecuritySettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Set the security settings
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Settings.V2.SetSecuritySettingsResponse> SetSecuritySettings(global::Zitadel.Settings.V2.SetSecuritySettingsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get Hosted Login Translation
      ///
      /// Returns the translations in the requested locale for the hosted login.
      /// The translations returned are based on the input level specified (system, instance or organization).
      ///
      /// If the requested level doesn't contain all translations, and ignore_inheritance is set to false,
      /// a merging process fallbacks onto the higher levels ensuring all keys in the file have a translation,
      /// which could be in the default language if the one of the locale is missing on all levels.
      ///
      /// The etag returned in the response represents the hash of the translations as they are stored on DB
      /// and its reliable only if ignore_inheritance = true.
      ///
      /// Required permissions:
      ///   - `iam.policy.read`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Settings.V2.GetHostedLoginTranslationResponse> GetHostedLoginTranslation(global::Zitadel.Settings.V2.GetHostedLoginTranslationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Set Hosted Login Translation
      ///
      /// Sets the input translations at the specified level (instance or organization) for the input language.
      ///
      /// Required permissions:
      ///   - `iam.policy.write`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Settings.V2.SetHostedLoginTranslationResponse> SetHostedLoginTranslation(global::Zitadel.Settings.V2.SetHostedLoginTranslationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for SettingsService</summary>
    public partial class SettingsServiceClient : grpc::ClientBase<SettingsServiceClient>
    {
      /// <summary>Creates a new client for SettingsService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SettingsServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for SettingsService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public SettingsServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SettingsServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected SettingsServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Get basic information over the instance
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetGeneralSettingsResponse GetGeneralSettings(global::Zitadel.Settings.V2.GetGeneralSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGeneralSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get basic information over the instance
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetGeneralSettingsResponse GetGeneralSettings(global::Zitadel.Settings.V2.GetGeneralSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGeneralSettings, null, options, request);
      }
      /// <summary>
      /// Get basic information over the instance
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetGeneralSettingsResponse> GetGeneralSettingsAsync(global::Zitadel.Settings.V2.GetGeneralSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGeneralSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get basic information over the instance
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetGeneralSettingsResponse> GetGeneralSettingsAsync(global::Zitadel.Settings.V2.GetGeneralSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGeneralSettings, null, options, request);
      }
      /// <summary>
      /// Get the login settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetLoginSettingsResponse GetLoginSettings(global::Zitadel.Settings.V2.GetLoginSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLoginSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the login settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetLoginSettingsResponse GetLoginSettings(global::Zitadel.Settings.V2.GetLoginSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLoginSettings, null, options, request);
      }
      /// <summary>
      /// Get the login settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetLoginSettingsResponse> GetLoginSettingsAsync(global::Zitadel.Settings.V2.GetLoginSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLoginSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the login settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetLoginSettingsResponse> GetLoginSettingsAsync(global::Zitadel.Settings.V2.GetLoginSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLoginSettings, null, options, request);
      }
      /// <summary>
      /// Get the current active identity providers
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetActiveIdentityProvidersResponse GetActiveIdentityProviders(global::Zitadel.Settings.V2.GetActiveIdentityProvidersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetActiveIdentityProviders(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the current active identity providers
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetActiveIdentityProvidersResponse GetActiveIdentityProviders(global::Zitadel.Settings.V2.GetActiveIdentityProvidersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetActiveIdentityProviders, null, options, request);
      }
      /// <summary>
      /// Get the current active identity providers
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetActiveIdentityProvidersResponse> GetActiveIdentityProvidersAsync(global::Zitadel.Settings.V2.GetActiveIdentityProvidersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetActiveIdentityProvidersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the current active identity providers
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetActiveIdentityProvidersResponse> GetActiveIdentityProvidersAsync(global::Zitadel.Settings.V2.GetActiveIdentityProvidersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetActiveIdentityProviders, null, options, request);
      }
      /// <summary>
      /// Get the password complexity settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetPasswordComplexitySettingsResponse GetPasswordComplexitySettings(global::Zitadel.Settings.V2.GetPasswordComplexitySettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPasswordComplexitySettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the password complexity settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetPasswordComplexitySettingsResponse GetPasswordComplexitySettings(global::Zitadel.Settings.V2.GetPasswordComplexitySettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPasswordComplexitySettings, null, options, request);
      }
      /// <summary>
      /// Get the password complexity settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetPasswordComplexitySettingsResponse> GetPasswordComplexitySettingsAsync(global::Zitadel.Settings.V2.GetPasswordComplexitySettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPasswordComplexitySettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the password complexity settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetPasswordComplexitySettingsResponse> GetPasswordComplexitySettingsAsync(global::Zitadel.Settings.V2.GetPasswordComplexitySettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPasswordComplexitySettings, null, options, request);
      }
      /// <summary>
      /// Get the password expiry settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetPasswordExpirySettingsResponse GetPasswordExpirySettings(global::Zitadel.Settings.V2.GetPasswordExpirySettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPasswordExpirySettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the password expiry settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetPasswordExpirySettingsResponse GetPasswordExpirySettings(global::Zitadel.Settings.V2.GetPasswordExpirySettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPasswordExpirySettings, null, options, request);
      }
      /// <summary>
      /// Get the password expiry settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetPasswordExpirySettingsResponse> GetPasswordExpirySettingsAsync(global::Zitadel.Settings.V2.GetPasswordExpirySettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPasswordExpirySettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the password expiry settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetPasswordExpirySettingsResponse> GetPasswordExpirySettingsAsync(global::Zitadel.Settings.V2.GetPasswordExpirySettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPasswordExpirySettings, null, options, request);
      }
      /// <summary>
      /// Get the current active branding settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetBrandingSettingsResponse GetBrandingSettings(global::Zitadel.Settings.V2.GetBrandingSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBrandingSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the current active branding settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetBrandingSettingsResponse GetBrandingSettings(global::Zitadel.Settings.V2.GetBrandingSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetBrandingSettings, null, options, request);
      }
      /// <summary>
      /// Get the current active branding settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetBrandingSettingsResponse> GetBrandingSettingsAsync(global::Zitadel.Settings.V2.GetBrandingSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetBrandingSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the current active branding settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetBrandingSettingsResponse> GetBrandingSettingsAsync(global::Zitadel.Settings.V2.GetBrandingSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetBrandingSettings, null, options, request);
      }
      /// <summary>
      /// Get the domain settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetDomainSettingsResponse GetDomainSettings(global::Zitadel.Settings.V2.GetDomainSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDomainSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the domain settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetDomainSettingsResponse GetDomainSettings(global::Zitadel.Settings.V2.GetDomainSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDomainSettings, null, options, request);
      }
      /// <summary>
      /// Get the domain settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetDomainSettingsResponse> GetDomainSettingsAsync(global::Zitadel.Settings.V2.GetDomainSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDomainSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the domain settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetDomainSettingsResponse> GetDomainSettingsAsync(global::Zitadel.Settings.V2.GetDomainSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDomainSettings, null, options, request);
      }
      /// <summary>
      /// Get the legal and support settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetLegalAndSupportSettingsResponse GetLegalAndSupportSettings(global::Zitadel.Settings.V2.GetLegalAndSupportSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLegalAndSupportSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the legal and support settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetLegalAndSupportSettingsResponse GetLegalAndSupportSettings(global::Zitadel.Settings.V2.GetLegalAndSupportSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLegalAndSupportSettings, null, options, request);
      }
      /// <summary>
      /// Get the legal and support settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetLegalAndSupportSettingsResponse> GetLegalAndSupportSettingsAsync(global::Zitadel.Settings.V2.GetLegalAndSupportSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLegalAndSupportSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the legal and support settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetLegalAndSupportSettingsResponse> GetLegalAndSupportSettingsAsync(global::Zitadel.Settings.V2.GetLegalAndSupportSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLegalAndSupportSettings, null, options, request);
      }
      /// <summary>
      /// Get the lockout settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetLockoutSettingsResponse GetLockoutSettings(global::Zitadel.Settings.V2.GetLockoutSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLockoutSettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the lockout settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetLockoutSettingsResponse GetLockoutSettings(global::Zitadel.Settings.V2.GetLockoutSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLockoutSettings, null, options, request);
      }
      /// <summary>
      /// Get the lockout settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetLockoutSettingsResponse> GetLockoutSettingsAsync(global::Zitadel.Settings.V2.GetLockoutSettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLockoutSettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the lockout settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetLockoutSettingsResponse> GetLockoutSettingsAsync(global::Zitadel.Settings.V2.GetLockoutSettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLockoutSettings, null, options, request);
      }
      /// <summary>
      /// Get the security settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetSecuritySettingsResponse GetSecuritySettings(global::Zitadel.Settings.V2.GetSecuritySettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSecuritySettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the security settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetSecuritySettingsResponse GetSecuritySettings(global::Zitadel.Settings.V2.GetSecuritySettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSecuritySettings, null, options, request);
      }
      /// <summary>
      /// Get the security settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetSecuritySettingsResponse> GetSecuritySettingsAsync(global::Zitadel.Settings.V2.GetSecuritySettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSecuritySettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the security settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetSecuritySettingsResponse> GetSecuritySettingsAsync(global::Zitadel.Settings.V2.GetSecuritySettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSecuritySettings, null, options, request);
      }
      /// <summary>
      /// Set the security settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.SetSecuritySettingsResponse SetSecuritySettings(global::Zitadel.Settings.V2.SetSecuritySettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetSecuritySettings(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set the security settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.SetSecuritySettingsResponse SetSecuritySettings(global::Zitadel.Settings.V2.SetSecuritySettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetSecuritySettings, null, options, request);
      }
      /// <summary>
      /// Set the security settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.SetSecuritySettingsResponse> SetSecuritySettingsAsync(global::Zitadel.Settings.V2.SetSecuritySettingsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetSecuritySettingsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set the security settings
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.SetSecuritySettingsResponse> SetSecuritySettingsAsync(global::Zitadel.Settings.V2.SetSecuritySettingsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetSecuritySettings, null, options, request);
      }
      /// <summary>
      /// Get Hosted Login Translation
      ///
      /// Returns the translations in the requested locale for the hosted login.
      /// The translations returned are based on the input level specified (system, instance or organization).
      ///
      /// If the requested level doesn't contain all translations, and ignore_inheritance is set to false,
      /// a merging process fallbacks onto the higher levels ensuring all keys in the file have a translation,
      /// which could be in the default language if the one of the locale is missing on all levels.
      ///
      /// The etag returned in the response represents the hash of the translations as they are stored on DB
      /// and its reliable only if ignore_inheritance = true.
      ///
      /// Required permissions:
      ///   - `iam.policy.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetHostedLoginTranslationResponse GetHostedLoginTranslation(global::Zitadel.Settings.V2.GetHostedLoginTranslationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHostedLoginTranslation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Hosted Login Translation
      ///
      /// Returns the translations in the requested locale for the hosted login.
      /// The translations returned are based on the input level specified (system, instance or organization).
      ///
      /// If the requested level doesn't contain all translations, and ignore_inheritance is set to false,
      /// a merging process fallbacks onto the higher levels ensuring all keys in the file have a translation,
      /// which could be in the default language if the one of the locale is missing on all levels.
      ///
      /// The etag returned in the response represents the hash of the translations as they are stored on DB
      /// and its reliable only if ignore_inheritance = true.
      ///
      /// Required permissions:
      ///   - `iam.policy.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.GetHostedLoginTranslationResponse GetHostedLoginTranslation(global::Zitadel.Settings.V2.GetHostedLoginTranslationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetHostedLoginTranslation, null, options, request);
      }
      /// <summary>
      /// Get Hosted Login Translation
      ///
      /// Returns the translations in the requested locale for the hosted login.
      /// The translations returned are based on the input level specified (system, instance or organization).
      ///
      /// If the requested level doesn't contain all translations, and ignore_inheritance is set to false,
      /// a merging process fallbacks onto the higher levels ensuring all keys in the file have a translation,
      /// which could be in the default language if the one of the locale is missing on all levels.
      ///
      /// The etag returned in the response represents the hash of the translations as they are stored on DB
      /// and its reliable only if ignore_inheritance = true.
      ///
      /// Required permissions:
      ///   - `iam.policy.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetHostedLoginTranslationResponse> GetHostedLoginTranslationAsync(global::Zitadel.Settings.V2.GetHostedLoginTranslationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHostedLoginTranslationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Hosted Login Translation
      ///
      /// Returns the translations in the requested locale for the hosted login.
      /// The translations returned are based on the input level specified (system, instance or organization).
      ///
      /// If the requested level doesn't contain all translations, and ignore_inheritance is set to false,
      /// a merging process fallbacks onto the higher levels ensuring all keys in the file have a translation,
      /// which could be in the default language if the one of the locale is missing on all levels.
      ///
      /// The etag returned in the response represents the hash of the translations as they are stored on DB
      /// and its reliable only if ignore_inheritance = true.
      ///
      /// Required permissions:
      ///   - `iam.policy.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.GetHostedLoginTranslationResponse> GetHostedLoginTranslationAsync(global::Zitadel.Settings.V2.GetHostedLoginTranslationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetHostedLoginTranslation, null, options, request);
      }
      /// <summary>
      /// Set Hosted Login Translation
      ///
      /// Sets the input translations at the specified level (instance or organization) for the input language.
      ///
      /// Required permissions:
      ///   - `iam.policy.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.SetHostedLoginTranslationResponse SetHostedLoginTranslation(global::Zitadel.Settings.V2.SetHostedLoginTranslationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetHostedLoginTranslation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set Hosted Login Translation
      ///
      /// Sets the input translations at the specified level (instance or organization) for the input language.
      ///
      /// Required permissions:
      ///   - `iam.policy.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Settings.V2.SetHostedLoginTranslationResponse SetHostedLoginTranslation(global::Zitadel.Settings.V2.SetHostedLoginTranslationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetHostedLoginTranslation, null, options, request);
      }
      /// <summary>
      /// Set Hosted Login Translation
      ///
      /// Sets the input translations at the specified level (instance or organization) for the input language.
      ///
      /// Required permissions:
      ///   - `iam.policy.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.SetHostedLoginTranslationResponse> SetHostedLoginTranslationAsync(global::Zitadel.Settings.V2.SetHostedLoginTranslationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetHostedLoginTranslationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set Hosted Login Translation
      ///
      /// Sets the input translations at the specified level (instance or organization) for the input language.
      ///
      /// Required permissions:
      ///   - `iam.policy.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Settings.V2.SetHostedLoginTranslationResponse> SetHostedLoginTranslationAsync(global::Zitadel.Settings.V2.SetHostedLoginTranslationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetHostedLoginTranslation, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override SettingsServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new SettingsServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(SettingsServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetGeneralSettings, serviceImpl.GetGeneralSettings)
          .AddMethod(__Method_GetLoginSettings, serviceImpl.GetLoginSettings)
          .AddMethod(__Method_GetActiveIdentityProviders, serviceImpl.GetActiveIdentityProviders)
          .AddMethod(__Method_GetPasswordComplexitySettings, serviceImpl.GetPasswordComplexitySettings)
          .AddMethod(__Method_GetPasswordExpirySettings, serviceImpl.GetPasswordExpirySettings)
          .AddMethod(__Method_GetBrandingSettings, serviceImpl.GetBrandingSettings)
          .AddMethod(__Method_GetDomainSettings, serviceImpl.GetDomainSettings)
          .AddMethod(__Method_GetLegalAndSupportSettings, serviceImpl.GetLegalAndSupportSettings)
          .AddMethod(__Method_GetLockoutSettings, serviceImpl.GetLockoutSettings)
          .AddMethod(__Method_GetSecuritySettings, serviceImpl.GetSecuritySettings)
          .AddMethod(__Method_SetSecuritySettings, serviceImpl.SetSecuritySettings)
          .AddMethod(__Method_GetHostedLoginTranslation, serviceImpl.GetHostedLoginTranslation)
          .AddMethod(__Method_SetHostedLoginTranslation, serviceImpl.SetHostedLoginTranslation).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, SettingsServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetGeneralSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Settings.V2.GetGeneralSettingsRequest, global::Zitadel.Settings.V2.GetGeneralSettingsResponse>(serviceImpl.GetGeneralSettings));
      serviceBinder.AddMethod(__Method_GetLoginSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Settings.V2.GetLoginSettingsRequest, global::Zitadel.Settings.V2.GetLoginSettingsResponse>(serviceImpl.GetLoginSettings));
      serviceBinder.AddMethod(__Method_GetActiveIdentityProviders, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Settings.V2.GetActiveIdentityProvidersRequest, global::Zitadel.Settings.V2.GetActiveIdentityProvidersResponse>(serviceImpl.GetActiveIdentityProviders));
      serviceBinder.AddMethod(__Method_GetPasswordComplexitySettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Settings.V2.GetPasswordComplexitySettingsRequest, global::Zitadel.Settings.V2.GetPasswordComplexitySettingsResponse>(serviceImpl.GetPasswordComplexitySettings));
      serviceBinder.AddMethod(__Method_GetPasswordExpirySettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Settings.V2.GetPasswordExpirySettingsRequest, global::Zitadel.Settings.V2.GetPasswordExpirySettingsResponse>(serviceImpl.GetPasswordExpirySettings));
      serviceBinder.AddMethod(__Method_GetBrandingSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Settings.V2.GetBrandingSettingsRequest, global::Zitadel.Settings.V2.GetBrandingSettingsResponse>(serviceImpl.GetBrandingSettings));
      serviceBinder.AddMethod(__Method_GetDomainSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Settings.V2.GetDomainSettingsRequest, global::Zitadel.Settings.V2.GetDomainSettingsResponse>(serviceImpl.GetDomainSettings));
      serviceBinder.AddMethod(__Method_GetLegalAndSupportSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Settings.V2.GetLegalAndSupportSettingsRequest, global::Zitadel.Settings.V2.GetLegalAndSupportSettingsResponse>(serviceImpl.GetLegalAndSupportSettings));
      serviceBinder.AddMethod(__Method_GetLockoutSettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Settings.V2.GetLockoutSettingsRequest, global::Zitadel.Settings.V2.GetLockoutSettingsResponse>(serviceImpl.GetLockoutSettings));
      serviceBinder.AddMethod(__Method_GetSecuritySettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Settings.V2.GetSecuritySettingsRequest, global::Zitadel.Settings.V2.GetSecuritySettingsResponse>(serviceImpl.GetSecuritySettings));
      serviceBinder.AddMethod(__Method_SetSecuritySettings, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Settings.V2.SetSecuritySettingsRequest, global::Zitadel.Settings.V2.SetSecuritySettingsResponse>(serviceImpl.SetSecuritySettings));
      serviceBinder.AddMethod(__Method_GetHostedLoginTranslation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Settings.V2.GetHostedLoginTranslationRequest, global::Zitadel.Settings.V2.GetHostedLoginTranslationResponse>(serviceImpl.GetHostedLoginTranslation));
      serviceBinder.AddMethod(__Method_SetHostedLoginTranslation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Settings.V2.SetHostedLoginTranslationRequest, global::Zitadel.Settings.V2.SetHostedLoginTranslationResponse>(serviceImpl.SetHostedLoginTranslation));
    }

  }
}
#endregion
