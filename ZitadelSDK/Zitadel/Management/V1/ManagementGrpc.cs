// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: zitadel/management.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Zitadel.Management.V1 {
  public static partial class ManagementService
  {
    static readonly string __ServiceName = "zitadel.management.v1.ManagementService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.HealthzRequest> __Marshaller_zitadel_management_v1_HealthzRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.HealthzRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.HealthzResponse> __Marshaller_zitadel_management_v1_HealthzResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.HealthzResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetOIDCInformationRequest> __Marshaller_zitadel_management_v1_GetOIDCInformationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetOIDCInformationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetOIDCInformationResponse> __Marshaller_zitadel_management_v1_GetOIDCInformationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetOIDCInformationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetIAMRequest> __Marshaller_zitadel_management_v1_GetIAMRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetIAMRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetIAMResponse> __Marshaller_zitadel_management_v1_GetIAMResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetIAMResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetSupportedLanguagesRequest> __Marshaller_zitadel_management_v1_GetSupportedLanguagesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetSupportedLanguagesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetSupportedLanguagesResponse> __Marshaller_zitadel_management_v1_GetSupportedLanguagesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetSupportedLanguagesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetUserByIDRequest> __Marshaller_zitadel_management_v1_GetUserByIDRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetUserByIDRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetUserByIDResponse> __Marshaller_zitadel_management_v1_GetUserByIDResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetUserByIDResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetUserByLoginNameGlobalRequest> __Marshaller_zitadel_management_v1_GetUserByLoginNameGlobalRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetUserByLoginNameGlobalRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetUserByLoginNameGlobalResponse> __Marshaller_zitadel_management_v1_GetUserByLoginNameGlobalResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetUserByLoginNameGlobalResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListUsersRequest> __Marshaller_zitadel_management_v1_ListUsersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListUsersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListUsersResponse> __Marshaller_zitadel_management_v1_ListUsersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListUsersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListUserChangesRequest> __Marshaller_zitadel_management_v1_ListUserChangesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListUserChangesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListUserChangesResponse> __Marshaller_zitadel_management_v1_ListUserChangesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListUserChangesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.IsUserUniqueRequest> __Marshaller_zitadel_management_v1_IsUserUniqueRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.IsUserUniqueRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.IsUserUniqueResponse> __Marshaller_zitadel_management_v1_IsUserUniqueResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.IsUserUniqueResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddHumanUserRequest> __Marshaller_zitadel_management_v1_AddHumanUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddHumanUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddHumanUserResponse> __Marshaller_zitadel_management_v1_AddHumanUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddHumanUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ImportHumanUserRequest> __Marshaller_zitadel_management_v1_ImportHumanUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ImportHumanUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ImportHumanUserResponse> __Marshaller_zitadel_management_v1_ImportHumanUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ImportHumanUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddMachineUserRequest> __Marshaller_zitadel_management_v1_AddMachineUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddMachineUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddMachineUserResponse> __Marshaller_zitadel_management_v1_AddMachineUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddMachineUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeactivateUserRequest> __Marshaller_zitadel_management_v1_DeactivateUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeactivateUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeactivateUserResponse> __Marshaller_zitadel_management_v1_DeactivateUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeactivateUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ReactivateUserRequest> __Marshaller_zitadel_management_v1_ReactivateUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ReactivateUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ReactivateUserResponse> __Marshaller_zitadel_management_v1_ReactivateUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ReactivateUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.LockUserRequest> __Marshaller_zitadel_management_v1_LockUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.LockUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.LockUserResponse> __Marshaller_zitadel_management_v1_LockUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.LockUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UnlockUserRequest> __Marshaller_zitadel_management_v1_UnlockUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UnlockUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UnlockUserResponse> __Marshaller_zitadel_management_v1_UnlockUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UnlockUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveUserRequest> __Marshaller_zitadel_management_v1_RemoveUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveUserResponse> __Marshaller_zitadel_management_v1_RemoveUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateUserNameRequest> __Marshaller_zitadel_management_v1_UpdateUserNameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateUserNameRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateUserNameResponse> __Marshaller_zitadel_management_v1_UpdateUserNameResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateUserNameResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetUserMetadataRequest> __Marshaller_zitadel_management_v1_SetUserMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetUserMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetUserMetadataResponse> __Marshaller_zitadel_management_v1_SetUserMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetUserMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.BulkSetUserMetadataRequest> __Marshaller_zitadel_management_v1_BulkSetUserMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.BulkSetUserMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.BulkSetUserMetadataResponse> __Marshaller_zitadel_management_v1_BulkSetUserMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.BulkSetUserMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListUserMetadataRequest> __Marshaller_zitadel_management_v1_ListUserMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListUserMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListUserMetadataResponse> __Marshaller_zitadel_management_v1_ListUserMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListUserMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetUserMetadataRequest> __Marshaller_zitadel_management_v1_GetUserMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetUserMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetUserMetadataResponse> __Marshaller_zitadel_management_v1_GetUserMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetUserMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveUserMetadataRequest> __Marshaller_zitadel_management_v1_RemoveUserMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveUserMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveUserMetadataResponse> __Marshaller_zitadel_management_v1_RemoveUserMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveUserMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.BulkRemoveUserMetadataRequest> __Marshaller_zitadel_management_v1_BulkRemoveUserMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.BulkRemoveUserMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.BulkRemoveUserMetadataResponse> __Marshaller_zitadel_management_v1_BulkRemoveUserMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.BulkRemoveUserMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetHumanProfileRequest> __Marshaller_zitadel_management_v1_GetHumanProfileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetHumanProfileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetHumanProfileResponse> __Marshaller_zitadel_management_v1_GetHumanProfileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetHumanProfileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateHumanProfileRequest> __Marshaller_zitadel_management_v1_UpdateHumanProfileRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateHumanProfileRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateHumanProfileResponse> __Marshaller_zitadel_management_v1_UpdateHumanProfileResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateHumanProfileResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetHumanEmailRequest> __Marshaller_zitadel_management_v1_GetHumanEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetHumanEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetHumanEmailResponse> __Marshaller_zitadel_management_v1_GetHumanEmailResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetHumanEmailResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateHumanEmailRequest> __Marshaller_zitadel_management_v1_UpdateHumanEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateHumanEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateHumanEmailResponse> __Marshaller_zitadel_management_v1_UpdateHumanEmailResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateHumanEmailResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResendHumanInitializationRequest> __Marshaller_zitadel_management_v1_ResendHumanInitializationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResendHumanInitializationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResendHumanInitializationResponse> __Marshaller_zitadel_management_v1_ResendHumanInitializationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResendHumanInitializationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResendHumanEmailVerificationRequest> __Marshaller_zitadel_management_v1_ResendHumanEmailVerificationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResendHumanEmailVerificationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResendHumanEmailVerificationResponse> __Marshaller_zitadel_management_v1_ResendHumanEmailVerificationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResendHumanEmailVerificationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetHumanPhoneRequest> __Marshaller_zitadel_management_v1_GetHumanPhoneRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetHumanPhoneRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetHumanPhoneResponse> __Marshaller_zitadel_management_v1_GetHumanPhoneResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetHumanPhoneResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateHumanPhoneRequest> __Marshaller_zitadel_management_v1_UpdateHumanPhoneRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateHumanPhoneRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateHumanPhoneResponse> __Marshaller_zitadel_management_v1_UpdateHumanPhoneResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateHumanPhoneResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveHumanPhoneRequest> __Marshaller_zitadel_management_v1_RemoveHumanPhoneRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveHumanPhoneRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveHumanPhoneResponse> __Marshaller_zitadel_management_v1_RemoveHumanPhoneResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveHumanPhoneResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResendHumanPhoneVerificationRequest> __Marshaller_zitadel_management_v1_ResendHumanPhoneVerificationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResendHumanPhoneVerificationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResendHumanPhoneVerificationResponse> __Marshaller_zitadel_management_v1_ResendHumanPhoneVerificationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResendHumanPhoneVerificationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveHumanAvatarRequest> __Marshaller_zitadel_management_v1_RemoveHumanAvatarRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveHumanAvatarRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveHumanAvatarResponse> __Marshaller_zitadel_management_v1_RemoveHumanAvatarResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveHumanAvatarResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetHumanInitialPasswordRequest> __Marshaller_zitadel_management_v1_SetHumanInitialPasswordRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetHumanInitialPasswordRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetHumanInitialPasswordResponse> __Marshaller_zitadel_management_v1_SetHumanInitialPasswordResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetHumanInitialPasswordResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetHumanPasswordRequest> __Marshaller_zitadel_management_v1_SetHumanPasswordRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetHumanPasswordRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetHumanPasswordResponse> __Marshaller_zitadel_management_v1_SetHumanPasswordResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetHumanPasswordResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SendHumanResetPasswordNotificationRequest> __Marshaller_zitadel_management_v1_SendHumanResetPasswordNotificationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SendHumanResetPasswordNotificationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SendHumanResetPasswordNotificationResponse> __Marshaller_zitadel_management_v1_SendHumanResetPasswordNotificationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SendHumanResetPasswordNotificationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListHumanAuthFactorsRequest> __Marshaller_zitadel_management_v1_ListHumanAuthFactorsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListHumanAuthFactorsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListHumanAuthFactorsResponse> __Marshaller_zitadel_management_v1_ListHumanAuthFactorsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListHumanAuthFactorsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPRequest> __Marshaller_zitadel_management_v1_RemoveHumanAuthFactorOTPRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPResponse> __Marshaller_zitadel_management_v1_RemoveHumanAuthFactorOTPResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FRequest> __Marshaller_zitadel_management_v1_RemoveHumanAuthFactorU2FRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FResponse> __Marshaller_zitadel_management_v1_RemoveHumanAuthFactorU2FResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSRequest> __Marshaller_zitadel_management_v1_RemoveHumanAuthFactorOTPSMSRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSResponse> __Marshaller_zitadel_management_v1_RemoveHumanAuthFactorOTPSMSResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailRequest> __Marshaller_zitadel_management_v1_RemoveHumanAuthFactorOTPEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailResponse> __Marshaller_zitadel_management_v1_RemoveHumanAuthFactorOTPEmailResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListHumanPasswordlessRequest> __Marshaller_zitadel_management_v1_ListHumanPasswordlessRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListHumanPasswordlessRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListHumanPasswordlessResponse> __Marshaller_zitadel_management_v1_ListHumanPasswordlessResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListHumanPasswordlessResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddPasswordlessRegistrationRequest> __Marshaller_zitadel_management_v1_AddPasswordlessRegistrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddPasswordlessRegistrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddPasswordlessRegistrationResponse> __Marshaller_zitadel_management_v1_AddPasswordlessRegistrationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddPasswordlessRegistrationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SendPasswordlessRegistrationRequest> __Marshaller_zitadel_management_v1_SendPasswordlessRegistrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SendPasswordlessRegistrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SendPasswordlessRegistrationResponse> __Marshaller_zitadel_management_v1_SendPasswordlessRegistrationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SendPasswordlessRegistrationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveHumanPasswordlessRequest> __Marshaller_zitadel_management_v1_RemoveHumanPasswordlessRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveHumanPasswordlessRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveHumanPasswordlessResponse> __Marshaller_zitadel_management_v1_RemoveHumanPasswordlessResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveHumanPasswordlessResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateMachineRequest> __Marshaller_zitadel_management_v1_UpdateMachineRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateMachineRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateMachineResponse> __Marshaller_zitadel_management_v1_UpdateMachineResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateMachineResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GenerateMachineSecretRequest> __Marshaller_zitadel_management_v1_GenerateMachineSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GenerateMachineSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GenerateMachineSecretResponse> __Marshaller_zitadel_management_v1_GenerateMachineSecretResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GenerateMachineSecretResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveMachineSecretRequest> __Marshaller_zitadel_management_v1_RemoveMachineSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveMachineSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveMachineSecretResponse> __Marshaller_zitadel_management_v1_RemoveMachineSecretResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveMachineSecretResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetMachineKeyByIDsRequest> __Marshaller_zitadel_management_v1_GetMachineKeyByIDsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetMachineKeyByIDsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetMachineKeyByIDsResponse> __Marshaller_zitadel_management_v1_GetMachineKeyByIDsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetMachineKeyByIDsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListMachineKeysRequest> __Marshaller_zitadel_management_v1_ListMachineKeysRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListMachineKeysRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListMachineKeysResponse> __Marshaller_zitadel_management_v1_ListMachineKeysResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListMachineKeysResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddMachineKeyRequest> __Marshaller_zitadel_management_v1_AddMachineKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddMachineKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddMachineKeyResponse> __Marshaller_zitadel_management_v1_AddMachineKeyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddMachineKeyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveMachineKeyRequest> __Marshaller_zitadel_management_v1_RemoveMachineKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveMachineKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveMachineKeyResponse> __Marshaller_zitadel_management_v1_RemoveMachineKeyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveMachineKeyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsRequest> __Marshaller_zitadel_management_v1_GetPersonalAccessTokenByIDsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsResponse> __Marshaller_zitadel_management_v1_GetPersonalAccessTokenByIDsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListPersonalAccessTokensRequest> __Marshaller_zitadel_management_v1_ListPersonalAccessTokensRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListPersonalAccessTokensRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListPersonalAccessTokensResponse> __Marshaller_zitadel_management_v1_ListPersonalAccessTokensResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListPersonalAccessTokensResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddPersonalAccessTokenRequest> __Marshaller_zitadel_management_v1_AddPersonalAccessTokenRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddPersonalAccessTokenRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddPersonalAccessTokenResponse> __Marshaller_zitadel_management_v1_AddPersonalAccessTokenResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddPersonalAccessTokenResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemovePersonalAccessTokenRequest> __Marshaller_zitadel_management_v1_RemovePersonalAccessTokenRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemovePersonalAccessTokenRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemovePersonalAccessTokenResponse> __Marshaller_zitadel_management_v1_RemovePersonalAccessTokenResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemovePersonalAccessTokenResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListHumanLinkedIDPsRequest> __Marshaller_zitadel_management_v1_ListHumanLinkedIDPsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListHumanLinkedIDPsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListHumanLinkedIDPsResponse> __Marshaller_zitadel_management_v1_ListHumanLinkedIDPsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListHumanLinkedIDPsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveHumanLinkedIDPRequest> __Marshaller_zitadel_management_v1_RemoveHumanLinkedIDPRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveHumanLinkedIDPRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveHumanLinkedIDPResponse> __Marshaller_zitadel_management_v1_RemoveHumanLinkedIDPResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveHumanLinkedIDPResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListUserMembershipsRequest> __Marshaller_zitadel_management_v1_ListUserMembershipsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListUserMembershipsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListUserMembershipsResponse> __Marshaller_zitadel_management_v1_ListUserMembershipsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListUserMembershipsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetMyOrgRequest> __Marshaller_zitadel_management_v1_GetMyOrgRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetMyOrgRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetMyOrgResponse> __Marshaller_zitadel_management_v1_GetMyOrgResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetMyOrgResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetOrgByDomainGlobalRequest> __Marshaller_zitadel_management_v1_GetOrgByDomainGlobalRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetOrgByDomainGlobalRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetOrgByDomainGlobalResponse> __Marshaller_zitadel_management_v1_GetOrgByDomainGlobalResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetOrgByDomainGlobalResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListOrgChangesRequest> __Marshaller_zitadel_management_v1_ListOrgChangesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListOrgChangesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListOrgChangesResponse> __Marshaller_zitadel_management_v1_ListOrgChangesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListOrgChangesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddOrgRequest> __Marshaller_zitadel_management_v1_AddOrgRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddOrgRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddOrgResponse> __Marshaller_zitadel_management_v1_AddOrgResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddOrgResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateOrgRequest> __Marshaller_zitadel_management_v1_UpdateOrgRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateOrgRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateOrgResponse> __Marshaller_zitadel_management_v1_UpdateOrgResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateOrgResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeactivateOrgRequest> __Marshaller_zitadel_management_v1_DeactivateOrgRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeactivateOrgRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeactivateOrgResponse> __Marshaller_zitadel_management_v1_DeactivateOrgResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeactivateOrgResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ReactivateOrgRequest> __Marshaller_zitadel_management_v1_ReactivateOrgRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ReactivateOrgRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ReactivateOrgResponse> __Marshaller_zitadel_management_v1_ReactivateOrgResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ReactivateOrgResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveOrgRequest> __Marshaller_zitadel_management_v1_RemoveOrgRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveOrgRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveOrgResponse> __Marshaller_zitadel_management_v1_RemoveOrgResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveOrgResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetOrgMetadataRequest> __Marshaller_zitadel_management_v1_SetOrgMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetOrgMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetOrgMetadataResponse> __Marshaller_zitadel_management_v1_SetOrgMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetOrgMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.BulkSetOrgMetadataRequest> __Marshaller_zitadel_management_v1_BulkSetOrgMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.BulkSetOrgMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.BulkSetOrgMetadataResponse> __Marshaller_zitadel_management_v1_BulkSetOrgMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.BulkSetOrgMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListOrgMetadataRequest> __Marshaller_zitadel_management_v1_ListOrgMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListOrgMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListOrgMetadataResponse> __Marshaller_zitadel_management_v1_ListOrgMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListOrgMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetOrgMetadataRequest> __Marshaller_zitadel_management_v1_GetOrgMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetOrgMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetOrgMetadataResponse> __Marshaller_zitadel_management_v1_GetOrgMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetOrgMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveOrgMetadataRequest> __Marshaller_zitadel_management_v1_RemoveOrgMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveOrgMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveOrgMetadataResponse> __Marshaller_zitadel_management_v1_RemoveOrgMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveOrgMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.BulkRemoveOrgMetadataRequest> __Marshaller_zitadel_management_v1_BulkRemoveOrgMetadataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.BulkRemoveOrgMetadataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.BulkRemoveOrgMetadataResponse> __Marshaller_zitadel_management_v1_BulkRemoveOrgMetadataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.BulkRemoveOrgMetadataResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddOrgDomainRequest> __Marshaller_zitadel_management_v1_AddOrgDomainRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddOrgDomainRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddOrgDomainResponse> __Marshaller_zitadel_management_v1_AddOrgDomainResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddOrgDomainResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListOrgDomainsRequest> __Marshaller_zitadel_management_v1_ListOrgDomainsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListOrgDomainsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListOrgDomainsResponse> __Marshaller_zitadel_management_v1_ListOrgDomainsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListOrgDomainsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveOrgDomainRequest> __Marshaller_zitadel_management_v1_RemoveOrgDomainRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveOrgDomainRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveOrgDomainResponse> __Marshaller_zitadel_management_v1_RemoveOrgDomainResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveOrgDomainResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GenerateOrgDomainValidationRequest> __Marshaller_zitadel_management_v1_GenerateOrgDomainValidationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GenerateOrgDomainValidationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GenerateOrgDomainValidationResponse> __Marshaller_zitadel_management_v1_GenerateOrgDomainValidationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GenerateOrgDomainValidationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ValidateOrgDomainRequest> __Marshaller_zitadel_management_v1_ValidateOrgDomainRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ValidateOrgDomainRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ValidateOrgDomainResponse> __Marshaller_zitadel_management_v1_ValidateOrgDomainResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ValidateOrgDomainResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetPrimaryOrgDomainRequest> __Marshaller_zitadel_management_v1_SetPrimaryOrgDomainRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetPrimaryOrgDomainRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetPrimaryOrgDomainResponse> __Marshaller_zitadel_management_v1_SetPrimaryOrgDomainResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetPrimaryOrgDomainResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListOrgMemberRolesRequest> __Marshaller_zitadel_management_v1_ListOrgMemberRolesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListOrgMemberRolesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListOrgMemberRolesResponse> __Marshaller_zitadel_management_v1_ListOrgMemberRolesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListOrgMemberRolesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListOrgMembersRequest> __Marshaller_zitadel_management_v1_ListOrgMembersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListOrgMembersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListOrgMembersResponse> __Marshaller_zitadel_management_v1_ListOrgMembersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListOrgMembersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddOrgMemberRequest> __Marshaller_zitadel_management_v1_AddOrgMemberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddOrgMemberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddOrgMemberResponse> __Marshaller_zitadel_management_v1_AddOrgMemberResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddOrgMemberResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateOrgMemberRequest> __Marshaller_zitadel_management_v1_UpdateOrgMemberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateOrgMemberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateOrgMemberResponse> __Marshaller_zitadel_management_v1_UpdateOrgMemberResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateOrgMemberResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveOrgMemberRequest> __Marshaller_zitadel_management_v1_RemoveOrgMemberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveOrgMemberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveOrgMemberResponse> __Marshaller_zitadel_management_v1_RemoveOrgMemberResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveOrgMemberResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetProjectByIDRequest> __Marshaller_zitadel_management_v1_GetProjectByIDRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetProjectByIDRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetProjectByIDResponse> __Marshaller_zitadel_management_v1_GetProjectByIDResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetProjectByIDResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetGrantedProjectByIDRequest> __Marshaller_zitadel_management_v1_GetGrantedProjectByIDRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetGrantedProjectByIDRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetGrantedProjectByIDResponse> __Marshaller_zitadel_management_v1_GetGrantedProjectByIDResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetGrantedProjectByIDResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProjectsRequest> __Marshaller_zitadel_management_v1_ListProjectsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProjectsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProjectsResponse> __Marshaller_zitadel_management_v1_ListProjectsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProjectsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListGrantedProjectsRequest> __Marshaller_zitadel_management_v1_ListGrantedProjectsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListGrantedProjectsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListGrantedProjectsResponse> __Marshaller_zitadel_management_v1_ListGrantedProjectsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListGrantedProjectsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListGrantedProjectRolesRequest> __Marshaller_zitadel_management_v1_ListGrantedProjectRolesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListGrantedProjectRolesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListGrantedProjectRolesResponse> __Marshaller_zitadel_management_v1_ListGrantedProjectRolesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListGrantedProjectRolesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProjectChangesRequest> __Marshaller_zitadel_management_v1_ListProjectChangesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProjectChangesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProjectChangesResponse> __Marshaller_zitadel_management_v1_ListProjectChangesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProjectChangesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddProjectRequest> __Marshaller_zitadel_management_v1_AddProjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddProjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddProjectResponse> __Marshaller_zitadel_management_v1_AddProjectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddProjectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateProjectRequest> __Marshaller_zitadel_management_v1_UpdateProjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateProjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateProjectResponse> __Marshaller_zitadel_management_v1_UpdateProjectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateProjectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeactivateProjectRequest> __Marshaller_zitadel_management_v1_DeactivateProjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeactivateProjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeactivateProjectResponse> __Marshaller_zitadel_management_v1_DeactivateProjectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeactivateProjectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ReactivateProjectRequest> __Marshaller_zitadel_management_v1_ReactivateProjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ReactivateProjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ReactivateProjectResponse> __Marshaller_zitadel_management_v1_ReactivateProjectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ReactivateProjectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveProjectRequest> __Marshaller_zitadel_management_v1_RemoveProjectRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveProjectRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveProjectResponse> __Marshaller_zitadel_management_v1_RemoveProjectResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveProjectResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProjectRolesRequest> __Marshaller_zitadel_management_v1_ListProjectRolesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProjectRolesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProjectRolesResponse> __Marshaller_zitadel_management_v1_ListProjectRolesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProjectRolesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddProjectRoleRequest> __Marshaller_zitadel_management_v1_AddProjectRoleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddProjectRoleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddProjectRoleResponse> __Marshaller_zitadel_management_v1_AddProjectRoleResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddProjectRoleResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.BulkAddProjectRolesRequest> __Marshaller_zitadel_management_v1_BulkAddProjectRolesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.BulkAddProjectRolesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.BulkAddProjectRolesResponse> __Marshaller_zitadel_management_v1_BulkAddProjectRolesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.BulkAddProjectRolesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateProjectRoleRequest> __Marshaller_zitadel_management_v1_UpdateProjectRoleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateProjectRoleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateProjectRoleResponse> __Marshaller_zitadel_management_v1_UpdateProjectRoleResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateProjectRoleResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveProjectRoleRequest> __Marshaller_zitadel_management_v1_RemoveProjectRoleRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveProjectRoleRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveProjectRoleResponse> __Marshaller_zitadel_management_v1_RemoveProjectRoleResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveProjectRoleResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProjectMemberRolesRequest> __Marshaller_zitadel_management_v1_ListProjectMemberRolesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProjectMemberRolesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProjectMemberRolesResponse> __Marshaller_zitadel_management_v1_ListProjectMemberRolesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProjectMemberRolesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProjectMembersRequest> __Marshaller_zitadel_management_v1_ListProjectMembersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProjectMembersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProjectMembersResponse> __Marshaller_zitadel_management_v1_ListProjectMembersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProjectMembersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddProjectMemberRequest> __Marshaller_zitadel_management_v1_AddProjectMemberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddProjectMemberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddProjectMemberResponse> __Marshaller_zitadel_management_v1_AddProjectMemberResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddProjectMemberResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateProjectMemberRequest> __Marshaller_zitadel_management_v1_UpdateProjectMemberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateProjectMemberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateProjectMemberResponse> __Marshaller_zitadel_management_v1_UpdateProjectMemberResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateProjectMemberResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveProjectMemberRequest> __Marshaller_zitadel_management_v1_RemoveProjectMemberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveProjectMemberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveProjectMemberResponse> __Marshaller_zitadel_management_v1_RemoveProjectMemberResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveProjectMemberResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetAppByIDRequest> __Marshaller_zitadel_management_v1_GetAppByIDRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetAppByIDRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetAppByIDResponse> __Marshaller_zitadel_management_v1_GetAppByIDResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetAppByIDResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListAppsRequest> __Marshaller_zitadel_management_v1_ListAppsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListAppsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListAppsResponse> __Marshaller_zitadel_management_v1_ListAppsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListAppsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListAppChangesRequest> __Marshaller_zitadel_management_v1_ListAppChangesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListAppChangesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListAppChangesResponse> __Marshaller_zitadel_management_v1_ListAppChangesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListAppChangesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddOIDCAppRequest> __Marshaller_zitadel_management_v1_AddOIDCAppRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddOIDCAppRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddOIDCAppResponse> __Marshaller_zitadel_management_v1_AddOIDCAppResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddOIDCAppResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddSAMLAppRequest> __Marshaller_zitadel_management_v1_AddSAMLAppRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddSAMLAppRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddSAMLAppResponse> __Marshaller_zitadel_management_v1_AddSAMLAppResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddSAMLAppResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddAPIAppRequest> __Marshaller_zitadel_management_v1_AddAPIAppRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddAPIAppRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddAPIAppResponse> __Marshaller_zitadel_management_v1_AddAPIAppResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddAPIAppResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateAppRequest> __Marshaller_zitadel_management_v1_UpdateAppRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateAppRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateAppResponse> __Marshaller_zitadel_management_v1_UpdateAppResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateAppResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateOIDCAppConfigRequest> __Marshaller_zitadel_management_v1_UpdateOIDCAppConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateOIDCAppConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateOIDCAppConfigResponse> __Marshaller_zitadel_management_v1_UpdateOIDCAppConfigResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateOIDCAppConfigResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateSAMLAppConfigRequest> __Marshaller_zitadel_management_v1_UpdateSAMLAppConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateSAMLAppConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateSAMLAppConfigResponse> __Marshaller_zitadel_management_v1_UpdateSAMLAppConfigResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateSAMLAppConfigResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateAPIAppConfigRequest> __Marshaller_zitadel_management_v1_UpdateAPIAppConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateAPIAppConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateAPIAppConfigResponse> __Marshaller_zitadel_management_v1_UpdateAPIAppConfigResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateAPIAppConfigResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeactivateAppRequest> __Marshaller_zitadel_management_v1_DeactivateAppRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeactivateAppRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeactivateAppResponse> __Marshaller_zitadel_management_v1_DeactivateAppResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeactivateAppResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ReactivateAppRequest> __Marshaller_zitadel_management_v1_ReactivateAppRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ReactivateAppRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ReactivateAppResponse> __Marshaller_zitadel_management_v1_ReactivateAppResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ReactivateAppResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveAppRequest> __Marshaller_zitadel_management_v1_RemoveAppRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveAppRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveAppResponse> __Marshaller_zitadel_management_v1_RemoveAppResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveAppResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RegenerateOIDCClientSecretRequest> __Marshaller_zitadel_management_v1_RegenerateOIDCClientSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RegenerateOIDCClientSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RegenerateOIDCClientSecretResponse> __Marshaller_zitadel_management_v1_RegenerateOIDCClientSecretResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RegenerateOIDCClientSecretResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RegenerateAPIClientSecretRequest> __Marshaller_zitadel_management_v1_RegenerateAPIClientSecretRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RegenerateAPIClientSecretRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RegenerateAPIClientSecretResponse> __Marshaller_zitadel_management_v1_RegenerateAPIClientSecretResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RegenerateAPIClientSecretResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetAppKeyRequest> __Marshaller_zitadel_management_v1_GetAppKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetAppKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetAppKeyResponse> __Marshaller_zitadel_management_v1_GetAppKeyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetAppKeyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListAppKeysRequest> __Marshaller_zitadel_management_v1_ListAppKeysRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListAppKeysRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListAppKeysResponse> __Marshaller_zitadel_management_v1_ListAppKeysResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListAppKeysResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddAppKeyRequest> __Marshaller_zitadel_management_v1_AddAppKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddAppKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddAppKeyResponse> __Marshaller_zitadel_management_v1_AddAppKeyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddAppKeyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveAppKeyRequest> __Marshaller_zitadel_management_v1_RemoveAppKeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveAppKeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveAppKeyResponse> __Marshaller_zitadel_management_v1_RemoveAppKeyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveAppKeyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProjectGrantChangesRequest> __Marshaller_zitadel_management_v1_ListProjectGrantChangesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProjectGrantChangesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProjectGrantChangesResponse> __Marshaller_zitadel_management_v1_ListProjectGrantChangesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProjectGrantChangesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetProjectGrantByIDRequest> __Marshaller_zitadel_management_v1_GetProjectGrantByIDRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetProjectGrantByIDRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetProjectGrantByIDResponse> __Marshaller_zitadel_management_v1_GetProjectGrantByIDResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetProjectGrantByIDResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProjectGrantsRequest> __Marshaller_zitadel_management_v1_ListProjectGrantsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProjectGrantsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProjectGrantsResponse> __Marshaller_zitadel_management_v1_ListProjectGrantsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProjectGrantsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListAllProjectGrantsRequest> __Marshaller_zitadel_management_v1_ListAllProjectGrantsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListAllProjectGrantsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListAllProjectGrantsResponse> __Marshaller_zitadel_management_v1_ListAllProjectGrantsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListAllProjectGrantsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddProjectGrantRequest> __Marshaller_zitadel_management_v1_AddProjectGrantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddProjectGrantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddProjectGrantResponse> __Marshaller_zitadel_management_v1_AddProjectGrantResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddProjectGrantResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateProjectGrantRequest> __Marshaller_zitadel_management_v1_UpdateProjectGrantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateProjectGrantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateProjectGrantResponse> __Marshaller_zitadel_management_v1_UpdateProjectGrantResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateProjectGrantResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeactivateProjectGrantRequest> __Marshaller_zitadel_management_v1_DeactivateProjectGrantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeactivateProjectGrantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeactivateProjectGrantResponse> __Marshaller_zitadel_management_v1_DeactivateProjectGrantResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeactivateProjectGrantResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ReactivateProjectGrantRequest> __Marshaller_zitadel_management_v1_ReactivateProjectGrantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ReactivateProjectGrantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ReactivateProjectGrantResponse> __Marshaller_zitadel_management_v1_ReactivateProjectGrantResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ReactivateProjectGrantResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveProjectGrantRequest> __Marshaller_zitadel_management_v1_RemoveProjectGrantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveProjectGrantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveProjectGrantResponse> __Marshaller_zitadel_management_v1_RemoveProjectGrantResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveProjectGrantResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProjectGrantMemberRolesRequest> __Marshaller_zitadel_management_v1_ListProjectGrantMemberRolesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProjectGrantMemberRolesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProjectGrantMemberRolesResponse> __Marshaller_zitadel_management_v1_ListProjectGrantMemberRolesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProjectGrantMemberRolesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProjectGrantMembersRequest> __Marshaller_zitadel_management_v1_ListProjectGrantMembersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProjectGrantMembersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProjectGrantMembersResponse> __Marshaller_zitadel_management_v1_ListProjectGrantMembersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProjectGrantMembersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddProjectGrantMemberRequest> __Marshaller_zitadel_management_v1_AddProjectGrantMemberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddProjectGrantMemberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddProjectGrantMemberResponse> __Marshaller_zitadel_management_v1_AddProjectGrantMemberResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddProjectGrantMemberResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateProjectGrantMemberRequest> __Marshaller_zitadel_management_v1_UpdateProjectGrantMemberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateProjectGrantMemberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateProjectGrantMemberResponse> __Marshaller_zitadel_management_v1_UpdateProjectGrantMemberResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateProjectGrantMemberResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveProjectGrantMemberRequest> __Marshaller_zitadel_management_v1_RemoveProjectGrantMemberRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveProjectGrantMemberRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveProjectGrantMemberResponse> __Marshaller_zitadel_management_v1_RemoveProjectGrantMemberResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveProjectGrantMemberResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetUserGrantByIDRequest> __Marshaller_zitadel_management_v1_GetUserGrantByIDRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetUserGrantByIDRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetUserGrantByIDResponse> __Marshaller_zitadel_management_v1_GetUserGrantByIDResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetUserGrantByIDResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListUserGrantRequest> __Marshaller_zitadel_management_v1_ListUserGrantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListUserGrantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListUserGrantResponse> __Marshaller_zitadel_management_v1_ListUserGrantResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListUserGrantResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddUserGrantRequest> __Marshaller_zitadel_management_v1_AddUserGrantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddUserGrantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddUserGrantResponse> __Marshaller_zitadel_management_v1_AddUserGrantResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddUserGrantResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateUserGrantRequest> __Marshaller_zitadel_management_v1_UpdateUserGrantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateUserGrantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateUserGrantResponse> __Marshaller_zitadel_management_v1_UpdateUserGrantResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateUserGrantResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeactivateUserGrantRequest> __Marshaller_zitadel_management_v1_DeactivateUserGrantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeactivateUserGrantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeactivateUserGrantResponse> __Marshaller_zitadel_management_v1_DeactivateUserGrantResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeactivateUserGrantResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ReactivateUserGrantRequest> __Marshaller_zitadel_management_v1_ReactivateUserGrantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ReactivateUserGrantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ReactivateUserGrantResponse> __Marshaller_zitadel_management_v1_ReactivateUserGrantResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ReactivateUserGrantResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveUserGrantRequest> __Marshaller_zitadel_management_v1_RemoveUserGrantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveUserGrantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveUserGrantResponse> __Marshaller_zitadel_management_v1_RemoveUserGrantResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveUserGrantResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.BulkRemoveUserGrantRequest> __Marshaller_zitadel_management_v1_BulkRemoveUserGrantRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.BulkRemoveUserGrantRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.BulkRemoveUserGrantResponse> __Marshaller_zitadel_management_v1_BulkRemoveUserGrantResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.BulkRemoveUserGrantResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetOrgIAMPolicyRequest> __Marshaller_zitadel_management_v1_GetOrgIAMPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetOrgIAMPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetOrgIAMPolicyResponse> __Marshaller_zitadel_management_v1_GetOrgIAMPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetOrgIAMPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDomainPolicyRequest> __Marshaller_zitadel_management_v1_GetDomainPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDomainPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDomainPolicyResponse> __Marshaller_zitadel_management_v1_GetDomainPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDomainPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetLoginPolicyRequest> __Marshaller_zitadel_management_v1_GetLoginPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetLoginPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetLoginPolicyResponse> __Marshaller_zitadel_management_v1_GetLoginPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetLoginPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultLoginPolicyRequest> __Marshaller_zitadel_management_v1_GetDefaultLoginPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultLoginPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultLoginPolicyResponse> __Marshaller_zitadel_management_v1_GetDefaultLoginPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultLoginPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddCustomLoginPolicyRequest> __Marshaller_zitadel_management_v1_AddCustomLoginPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddCustomLoginPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddCustomLoginPolicyResponse> __Marshaller_zitadel_management_v1_AddCustomLoginPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddCustomLoginPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateCustomLoginPolicyRequest> __Marshaller_zitadel_management_v1_UpdateCustomLoginPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateCustomLoginPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateCustomLoginPolicyResponse> __Marshaller_zitadel_management_v1_UpdateCustomLoginPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateCustomLoginPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetLoginPolicyToDefaultRequest> __Marshaller_zitadel_management_v1_ResetLoginPolicyToDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetLoginPolicyToDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetLoginPolicyToDefaultResponse> __Marshaller_zitadel_management_v1_ResetLoginPolicyToDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetLoginPolicyToDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListLoginPolicyIDPsRequest> __Marshaller_zitadel_management_v1_ListLoginPolicyIDPsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListLoginPolicyIDPsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListLoginPolicyIDPsResponse> __Marshaller_zitadel_management_v1_ListLoginPolicyIDPsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListLoginPolicyIDPsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddIDPToLoginPolicyRequest> __Marshaller_zitadel_management_v1_AddIDPToLoginPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddIDPToLoginPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddIDPToLoginPolicyResponse> __Marshaller_zitadel_management_v1_AddIDPToLoginPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddIDPToLoginPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyRequest> __Marshaller_zitadel_management_v1_RemoveIDPFromLoginPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyResponse> __Marshaller_zitadel_management_v1_RemoveIDPFromLoginPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListLoginPolicySecondFactorsRequest> __Marshaller_zitadel_management_v1_ListLoginPolicySecondFactorsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListLoginPolicySecondFactorsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListLoginPolicySecondFactorsResponse> __Marshaller_zitadel_management_v1_ListLoginPolicySecondFactorsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListLoginPolicySecondFactorsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyRequest> __Marshaller_zitadel_management_v1_AddSecondFactorToLoginPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyResponse> __Marshaller_zitadel_management_v1_AddSecondFactorToLoginPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyRequest> __Marshaller_zitadel_management_v1_RemoveSecondFactorFromLoginPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyResponse> __Marshaller_zitadel_management_v1_RemoveSecondFactorFromLoginPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsRequest> __Marshaller_zitadel_management_v1_ListLoginPolicyMultiFactorsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsResponse> __Marshaller_zitadel_management_v1_ListLoginPolicyMultiFactorsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyRequest> __Marshaller_zitadel_management_v1_AddMultiFactorToLoginPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyResponse> __Marshaller_zitadel_management_v1_AddMultiFactorToLoginPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyRequest> __Marshaller_zitadel_management_v1_RemoveMultiFactorFromLoginPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyResponse> __Marshaller_zitadel_management_v1_RemoveMultiFactorFromLoginPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetPasswordComplexityPolicyRequest> __Marshaller_zitadel_management_v1_GetPasswordComplexityPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetPasswordComplexityPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetPasswordComplexityPolicyResponse> __Marshaller_zitadel_management_v1_GetPasswordComplexityPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetPasswordComplexityPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyRequest> __Marshaller_zitadel_management_v1_GetDefaultPasswordComplexityPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyResponse> __Marshaller_zitadel_management_v1_GetDefaultPasswordComplexityPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyRequest> __Marshaller_zitadel_management_v1_AddCustomPasswordComplexityPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyResponse> __Marshaller_zitadel_management_v1_AddCustomPasswordComplexityPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyRequest> __Marshaller_zitadel_management_v1_UpdateCustomPasswordComplexityPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyResponse> __Marshaller_zitadel_management_v1_UpdateCustomPasswordComplexityPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultRequest> __Marshaller_zitadel_management_v1_ResetPasswordComplexityPolicyToDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultResponse> __Marshaller_zitadel_management_v1_ResetPasswordComplexityPolicyToDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetPasswordAgePolicyRequest> __Marshaller_zitadel_management_v1_GetPasswordAgePolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetPasswordAgePolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetPasswordAgePolicyResponse> __Marshaller_zitadel_management_v1_GetPasswordAgePolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetPasswordAgePolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyRequest> __Marshaller_zitadel_management_v1_GetDefaultPasswordAgePolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyResponse> __Marshaller_zitadel_management_v1_GetDefaultPasswordAgePolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddCustomPasswordAgePolicyRequest> __Marshaller_zitadel_management_v1_AddCustomPasswordAgePolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddCustomPasswordAgePolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddCustomPasswordAgePolicyResponse> __Marshaller_zitadel_management_v1_AddCustomPasswordAgePolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddCustomPasswordAgePolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyRequest> __Marshaller_zitadel_management_v1_UpdateCustomPasswordAgePolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyResponse> __Marshaller_zitadel_management_v1_UpdateCustomPasswordAgePolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultRequest> __Marshaller_zitadel_management_v1_ResetPasswordAgePolicyToDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultResponse> __Marshaller_zitadel_management_v1_ResetPasswordAgePolicyToDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetLockoutPolicyRequest> __Marshaller_zitadel_management_v1_GetLockoutPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetLockoutPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetLockoutPolicyResponse> __Marshaller_zitadel_management_v1_GetLockoutPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetLockoutPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultLockoutPolicyRequest> __Marshaller_zitadel_management_v1_GetDefaultLockoutPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultLockoutPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultLockoutPolicyResponse> __Marshaller_zitadel_management_v1_GetDefaultLockoutPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultLockoutPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddCustomLockoutPolicyRequest> __Marshaller_zitadel_management_v1_AddCustomLockoutPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddCustomLockoutPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddCustomLockoutPolicyResponse> __Marshaller_zitadel_management_v1_AddCustomLockoutPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddCustomLockoutPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateCustomLockoutPolicyRequest> __Marshaller_zitadel_management_v1_UpdateCustomLockoutPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateCustomLockoutPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateCustomLockoutPolicyResponse> __Marshaller_zitadel_management_v1_UpdateCustomLockoutPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateCustomLockoutPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultRequest> __Marshaller_zitadel_management_v1_ResetLockoutPolicyToDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultResponse> __Marshaller_zitadel_management_v1_ResetLockoutPolicyToDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetPrivacyPolicyRequest> __Marshaller_zitadel_management_v1_GetPrivacyPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetPrivacyPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetPrivacyPolicyResponse> __Marshaller_zitadel_management_v1_GetPrivacyPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetPrivacyPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultPrivacyPolicyRequest> __Marshaller_zitadel_management_v1_GetDefaultPrivacyPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultPrivacyPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultPrivacyPolicyResponse> __Marshaller_zitadel_management_v1_GetDefaultPrivacyPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultPrivacyPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddCustomPrivacyPolicyRequest> __Marshaller_zitadel_management_v1_AddCustomPrivacyPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddCustomPrivacyPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddCustomPrivacyPolicyResponse> __Marshaller_zitadel_management_v1_AddCustomPrivacyPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddCustomPrivacyPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyRequest> __Marshaller_zitadel_management_v1_UpdateCustomPrivacyPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyResponse> __Marshaller_zitadel_management_v1_UpdateCustomPrivacyPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultRequest> __Marshaller_zitadel_management_v1_ResetPrivacyPolicyToDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultResponse> __Marshaller_zitadel_management_v1_ResetPrivacyPolicyToDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetNotificationPolicyRequest> __Marshaller_zitadel_management_v1_GetNotificationPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetNotificationPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetNotificationPolicyResponse> __Marshaller_zitadel_management_v1_GetNotificationPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetNotificationPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultNotificationPolicyRequest> __Marshaller_zitadel_management_v1_GetDefaultNotificationPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultNotificationPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultNotificationPolicyResponse> __Marshaller_zitadel_management_v1_GetDefaultNotificationPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultNotificationPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddCustomNotificationPolicyRequest> __Marshaller_zitadel_management_v1_AddCustomNotificationPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddCustomNotificationPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddCustomNotificationPolicyResponse> __Marshaller_zitadel_management_v1_AddCustomNotificationPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddCustomNotificationPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateCustomNotificationPolicyRequest> __Marshaller_zitadel_management_v1_UpdateCustomNotificationPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateCustomNotificationPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateCustomNotificationPolicyResponse> __Marshaller_zitadel_management_v1_UpdateCustomNotificationPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateCustomNotificationPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultRequest> __Marshaller_zitadel_management_v1_ResetNotificationPolicyToDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultResponse> __Marshaller_zitadel_management_v1_ResetNotificationPolicyToDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetLabelPolicyRequest> __Marshaller_zitadel_management_v1_GetLabelPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetLabelPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetLabelPolicyResponse> __Marshaller_zitadel_management_v1_GetLabelPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetLabelPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetPreviewLabelPolicyRequest> __Marshaller_zitadel_management_v1_GetPreviewLabelPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetPreviewLabelPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetPreviewLabelPolicyResponse> __Marshaller_zitadel_management_v1_GetPreviewLabelPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetPreviewLabelPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultLabelPolicyRequest> __Marshaller_zitadel_management_v1_GetDefaultLabelPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultLabelPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultLabelPolicyResponse> __Marshaller_zitadel_management_v1_GetDefaultLabelPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultLabelPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddCustomLabelPolicyRequest> __Marshaller_zitadel_management_v1_AddCustomLabelPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddCustomLabelPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddCustomLabelPolicyResponse> __Marshaller_zitadel_management_v1_AddCustomLabelPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddCustomLabelPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateCustomLabelPolicyRequest> __Marshaller_zitadel_management_v1_UpdateCustomLabelPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateCustomLabelPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateCustomLabelPolicyResponse> __Marshaller_zitadel_management_v1_UpdateCustomLabelPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateCustomLabelPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ActivateCustomLabelPolicyRequest> __Marshaller_zitadel_management_v1_ActivateCustomLabelPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ActivateCustomLabelPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ActivateCustomLabelPolicyResponse> __Marshaller_zitadel_management_v1_ActivateCustomLabelPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ActivateCustomLabelPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoRequest> __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyLogoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoResponse> __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyLogoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkRequest> __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyLogoDarkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkResponse> __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyLogoDarkResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconRequest> __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyIconRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconResponse> __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyIconResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkRequest> __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyIconDarkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkResponse> __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyIconDarkResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontRequest> __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyFontRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontResponse> __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyFontResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetLabelPolicyToDefaultRequest> __Marshaller_zitadel_management_v1_ResetLabelPolicyToDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetLabelPolicyToDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetLabelPolicyToDefaultResponse> __Marshaller_zitadel_management_v1_ResetLabelPolicyToDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetLabelPolicyToDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomInitMessageTextRequest> __Marshaller_zitadel_management_v1_GetCustomInitMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomInitMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomInitMessageTextResponse> __Marshaller_zitadel_management_v1_GetCustomInitMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomInitMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultInitMessageTextRequest> __Marshaller_zitadel_management_v1_GetDefaultInitMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultInitMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultInitMessageTextResponse> __Marshaller_zitadel_management_v1_GetDefaultInitMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultInitMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomInitMessageTextRequest> __Marshaller_zitadel_management_v1_SetCustomInitMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomInitMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomInitMessageTextResponse> __Marshaller_zitadel_management_v1_SetCustomInitMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomInitMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultRequest> __Marshaller_zitadel_management_v1_ResetCustomInitMessageTextToDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultResponse> __Marshaller_zitadel_management_v1_ResetCustomInitMessageTextToDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextRequest> __Marshaller_zitadel_management_v1_GetCustomPasswordResetMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextResponse> __Marshaller_zitadel_management_v1_GetCustomPasswordResetMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextRequest> __Marshaller_zitadel_management_v1_GetDefaultPasswordResetMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextResponse> __Marshaller_zitadel_management_v1_GetDefaultPasswordResetMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextRequest> __Marshaller_zitadel_management_v1_SetCustomPasswordResetMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextResponse> __Marshaller_zitadel_management_v1_SetCustomPasswordResetMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultRequest> __Marshaller_zitadel_management_v1_ResetCustomPasswordResetMessageTextToDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultResponse> __Marshaller_zitadel_management_v1_ResetCustomPasswordResetMessageTextToDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextRequest> __Marshaller_zitadel_management_v1_GetCustomVerifyEmailMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextResponse> __Marshaller_zitadel_management_v1_GetCustomVerifyEmailMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextRequest> __Marshaller_zitadel_management_v1_GetDefaultVerifyEmailMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextResponse> __Marshaller_zitadel_management_v1_GetDefaultVerifyEmailMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextRequest> __Marshaller_zitadel_management_v1_SetCustomVerifyEmailMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextResponse> __Marshaller_zitadel_management_v1_SetCustomVerifyEmailMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultRequest> __Marshaller_zitadel_management_v1_ResetCustomVerifyEmailMessageTextToDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultResponse> __Marshaller_zitadel_management_v1_ResetCustomVerifyEmailMessageTextToDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextRequest> __Marshaller_zitadel_management_v1_GetCustomVerifyPhoneMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextResponse> __Marshaller_zitadel_management_v1_GetCustomVerifyPhoneMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextRequest> __Marshaller_zitadel_management_v1_GetDefaultVerifyPhoneMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextResponse> __Marshaller_zitadel_management_v1_GetDefaultVerifyPhoneMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextRequest> __Marshaller_zitadel_management_v1_SetCustomVerifyPhoneMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextResponse> __Marshaller_zitadel_management_v1_SetCustomVerifyPhoneMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultRequest> __Marshaller_zitadel_management_v1_ResetCustomVerifyPhoneMessageTextToDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultResponse> __Marshaller_zitadel_management_v1_ResetCustomVerifyPhoneMessageTextToDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextRequest> __Marshaller_zitadel_management_v1_GetCustomVerifySMSOTPMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextResponse> __Marshaller_zitadel_management_v1_GetCustomVerifySMSOTPMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextRequest> __Marshaller_zitadel_management_v1_GetDefaultVerifySMSOTPMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextResponse> __Marshaller_zitadel_management_v1_GetDefaultVerifySMSOTPMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextRequest> __Marshaller_zitadel_management_v1_SetCustomVerifySMSOTPMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextResponse> __Marshaller_zitadel_management_v1_SetCustomVerifySMSOTPMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultRequest> __Marshaller_zitadel_management_v1_ResetCustomVerifySMSOTPMessageTextToDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultResponse> __Marshaller_zitadel_management_v1_ResetCustomVerifySMSOTPMessageTextToDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextRequest> __Marshaller_zitadel_management_v1_GetCustomVerifyEmailOTPMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextResponse> __Marshaller_zitadel_management_v1_GetCustomVerifyEmailOTPMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextRequest> __Marshaller_zitadel_management_v1_GetDefaultVerifyEmailOTPMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextResponse> __Marshaller_zitadel_management_v1_GetDefaultVerifyEmailOTPMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextRequest> __Marshaller_zitadel_management_v1_SetCustomVerifyEmailOTPMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextResponse> __Marshaller_zitadel_management_v1_SetCustomVerifyEmailOTPMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest> __Marshaller_zitadel_management_v1_ResetCustomVerifyEmailOTPMessageTextToDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse> __Marshaller_zitadel_management_v1_ResetCustomVerifyEmailOTPMessageTextToDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextRequest> __Marshaller_zitadel_management_v1_GetCustomDomainClaimedMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextResponse> __Marshaller_zitadel_management_v1_GetCustomDomainClaimedMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextRequest> __Marshaller_zitadel_management_v1_GetDefaultDomainClaimedMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextResponse> __Marshaller_zitadel_management_v1_GetDefaultDomainClaimedMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextRequest> __Marshaller_zitadel_management_v1_SetCustomDomainClaimedMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextResponse> __Marshaller_zitadel_management_v1_SetCustomDomainClaimedMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultRequest> __Marshaller_zitadel_management_v1_ResetCustomDomainClaimedMessageTextToDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultResponse> __Marshaller_zitadel_management_v1_ResetCustomDomainClaimedMessageTextToDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextRequest> __Marshaller_zitadel_management_v1_GetCustomPasswordlessRegistrationMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextResponse> __Marshaller_zitadel_management_v1_GetCustomPasswordlessRegistrationMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextRequest> __Marshaller_zitadel_management_v1_GetDefaultPasswordlessRegistrationMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextResponse> __Marshaller_zitadel_management_v1_GetDefaultPasswordlessRegistrationMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextRequest> __Marshaller_zitadel_management_v1_SetCustomPasswordlessRegistrationMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextResponse> __Marshaller_zitadel_management_v1_SetCustomPasswordlessRegistrationMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest> __Marshaller_zitadel_management_v1_ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse> __Marshaller_zitadel_management_v1_ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextRequest> __Marshaller_zitadel_management_v1_GetCustomPasswordChangeMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextResponse> __Marshaller_zitadel_management_v1_GetCustomPasswordChangeMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextRequest> __Marshaller_zitadel_management_v1_GetDefaultPasswordChangeMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextResponse> __Marshaller_zitadel_management_v1_GetDefaultPasswordChangeMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextRequest> __Marshaller_zitadel_management_v1_SetCustomPasswordChangeMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextResponse> __Marshaller_zitadel_management_v1_SetCustomPasswordChangeMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultRequest> __Marshaller_zitadel_management_v1_ResetCustomPasswordChangeMessageTextToDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultResponse> __Marshaller_zitadel_management_v1_ResetCustomPasswordChangeMessageTextToDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomInviteUserMessageTextRequest> __Marshaller_zitadel_management_v1_GetCustomInviteUserMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomInviteUserMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomInviteUserMessageTextResponse> __Marshaller_zitadel_management_v1_GetCustomInviteUserMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomInviteUserMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextRequest> __Marshaller_zitadel_management_v1_GetDefaultInviteUserMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextResponse> __Marshaller_zitadel_management_v1_GetDefaultInviteUserMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomInviteUserMessageTextRequest> __Marshaller_zitadel_management_v1_SetCustomInviteUserMessageTextRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomInviteUserMessageTextRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomInviteUserMessageTextResponse> __Marshaller_zitadel_management_v1_SetCustomInviteUserMessageTextResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomInviteUserMessageTextResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultRequest> __Marshaller_zitadel_management_v1_ResetCustomInviteUserMessageTextToDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultResponse> __Marshaller_zitadel_management_v1_ResetCustomInviteUserMessageTextToDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomLoginTextsRequest> __Marshaller_zitadel_management_v1_GetCustomLoginTextsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomLoginTextsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetCustomLoginTextsResponse> __Marshaller_zitadel_management_v1_GetCustomLoginTextsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetCustomLoginTextsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultLoginTextsRequest> __Marshaller_zitadel_management_v1_GetDefaultLoginTextsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultLoginTextsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetDefaultLoginTextsResponse> __Marshaller_zitadel_management_v1_GetDefaultLoginTextsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetDefaultLoginTextsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomLoginTextsRequest> __Marshaller_zitadel_management_v1_SetCustomLoginTextsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomLoginTextsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetCustomLoginTextsResponse> __Marshaller_zitadel_management_v1_SetCustomLoginTextsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetCustomLoginTextsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultRequest> __Marshaller_zitadel_management_v1_ResetCustomLoginTextsToDefaultRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultResponse> __Marshaller_zitadel_management_v1_ResetCustomLoginTextsToDefaultResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetOrgIDPByIDRequest> __Marshaller_zitadel_management_v1_GetOrgIDPByIDRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetOrgIDPByIDRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetOrgIDPByIDResponse> __Marshaller_zitadel_management_v1_GetOrgIDPByIDResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetOrgIDPByIDResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListOrgIDPsRequest> __Marshaller_zitadel_management_v1_ListOrgIDPsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListOrgIDPsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListOrgIDPsResponse> __Marshaller_zitadel_management_v1_ListOrgIDPsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListOrgIDPsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddOrgOIDCIDPRequest> __Marshaller_zitadel_management_v1_AddOrgOIDCIDPRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddOrgOIDCIDPRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddOrgOIDCIDPResponse> __Marshaller_zitadel_management_v1_AddOrgOIDCIDPResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddOrgOIDCIDPResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddOrgJWTIDPRequest> __Marshaller_zitadel_management_v1_AddOrgJWTIDPRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddOrgJWTIDPRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddOrgJWTIDPResponse> __Marshaller_zitadel_management_v1_AddOrgJWTIDPResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddOrgJWTIDPResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeactivateOrgIDPRequest> __Marshaller_zitadel_management_v1_DeactivateOrgIDPRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeactivateOrgIDPRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeactivateOrgIDPResponse> __Marshaller_zitadel_management_v1_DeactivateOrgIDPResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeactivateOrgIDPResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ReactivateOrgIDPRequest> __Marshaller_zitadel_management_v1_ReactivateOrgIDPRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ReactivateOrgIDPRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ReactivateOrgIDPResponse> __Marshaller_zitadel_management_v1_ReactivateOrgIDPResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ReactivateOrgIDPResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveOrgIDPRequest> __Marshaller_zitadel_management_v1_RemoveOrgIDPRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveOrgIDPRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RemoveOrgIDPResponse> __Marshaller_zitadel_management_v1_RemoveOrgIDPResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RemoveOrgIDPResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateOrgIDPRequest> __Marshaller_zitadel_management_v1_UpdateOrgIDPRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateOrgIDPRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateOrgIDPResponse> __Marshaller_zitadel_management_v1_UpdateOrgIDPResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateOrgIDPResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigRequest> __Marshaller_zitadel_management_v1_UpdateOrgIDPOIDCConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigResponse> __Marshaller_zitadel_management_v1_UpdateOrgIDPOIDCConfigResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigRequest> __Marshaller_zitadel_management_v1_UpdateOrgIDPJWTConfigRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigResponse> __Marshaller_zitadel_management_v1_UpdateOrgIDPJWTConfigResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProvidersRequest> __Marshaller_zitadel_management_v1_ListProvidersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProvidersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListProvidersResponse> __Marshaller_zitadel_management_v1_ListProvidersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListProvidersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetProviderByIDRequest> __Marshaller_zitadel_management_v1_GetProviderByIDRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetProviderByIDRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetProviderByIDResponse> __Marshaller_zitadel_management_v1_GetProviderByIDResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetProviderByIDResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddGenericOAuthProviderRequest> __Marshaller_zitadel_management_v1_AddGenericOAuthProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddGenericOAuthProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddGenericOAuthProviderResponse> __Marshaller_zitadel_management_v1_AddGenericOAuthProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddGenericOAuthProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateGenericOAuthProviderRequest> __Marshaller_zitadel_management_v1_UpdateGenericOAuthProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateGenericOAuthProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateGenericOAuthProviderResponse> __Marshaller_zitadel_management_v1_UpdateGenericOAuthProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateGenericOAuthProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddGenericOIDCProviderRequest> __Marshaller_zitadel_management_v1_AddGenericOIDCProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddGenericOIDCProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddGenericOIDCProviderResponse> __Marshaller_zitadel_management_v1_AddGenericOIDCProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddGenericOIDCProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateGenericOIDCProviderRequest> __Marshaller_zitadel_management_v1_UpdateGenericOIDCProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateGenericOIDCProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateGenericOIDCProviderResponse> __Marshaller_zitadel_management_v1_UpdateGenericOIDCProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateGenericOIDCProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.MigrateGenericOIDCProviderRequest> __Marshaller_zitadel_management_v1_MigrateGenericOIDCProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.MigrateGenericOIDCProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.MigrateGenericOIDCProviderResponse> __Marshaller_zitadel_management_v1_MigrateGenericOIDCProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.MigrateGenericOIDCProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddJWTProviderRequest> __Marshaller_zitadel_management_v1_AddJWTProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddJWTProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddJWTProviderResponse> __Marshaller_zitadel_management_v1_AddJWTProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddJWTProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateJWTProviderRequest> __Marshaller_zitadel_management_v1_UpdateJWTProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateJWTProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateJWTProviderResponse> __Marshaller_zitadel_management_v1_UpdateJWTProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateJWTProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddAzureADProviderRequest> __Marshaller_zitadel_management_v1_AddAzureADProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddAzureADProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddAzureADProviderResponse> __Marshaller_zitadel_management_v1_AddAzureADProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddAzureADProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateAzureADProviderRequest> __Marshaller_zitadel_management_v1_UpdateAzureADProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateAzureADProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateAzureADProviderResponse> __Marshaller_zitadel_management_v1_UpdateAzureADProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateAzureADProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddGitHubProviderRequest> __Marshaller_zitadel_management_v1_AddGitHubProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddGitHubProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddGitHubProviderResponse> __Marshaller_zitadel_management_v1_AddGitHubProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddGitHubProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateGitHubProviderRequest> __Marshaller_zitadel_management_v1_UpdateGitHubProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateGitHubProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateGitHubProviderResponse> __Marshaller_zitadel_management_v1_UpdateGitHubProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateGitHubProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderRequest> __Marshaller_zitadel_management_v1_AddGitHubEnterpriseServerProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderResponse> __Marshaller_zitadel_management_v1_AddGitHubEnterpriseServerProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderRequest> __Marshaller_zitadel_management_v1_UpdateGitHubEnterpriseServerProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderResponse> __Marshaller_zitadel_management_v1_UpdateGitHubEnterpriseServerProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddGitLabProviderRequest> __Marshaller_zitadel_management_v1_AddGitLabProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddGitLabProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddGitLabProviderResponse> __Marshaller_zitadel_management_v1_AddGitLabProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddGitLabProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateGitLabProviderRequest> __Marshaller_zitadel_management_v1_UpdateGitLabProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateGitLabProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateGitLabProviderResponse> __Marshaller_zitadel_management_v1_UpdateGitLabProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateGitLabProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddGitLabSelfHostedProviderRequest> __Marshaller_zitadel_management_v1_AddGitLabSelfHostedProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddGitLabSelfHostedProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddGitLabSelfHostedProviderResponse> __Marshaller_zitadel_management_v1_AddGitLabSelfHostedProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddGitLabSelfHostedProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderRequest> __Marshaller_zitadel_management_v1_UpdateGitLabSelfHostedProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderResponse> __Marshaller_zitadel_management_v1_UpdateGitLabSelfHostedProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddGoogleProviderRequest> __Marshaller_zitadel_management_v1_AddGoogleProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddGoogleProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddGoogleProviderResponse> __Marshaller_zitadel_management_v1_AddGoogleProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddGoogleProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateGoogleProviderRequest> __Marshaller_zitadel_management_v1_UpdateGoogleProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateGoogleProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateGoogleProviderResponse> __Marshaller_zitadel_management_v1_UpdateGoogleProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateGoogleProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddLDAPProviderRequest> __Marshaller_zitadel_management_v1_AddLDAPProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddLDAPProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddLDAPProviderResponse> __Marshaller_zitadel_management_v1_AddLDAPProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddLDAPProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateLDAPProviderRequest> __Marshaller_zitadel_management_v1_UpdateLDAPProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateLDAPProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateLDAPProviderResponse> __Marshaller_zitadel_management_v1_UpdateLDAPProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateLDAPProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddAppleProviderRequest> __Marshaller_zitadel_management_v1_AddAppleProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddAppleProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddAppleProviderResponse> __Marshaller_zitadel_management_v1_AddAppleProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddAppleProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateAppleProviderRequest> __Marshaller_zitadel_management_v1_UpdateAppleProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateAppleProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateAppleProviderResponse> __Marshaller_zitadel_management_v1_UpdateAppleProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateAppleProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddSAMLProviderRequest> __Marshaller_zitadel_management_v1_AddSAMLProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddSAMLProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.AddSAMLProviderResponse> __Marshaller_zitadel_management_v1_AddSAMLProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.AddSAMLProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateSAMLProviderRequest> __Marshaller_zitadel_management_v1_UpdateSAMLProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateSAMLProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateSAMLProviderResponse> __Marshaller_zitadel_management_v1_UpdateSAMLProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateSAMLProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateRequest> __Marshaller_zitadel_management_v1_RegenerateSAMLProviderCertificateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateResponse> __Marshaller_zitadel_management_v1_RegenerateSAMLProviderCertificateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeleteProviderRequest> __Marshaller_zitadel_management_v1_DeleteProviderRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeleteProviderRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeleteProviderResponse> __Marshaller_zitadel_management_v1_DeleteProviderResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeleteProviderResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListActionsRequest> __Marshaller_zitadel_management_v1_ListActionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListActionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListActionsResponse> __Marshaller_zitadel_management_v1_ListActionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListActionsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetActionRequest> __Marshaller_zitadel_management_v1_GetActionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetActionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetActionResponse> __Marshaller_zitadel_management_v1_GetActionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetActionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.CreateActionRequest> __Marshaller_zitadel_management_v1_CreateActionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.CreateActionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.CreateActionResponse> __Marshaller_zitadel_management_v1_CreateActionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.CreateActionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateActionRequest> __Marshaller_zitadel_management_v1_UpdateActionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateActionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.UpdateActionResponse> __Marshaller_zitadel_management_v1_UpdateActionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.UpdateActionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeactivateActionRequest> __Marshaller_zitadel_management_v1_DeactivateActionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeactivateActionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeactivateActionResponse> __Marshaller_zitadel_management_v1_DeactivateActionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeactivateActionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ReactivateActionRequest> __Marshaller_zitadel_management_v1_ReactivateActionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ReactivateActionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ReactivateActionResponse> __Marshaller_zitadel_management_v1_ReactivateActionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ReactivateActionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeleteActionRequest> __Marshaller_zitadel_management_v1_DeleteActionRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeleteActionRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.DeleteActionResponse> __Marshaller_zitadel_management_v1_DeleteActionResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.DeleteActionResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListFlowTypesRequest> __Marshaller_zitadel_management_v1_ListFlowTypesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListFlowTypesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListFlowTypesResponse> __Marshaller_zitadel_management_v1_ListFlowTypesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListFlowTypesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListFlowTriggerTypesRequest> __Marshaller_zitadel_management_v1_ListFlowTriggerTypesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListFlowTriggerTypesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ListFlowTriggerTypesResponse> __Marshaller_zitadel_management_v1_ListFlowTriggerTypesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ListFlowTriggerTypesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetFlowRequest> __Marshaller_zitadel_management_v1_GetFlowRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetFlowRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.GetFlowResponse> __Marshaller_zitadel_management_v1_GetFlowResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.GetFlowResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ClearFlowRequest> __Marshaller_zitadel_management_v1_ClearFlowRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ClearFlowRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.ClearFlowResponse> __Marshaller_zitadel_management_v1_ClearFlowResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.ClearFlowResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetTriggerActionsRequest> __Marshaller_zitadel_management_v1_SetTriggerActionsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetTriggerActionsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Management.V1.SetTriggerActionsResponse> __Marshaller_zitadel_management_v1_SetTriggerActionsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Management.V1.SetTriggerActionsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.HealthzRequest, global::Zitadel.Management.V1.HealthzResponse> __Method_Healthz = new grpc::Method<global::Zitadel.Management.V1.HealthzRequest, global::Zitadel.Management.V1.HealthzResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Healthz",
        __Marshaller_zitadel_management_v1_HealthzRequest,
        __Marshaller_zitadel_management_v1_HealthzResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetOIDCInformationRequest, global::Zitadel.Management.V1.GetOIDCInformationResponse> __Method_GetOIDCInformation = new grpc::Method<global::Zitadel.Management.V1.GetOIDCInformationRequest, global::Zitadel.Management.V1.GetOIDCInformationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOIDCInformation",
        __Marshaller_zitadel_management_v1_GetOIDCInformationRequest,
        __Marshaller_zitadel_management_v1_GetOIDCInformationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetIAMRequest, global::Zitadel.Management.V1.GetIAMResponse> __Method_GetIAM = new grpc::Method<global::Zitadel.Management.V1.GetIAMRequest, global::Zitadel.Management.V1.GetIAMResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetIAM",
        __Marshaller_zitadel_management_v1_GetIAMRequest,
        __Marshaller_zitadel_management_v1_GetIAMResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetSupportedLanguagesRequest, global::Zitadel.Management.V1.GetSupportedLanguagesResponse> __Method_GetSupportedLanguages = new grpc::Method<global::Zitadel.Management.V1.GetSupportedLanguagesRequest, global::Zitadel.Management.V1.GetSupportedLanguagesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSupportedLanguages",
        __Marshaller_zitadel_management_v1_GetSupportedLanguagesRequest,
        __Marshaller_zitadel_management_v1_GetSupportedLanguagesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetUserByIDRequest, global::Zitadel.Management.V1.GetUserByIDResponse> __Method_GetUserByID = new grpc::Method<global::Zitadel.Management.V1.GetUserByIDRequest, global::Zitadel.Management.V1.GetUserByIDResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserByID",
        __Marshaller_zitadel_management_v1_GetUserByIDRequest,
        __Marshaller_zitadel_management_v1_GetUserByIDResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetUserByLoginNameGlobalRequest, global::Zitadel.Management.V1.GetUserByLoginNameGlobalResponse> __Method_GetUserByLoginNameGlobal = new grpc::Method<global::Zitadel.Management.V1.GetUserByLoginNameGlobalRequest, global::Zitadel.Management.V1.GetUserByLoginNameGlobalResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserByLoginNameGlobal",
        __Marshaller_zitadel_management_v1_GetUserByLoginNameGlobalRequest,
        __Marshaller_zitadel_management_v1_GetUserByLoginNameGlobalResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListUsersRequest, global::Zitadel.Management.V1.ListUsersResponse> __Method_ListUsers = new grpc::Method<global::Zitadel.Management.V1.ListUsersRequest, global::Zitadel.Management.V1.ListUsersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListUsers",
        __Marshaller_zitadel_management_v1_ListUsersRequest,
        __Marshaller_zitadel_management_v1_ListUsersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListUserChangesRequest, global::Zitadel.Management.V1.ListUserChangesResponse> __Method_ListUserChanges = new grpc::Method<global::Zitadel.Management.V1.ListUserChangesRequest, global::Zitadel.Management.V1.ListUserChangesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListUserChanges",
        __Marshaller_zitadel_management_v1_ListUserChangesRequest,
        __Marshaller_zitadel_management_v1_ListUserChangesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.IsUserUniqueRequest, global::Zitadel.Management.V1.IsUserUniqueResponse> __Method_IsUserUnique = new grpc::Method<global::Zitadel.Management.V1.IsUserUniqueRequest, global::Zitadel.Management.V1.IsUserUniqueResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "IsUserUnique",
        __Marshaller_zitadel_management_v1_IsUserUniqueRequest,
        __Marshaller_zitadel_management_v1_IsUserUniqueResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddHumanUserRequest, global::Zitadel.Management.V1.AddHumanUserResponse> __Method_AddHumanUser = new grpc::Method<global::Zitadel.Management.V1.AddHumanUserRequest, global::Zitadel.Management.V1.AddHumanUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddHumanUser",
        __Marshaller_zitadel_management_v1_AddHumanUserRequest,
        __Marshaller_zitadel_management_v1_AddHumanUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ImportHumanUserRequest, global::Zitadel.Management.V1.ImportHumanUserResponse> __Method_ImportHumanUser = new grpc::Method<global::Zitadel.Management.V1.ImportHumanUserRequest, global::Zitadel.Management.V1.ImportHumanUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ImportHumanUser",
        __Marshaller_zitadel_management_v1_ImportHumanUserRequest,
        __Marshaller_zitadel_management_v1_ImportHumanUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddMachineUserRequest, global::Zitadel.Management.V1.AddMachineUserResponse> __Method_AddMachineUser = new grpc::Method<global::Zitadel.Management.V1.AddMachineUserRequest, global::Zitadel.Management.V1.AddMachineUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddMachineUser",
        __Marshaller_zitadel_management_v1_AddMachineUserRequest,
        __Marshaller_zitadel_management_v1_AddMachineUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.DeactivateUserRequest, global::Zitadel.Management.V1.DeactivateUserResponse> __Method_DeactivateUser = new grpc::Method<global::Zitadel.Management.V1.DeactivateUserRequest, global::Zitadel.Management.V1.DeactivateUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeactivateUser",
        __Marshaller_zitadel_management_v1_DeactivateUserRequest,
        __Marshaller_zitadel_management_v1_DeactivateUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ReactivateUserRequest, global::Zitadel.Management.V1.ReactivateUserResponse> __Method_ReactivateUser = new grpc::Method<global::Zitadel.Management.V1.ReactivateUserRequest, global::Zitadel.Management.V1.ReactivateUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReactivateUser",
        __Marshaller_zitadel_management_v1_ReactivateUserRequest,
        __Marshaller_zitadel_management_v1_ReactivateUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.LockUserRequest, global::Zitadel.Management.V1.LockUserResponse> __Method_LockUser = new grpc::Method<global::Zitadel.Management.V1.LockUserRequest, global::Zitadel.Management.V1.LockUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LockUser",
        __Marshaller_zitadel_management_v1_LockUserRequest,
        __Marshaller_zitadel_management_v1_LockUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UnlockUserRequest, global::Zitadel.Management.V1.UnlockUserResponse> __Method_UnlockUser = new grpc::Method<global::Zitadel.Management.V1.UnlockUserRequest, global::Zitadel.Management.V1.UnlockUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnlockUser",
        __Marshaller_zitadel_management_v1_UnlockUserRequest,
        __Marshaller_zitadel_management_v1_UnlockUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveUserRequest, global::Zitadel.Management.V1.RemoveUserResponse> __Method_RemoveUser = new grpc::Method<global::Zitadel.Management.V1.RemoveUserRequest, global::Zitadel.Management.V1.RemoveUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveUser",
        __Marshaller_zitadel_management_v1_RemoveUserRequest,
        __Marshaller_zitadel_management_v1_RemoveUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateUserNameRequest, global::Zitadel.Management.V1.UpdateUserNameResponse> __Method_UpdateUserName = new grpc::Method<global::Zitadel.Management.V1.UpdateUserNameRequest, global::Zitadel.Management.V1.UpdateUserNameResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateUserName",
        __Marshaller_zitadel_management_v1_UpdateUserNameRequest,
        __Marshaller_zitadel_management_v1_UpdateUserNameResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SetUserMetadataRequest, global::Zitadel.Management.V1.SetUserMetadataResponse> __Method_SetUserMetadata = new grpc::Method<global::Zitadel.Management.V1.SetUserMetadataRequest, global::Zitadel.Management.V1.SetUserMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetUserMetadata",
        __Marshaller_zitadel_management_v1_SetUserMetadataRequest,
        __Marshaller_zitadel_management_v1_SetUserMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.BulkSetUserMetadataRequest, global::Zitadel.Management.V1.BulkSetUserMetadataResponse> __Method_BulkSetUserMetadata = new grpc::Method<global::Zitadel.Management.V1.BulkSetUserMetadataRequest, global::Zitadel.Management.V1.BulkSetUserMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BulkSetUserMetadata",
        __Marshaller_zitadel_management_v1_BulkSetUserMetadataRequest,
        __Marshaller_zitadel_management_v1_BulkSetUserMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListUserMetadataRequest, global::Zitadel.Management.V1.ListUserMetadataResponse> __Method_ListUserMetadata = new grpc::Method<global::Zitadel.Management.V1.ListUserMetadataRequest, global::Zitadel.Management.V1.ListUserMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListUserMetadata",
        __Marshaller_zitadel_management_v1_ListUserMetadataRequest,
        __Marshaller_zitadel_management_v1_ListUserMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetUserMetadataRequest, global::Zitadel.Management.V1.GetUserMetadataResponse> __Method_GetUserMetadata = new grpc::Method<global::Zitadel.Management.V1.GetUserMetadataRequest, global::Zitadel.Management.V1.GetUserMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserMetadata",
        __Marshaller_zitadel_management_v1_GetUserMetadataRequest,
        __Marshaller_zitadel_management_v1_GetUserMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveUserMetadataRequest, global::Zitadel.Management.V1.RemoveUserMetadataResponse> __Method_RemoveUserMetadata = new grpc::Method<global::Zitadel.Management.V1.RemoveUserMetadataRequest, global::Zitadel.Management.V1.RemoveUserMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveUserMetadata",
        __Marshaller_zitadel_management_v1_RemoveUserMetadataRequest,
        __Marshaller_zitadel_management_v1_RemoveUserMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.BulkRemoveUserMetadataRequest, global::Zitadel.Management.V1.BulkRemoveUserMetadataResponse> __Method_BulkRemoveUserMetadata = new grpc::Method<global::Zitadel.Management.V1.BulkRemoveUserMetadataRequest, global::Zitadel.Management.V1.BulkRemoveUserMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BulkRemoveUserMetadata",
        __Marshaller_zitadel_management_v1_BulkRemoveUserMetadataRequest,
        __Marshaller_zitadel_management_v1_BulkRemoveUserMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetHumanProfileRequest, global::Zitadel.Management.V1.GetHumanProfileResponse> __Method_GetHumanProfile = new grpc::Method<global::Zitadel.Management.V1.GetHumanProfileRequest, global::Zitadel.Management.V1.GetHumanProfileResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHumanProfile",
        __Marshaller_zitadel_management_v1_GetHumanProfileRequest,
        __Marshaller_zitadel_management_v1_GetHumanProfileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateHumanProfileRequest, global::Zitadel.Management.V1.UpdateHumanProfileResponse> __Method_UpdateHumanProfile = new grpc::Method<global::Zitadel.Management.V1.UpdateHumanProfileRequest, global::Zitadel.Management.V1.UpdateHumanProfileResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateHumanProfile",
        __Marshaller_zitadel_management_v1_UpdateHumanProfileRequest,
        __Marshaller_zitadel_management_v1_UpdateHumanProfileResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetHumanEmailRequest, global::Zitadel.Management.V1.GetHumanEmailResponse> __Method_GetHumanEmail = new grpc::Method<global::Zitadel.Management.V1.GetHumanEmailRequest, global::Zitadel.Management.V1.GetHumanEmailResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHumanEmail",
        __Marshaller_zitadel_management_v1_GetHumanEmailRequest,
        __Marshaller_zitadel_management_v1_GetHumanEmailResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateHumanEmailRequest, global::Zitadel.Management.V1.UpdateHumanEmailResponse> __Method_UpdateHumanEmail = new grpc::Method<global::Zitadel.Management.V1.UpdateHumanEmailRequest, global::Zitadel.Management.V1.UpdateHumanEmailResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateHumanEmail",
        __Marshaller_zitadel_management_v1_UpdateHumanEmailRequest,
        __Marshaller_zitadel_management_v1_UpdateHumanEmailResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResendHumanInitializationRequest, global::Zitadel.Management.V1.ResendHumanInitializationResponse> __Method_ResendHumanInitialization = new grpc::Method<global::Zitadel.Management.V1.ResendHumanInitializationRequest, global::Zitadel.Management.V1.ResendHumanInitializationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResendHumanInitialization",
        __Marshaller_zitadel_management_v1_ResendHumanInitializationRequest,
        __Marshaller_zitadel_management_v1_ResendHumanInitializationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResendHumanEmailVerificationRequest, global::Zitadel.Management.V1.ResendHumanEmailVerificationResponse> __Method_ResendHumanEmailVerification = new grpc::Method<global::Zitadel.Management.V1.ResendHumanEmailVerificationRequest, global::Zitadel.Management.V1.ResendHumanEmailVerificationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResendHumanEmailVerification",
        __Marshaller_zitadel_management_v1_ResendHumanEmailVerificationRequest,
        __Marshaller_zitadel_management_v1_ResendHumanEmailVerificationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetHumanPhoneRequest, global::Zitadel.Management.V1.GetHumanPhoneResponse> __Method_GetHumanPhone = new grpc::Method<global::Zitadel.Management.V1.GetHumanPhoneRequest, global::Zitadel.Management.V1.GetHumanPhoneResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetHumanPhone",
        __Marshaller_zitadel_management_v1_GetHumanPhoneRequest,
        __Marshaller_zitadel_management_v1_GetHumanPhoneResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateHumanPhoneRequest, global::Zitadel.Management.V1.UpdateHumanPhoneResponse> __Method_UpdateHumanPhone = new grpc::Method<global::Zitadel.Management.V1.UpdateHumanPhoneRequest, global::Zitadel.Management.V1.UpdateHumanPhoneResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateHumanPhone",
        __Marshaller_zitadel_management_v1_UpdateHumanPhoneRequest,
        __Marshaller_zitadel_management_v1_UpdateHumanPhoneResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveHumanPhoneRequest, global::Zitadel.Management.V1.RemoveHumanPhoneResponse> __Method_RemoveHumanPhone = new grpc::Method<global::Zitadel.Management.V1.RemoveHumanPhoneRequest, global::Zitadel.Management.V1.RemoveHumanPhoneResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveHumanPhone",
        __Marshaller_zitadel_management_v1_RemoveHumanPhoneRequest,
        __Marshaller_zitadel_management_v1_RemoveHumanPhoneResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResendHumanPhoneVerificationRequest, global::Zitadel.Management.V1.ResendHumanPhoneVerificationResponse> __Method_ResendHumanPhoneVerification = new grpc::Method<global::Zitadel.Management.V1.ResendHumanPhoneVerificationRequest, global::Zitadel.Management.V1.ResendHumanPhoneVerificationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResendHumanPhoneVerification",
        __Marshaller_zitadel_management_v1_ResendHumanPhoneVerificationRequest,
        __Marshaller_zitadel_management_v1_ResendHumanPhoneVerificationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveHumanAvatarRequest, global::Zitadel.Management.V1.RemoveHumanAvatarResponse> __Method_RemoveHumanAvatar = new grpc::Method<global::Zitadel.Management.V1.RemoveHumanAvatarRequest, global::Zitadel.Management.V1.RemoveHumanAvatarResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveHumanAvatar",
        __Marshaller_zitadel_management_v1_RemoveHumanAvatarRequest,
        __Marshaller_zitadel_management_v1_RemoveHumanAvatarResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SetHumanInitialPasswordRequest, global::Zitadel.Management.V1.SetHumanInitialPasswordResponse> __Method_SetHumanInitialPassword = new grpc::Method<global::Zitadel.Management.V1.SetHumanInitialPasswordRequest, global::Zitadel.Management.V1.SetHumanInitialPasswordResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetHumanInitialPassword",
        __Marshaller_zitadel_management_v1_SetHumanInitialPasswordRequest,
        __Marshaller_zitadel_management_v1_SetHumanInitialPasswordResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SetHumanPasswordRequest, global::Zitadel.Management.V1.SetHumanPasswordResponse> __Method_SetHumanPassword = new grpc::Method<global::Zitadel.Management.V1.SetHumanPasswordRequest, global::Zitadel.Management.V1.SetHumanPasswordResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetHumanPassword",
        __Marshaller_zitadel_management_v1_SetHumanPasswordRequest,
        __Marshaller_zitadel_management_v1_SetHumanPasswordResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SendHumanResetPasswordNotificationRequest, global::Zitadel.Management.V1.SendHumanResetPasswordNotificationResponse> __Method_SendHumanResetPasswordNotification = new grpc::Method<global::Zitadel.Management.V1.SendHumanResetPasswordNotificationRequest, global::Zitadel.Management.V1.SendHumanResetPasswordNotificationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendHumanResetPasswordNotification",
        __Marshaller_zitadel_management_v1_SendHumanResetPasswordNotificationRequest,
        __Marshaller_zitadel_management_v1_SendHumanResetPasswordNotificationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListHumanAuthFactorsRequest, global::Zitadel.Management.V1.ListHumanAuthFactorsResponse> __Method_ListHumanAuthFactors = new grpc::Method<global::Zitadel.Management.V1.ListHumanAuthFactorsRequest, global::Zitadel.Management.V1.ListHumanAuthFactorsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListHumanAuthFactors",
        __Marshaller_zitadel_management_v1_ListHumanAuthFactorsRequest,
        __Marshaller_zitadel_management_v1_ListHumanAuthFactorsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPRequest, global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPResponse> __Method_RemoveHumanAuthFactorOTP = new grpc::Method<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPRequest, global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveHumanAuthFactorOTP",
        __Marshaller_zitadel_management_v1_RemoveHumanAuthFactorOTPRequest,
        __Marshaller_zitadel_management_v1_RemoveHumanAuthFactorOTPResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FRequest, global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FResponse> __Method_RemoveHumanAuthFactorU2F = new grpc::Method<global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FRequest, global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveHumanAuthFactorU2F",
        __Marshaller_zitadel_management_v1_RemoveHumanAuthFactorU2FRequest,
        __Marshaller_zitadel_management_v1_RemoveHumanAuthFactorU2FResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSRequest, global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSResponse> __Method_RemoveHumanAuthFactorOTPSMS = new grpc::Method<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSRequest, global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveHumanAuthFactorOTPSMS",
        __Marshaller_zitadel_management_v1_RemoveHumanAuthFactorOTPSMSRequest,
        __Marshaller_zitadel_management_v1_RemoveHumanAuthFactorOTPSMSResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailRequest, global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailResponse> __Method_RemoveHumanAuthFactorOTPEmail = new grpc::Method<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailRequest, global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveHumanAuthFactorOTPEmail",
        __Marshaller_zitadel_management_v1_RemoveHumanAuthFactorOTPEmailRequest,
        __Marshaller_zitadel_management_v1_RemoveHumanAuthFactorOTPEmailResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListHumanPasswordlessRequest, global::Zitadel.Management.V1.ListHumanPasswordlessResponse> __Method_ListHumanPasswordless = new grpc::Method<global::Zitadel.Management.V1.ListHumanPasswordlessRequest, global::Zitadel.Management.V1.ListHumanPasswordlessResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListHumanPasswordless",
        __Marshaller_zitadel_management_v1_ListHumanPasswordlessRequest,
        __Marshaller_zitadel_management_v1_ListHumanPasswordlessResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddPasswordlessRegistrationRequest, global::Zitadel.Management.V1.AddPasswordlessRegistrationResponse> __Method_AddPasswordlessRegistration = new grpc::Method<global::Zitadel.Management.V1.AddPasswordlessRegistrationRequest, global::Zitadel.Management.V1.AddPasswordlessRegistrationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddPasswordlessRegistration",
        __Marshaller_zitadel_management_v1_AddPasswordlessRegistrationRequest,
        __Marshaller_zitadel_management_v1_AddPasswordlessRegistrationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SendPasswordlessRegistrationRequest, global::Zitadel.Management.V1.SendPasswordlessRegistrationResponse> __Method_SendPasswordlessRegistration = new grpc::Method<global::Zitadel.Management.V1.SendPasswordlessRegistrationRequest, global::Zitadel.Management.V1.SendPasswordlessRegistrationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SendPasswordlessRegistration",
        __Marshaller_zitadel_management_v1_SendPasswordlessRegistrationRequest,
        __Marshaller_zitadel_management_v1_SendPasswordlessRegistrationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveHumanPasswordlessRequest, global::Zitadel.Management.V1.RemoveHumanPasswordlessResponse> __Method_RemoveHumanPasswordless = new grpc::Method<global::Zitadel.Management.V1.RemoveHumanPasswordlessRequest, global::Zitadel.Management.V1.RemoveHumanPasswordlessResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveHumanPasswordless",
        __Marshaller_zitadel_management_v1_RemoveHumanPasswordlessRequest,
        __Marshaller_zitadel_management_v1_RemoveHumanPasswordlessResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateMachineRequest, global::Zitadel.Management.V1.UpdateMachineResponse> __Method_UpdateMachine = new grpc::Method<global::Zitadel.Management.V1.UpdateMachineRequest, global::Zitadel.Management.V1.UpdateMachineResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateMachine",
        __Marshaller_zitadel_management_v1_UpdateMachineRequest,
        __Marshaller_zitadel_management_v1_UpdateMachineResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GenerateMachineSecretRequest, global::Zitadel.Management.V1.GenerateMachineSecretResponse> __Method_GenerateMachineSecret = new grpc::Method<global::Zitadel.Management.V1.GenerateMachineSecretRequest, global::Zitadel.Management.V1.GenerateMachineSecretResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GenerateMachineSecret",
        __Marshaller_zitadel_management_v1_GenerateMachineSecretRequest,
        __Marshaller_zitadel_management_v1_GenerateMachineSecretResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveMachineSecretRequest, global::Zitadel.Management.V1.RemoveMachineSecretResponse> __Method_RemoveMachineSecret = new grpc::Method<global::Zitadel.Management.V1.RemoveMachineSecretRequest, global::Zitadel.Management.V1.RemoveMachineSecretResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveMachineSecret",
        __Marshaller_zitadel_management_v1_RemoveMachineSecretRequest,
        __Marshaller_zitadel_management_v1_RemoveMachineSecretResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetMachineKeyByIDsRequest, global::Zitadel.Management.V1.GetMachineKeyByIDsResponse> __Method_GetMachineKeyByIDs = new grpc::Method<global::Zitadel.Management.V1.GetMachineKeyByIDsRequest, global::Zitadel.Management.V1.GetMachineKeyByIDsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMachineKeyByIDs",
        __Marshaller_zitadel_management_v1_GetMachineKeyByIDsRequest,
        __Marshaller_zitadel_management_v1_GetMachineKeyByIDsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListMachineKeysRequest, global::Zitadel.Management.V1.ListMachineKeysResponse> __Method_ListMachineKeys = new grpc::Method<global::Zitadel.Management.V1.ListMachineKeysRequest, global::Zitadel.Management.V1.ListMachineKeysResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListMachineKeys",
        __Marshaller_zitadel_management_v1_ListMachineKeysRequest,
        __Marshaller_zitadel_management_v1_ListMachineKeysResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddMachineKeyRequest, global::Zitadel.Management.V1.AddMachineKeyResponse> __Method_AddMachineKey = new grpc::Method<global::Zitadel.Management.V1.AddMachineKeyRequest, global::Zitadel.Management.V1.AddMachineKeyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddMachineKey",
        __Marshaller_zitadel_management_v1_AddMachineKeyRequest,
        __Marshaller_zitadel_management_v1_AddMachineKeyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveMachineKeyRequest, global::Zitadel.Management.V1.RemoveMachineKeyResponse> __Method_RemoveMachineKey = new grpc::Method<global::Zitadel.Management.V1.RemoveMachineKeyRequest, global::Zitadel.Management.V1.RemoveMachineKeyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveMachineKey",
        __Marshaller_zitadel_management_v1_RemoveMachineKeyRequest,
        __Marshaller_zitadel_management_v1_RemoveMachineKeyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsRequest, global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsResponse> __Method_GetPersonalAccessTokenByIDs = new grpc::Method<global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsRequest, global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPersonalAccessTokenByIDs",
        __Marshaller_zitadel_management_v1_GetPersonalAccessTokenByIDsRequest,
        __Marshaller_zitadel_management_v1_GetPersonalAccessTokenByIDsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListPersonalAccessTokensRequest, global::Zitadel.Management.V1.ListPersonalAccessTokensResponse> __Method_ListPersonalAccessTokens = new grpc::Method<global::Zitadel.Management.V1.ListPersonalAccessTokensRequest, global::Zitadel.Management.V1.ListPersonalAccessTokensResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListPersonalAccessTokens",
        __Marshaller_zitadel_management_v1_ListPersonalAccessTokensRequest,
        __Marshaller_zitadel_management_v1_ListPersonalAccessTokensResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddPersonalAccessTokenRequest, global::Zitadel.Management.V1.AddPersonalAccessTokenResponse> __Method_AddPersonalAccessToken = new grpc::Method<global::Zitadel.Management.V1.AddPersonalAccessTokenRequest, global::Zitadel.Management.V1.AddPersonalAccessTokenResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddPersonalAccessToken",
        __Marshaller_zitadel_management_v1_AddPersonalAccessTokenRequest,
        __Marshaller_zitadel_management_v1_AddPersonalAccessTokenResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemovePersonalAccessTokenRequest, global::Zitadel.Management.V1.RemovePersonalAccessTokenResponse> __Method_RemovePersonalAccessToken = new grpc::Method<global::Zitadel.Management.V1.RemovePersonalAccessTokenRequest, global::Zitadel.Management.V1.RemovePersonalAccessTokenResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemovePersonalAccessToken",
        __Marshaller_zitadel_management_v1_RemovePersonalAccessTokenRequest,
        __Marshaller_zitadel_management_v1_RemovePersonalAccessTokenResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListHumanLinkedIDPsRequest, global::Zitadel.Management.V1.ListHumanLinkedIDPsResponse> __Method_ListHumanLinkedIDPs = new grpc::Method<global::Zitadel.Management.V1.ListHumanLinkedIDPsRequest, global::Zitadel.Management.V1.ListHumanLinkedIDPsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListHumanLinkedIDPs",
        __Marshaller_zitadel_management_v1_ListHumanLinkedIDPsRequest,
        __Marshaller_zitadel_management_v1_ListHumanLinkedIDPsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveHumanLinkedIDPRequest, global::Zitadel.Management.V1.RemoveHumanLinkedIDPResponse> __Method_RemoveHumanLinkedIDP = new grpc::Method<global::Zitadel.Management.V1.RemoveHumanLinkedIDPRequest, global::Zitadel.Management.V1.RemoveHumanLinkedIDPResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveHumanLinkedIDP",
        __Marshaller_zitadel_management_v1_RemoveHumanLinkedIDPRequest,
        __Marshaller_zitadel_management_v1_RemoveHumanLinkedIDPResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListUserMembershipsRequest, global::Zitadel.Management.V1.ListUserMembershipsResponse> __Method_ListUserMemberships = new grpc::Method<global::Zitadel.Management.V1.ListUserMembershipsRequest, global::Zitadel.Management.V1.ListUserMembershipsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListUserMemberships",
        __Marshaller_zitadel_management_v1_ListUserMembershipsRequest,
        __Marshaller_zitadel_management_v1_ListUserMembershipsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetMyOrgRequest, global::Zitadel.Management.V1.GetMyOrgResponse> __Method_GetMyOrg = new grpc::Method<global::Zitadel.Management.V1.GetMyOrgRequest, global::Zitadel.Management.V1.GetMyOrgResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMyOrg",
        __Marshaller_zitadel_management_v1_GetMyOrgRequest,
        __Marshaller_zitadel_management_v1_GetMyOrgResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetOrgByDomainGlobalRequest, global::Zitadel.Management.V1.GetOrgByDomainGlobalResponse> __Method_GetOrgByDomainGlobal = new grpc::Method<global::Zitadel.Management.V1.GetOrgByDomainGlobalRequest, global::Zitadel.Management.V1.GetOrgByDomainGlobalResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrgByDomainGlobal",
        __Marshaller_zitadel_management_v1_GetOrgByDomainGlobalRequest,
        __Marshaller_zitadel_management_v1_GetOrgByDomainGlobalResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListOrgChangesRequest, global::Zitadel.Management.V1.ListOrgChangesResponse> __Method_ListOrgChanges = new grpc::Method<global::Zitadel.Management.V1.ListOrgChangesRequest, global::Zitadel.Management.V1.ListOrgChangesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListOrgChanges",
        __Marshaller_zitadel_management_v1_ListOrgChangesRequest,
        __Marshaller_zitadel_management_v1_ListOrgChangesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddOrgRequest, global::Zitadel.Management.V1.AddOrgResponse> __Method_AddOrg = new grpc::Method<global::Zitadel.Management.V1.AddOrgRequest, global::Zitadel.Management.V1.AddOrgResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddOrg",
        __Marshaller_zitadel_management_v1_AddOrgRequest,
        __Marshaller_zitadel_management_v1_AddOrgResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateOrgRequest, global::Zitadel.Management.V1.UpdateOrgResponse> __Method_UpdateOrg = new grpc::Method<global::Zitadel.Management.V1.UpdateOrgRequest, global::Zitadel.Management.V1.UpdateOrgResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateOrg",
        __Marshaller_zitadel_management_v1_UpdateOrgRequest,
        __Marshaller_zitadel_management_v1_UpdateOrgResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.DeactivateOrgRequest, global::Zitadel.Management.V1.DeactivateOrgResponse> __Method_DeactivateOrg = new grpc::Method<global::Zitadel.Management.V1.DeactivateOrgRequest, global::Zitadel.Management.V1.DeactivateOrgResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeactivateOrg",
        __Marshaller_zitadel_management_v1_DeactivateOrgRequest,
        __Marshaller_zitadel_management_v1_DeactivateOrgResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ReactivateOrgRequest, global::Zitadel.Management.V1.ReactivateOrgResponse> __Method_ReactivateOrg = new grpc::Method<global::Zitadel.Management.V1.ReactivateOrgRequest, global::Zitadel.Management.V1.ReactivateOrgResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReactivateOrg",
        __Marshaller_zitadel_management_v1_ReactivateOrgRequest,
        __Marshaller_zitadel_management_v1_ReactivateOrgResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveOrgRequest, global::Zitadel.Management.V1.RemoveOrgResponse> __Method_RemoveOrg = new grpc::Method<global::Zitadel.Management.V1.RemoveOrgRequest, global::Zitadel.Management.V1.RemoveOrgResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveOrg",
        __Marshaller_zitadel_management_v1_RemoveOrgRequest,
        __Marshaller_zitadel_management_v1_RemoveOrgResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SetOrgMetadataRequest, global::Zitadel.Management.V1.SetOrgMetadataResponse> __Method_SetOrgMetadata = new grpc::Method<global::Zitadel.Management.V1.SetOrgMetadataRequest, global::Zitadel.Management.V1.SetOrgMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetOrgMetadata",
        __Marshaller_zitadel_management_v1_SetOrgMetadataRequest,
        __Marshaller_zitadel_management_v1_SetOrgMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.BulkSetOrgMetadataRequest, global::Zitadel.Management.V1.BulkSetOrgMetadataResponse> __Method_BulkSetOrgMetadata = new grpc::Method<global::Zitadel.Management.V1.BulkSetOrgMetadataRequest, global::Zitadel.Management.V1.BulkSetOrgMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BulkSetOrgMetadata",
        __Marshaller_zitadel_management_v1_BulkSetOrgMetadataRequest,
        __Marshaller_zitadel_management_v1_BulkSetOrgMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListOrgMetadataRequest, global::Zitadel.Management.V1.ListOrgMetadataResponse> __Method_ListOrgMetadata = new grpc::Method<global::Zitadel.Management.V1.ListOrgMetadataRequest, global::Zitadel.Management.V1.ListOrgMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListOrgMetadata",
        __Marshaller_zitadel_management_v1_ListOrgMetadataRequest,
        __Marshaller_zitadel_management_v1_ListOrgMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetOrgMetadataRequest, global::Zitadel.Management.V1.GetOrgMetadataResponse> __Method_GetOrgMetadata = new grpc::Method<global::Zitadel.Management.V1.GetOrgMetadataRequest, global::Zitadel.Management.V1.GetOrgMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrgMetadata",
        __Marshaller_zitadel_management_v1_GetOrgMetadataRequest,
        __Marshaller_zitadel_management_v1_GetOrgMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveOrgMetadataRequest, global::Zitadel.Management.V1.RemoveOrgMetadataResponse> __Method_RemoveOrgMetadata = new grpc::Method<global::Zitadel.Management.V1.RemoveOrgMetadataRequest, global::Zitadel.Management.V1.RemoveOrgMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveOrgMetadata",
        __Marshaller_zitadel_management_v1_RemoveOrgMetadataRequest,
        __Marshaller_zitadel_management_v1_RemoveOrgMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.BulkRemoveOrgMetadataRequest, global::Zitadel.Management.V1.BulkRemoveOrgMetadataResponse> __Method_BulkRemoveOrgMetadata = new grpc::Method<global::Zitadel.Management.V1.BulkRemoveOrgMetadataRequest, global::Zitadel.Management.V1.BulkRemoveOrgMetadataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BulkRemoveOrgMetadata",
        __Marshaller_zitadel_management_v1_BulkRemoveOrgMetadataRequest,
        __Marshaller_zitadel_management_v1_BulkRemoveOrgMetadataResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddOrgDomainRequest, global::Zitadel.Management.V1.AddOrgDomainResponse> __Method_AddOrgDomain = new grpc::Method<global::Zitadel.Management.V1.AddOrgDomainRequest, global::Zitadel.Management.V1.AddOrgDomainResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddOrgDomain",
        __Marshaller_zitadel_management_v1_AddOrgDomainRequest,
        __Marshaller_zitadel_management_v1_AddOrgDomainResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListOrgDomainsRequest, global::Zitadel.Management.V1.ListOrgDomainsResponse> __Method_ListOrgDomains = new grpc::Method<global::Zitadel.Management.V1.ListOrgDomainsRequest, global::Zitadel.Management.V1.ListOrgDomainsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListOrgDomains",
        __Marshaller_zitadel_management_v1_ListOrgDomainsRequest,
        __Marshaller_zitadel_management_v1_ListOrgDomainsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveOrgDomainRequest, global::Zitadel.Management.V1.RemoveOrgDomainResponse> __Method_RemoveOrgDomain = new grpc::Method<global::Zitadel.Management.V1.RemoveOrgDomainRequest, global::Zitadel.Management.V1.RemoveOrgDomainResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveOrgDomain",
        __Marshaller_zitadel_management_v1_RemoveOrgDomainRequest,
        __Marshaller_zitadel_management_v1_RemoveOrgDomainResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GenerateOrgDomainValidationRequest, global::Zitadel.Management.V1.GenerateOrgDomainValidationResponse> __Method_GenerateOrgDomainValidation = new grpc::Method<global::Zitadel.Management.V1.GenerateOrgDomainValidationRequest, global::Zitadel.Management.V1.GenerateOrgDomainValidationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GenerateOrgDomainValidation",
        __Marshaller_zitadel_management_v1_GenerateOrgDomainValidationRequest,
        __Marshaller_zitadel_management_v1_GenerateOrgDomainValidationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ValidateOrgDomainRequest, global::Zitadel.Management.V1.ValidateOrgDomainResponse> __Method_ValidateOrgDomain = new grpc::Method<global::Zitadel.Management.V1.ValidateOrgDomainRequest, global::Zitadel.Management.V1.ValidateOrgDomainResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ValidateOrgDomain",
        __Marshaller_zitadel_management_v1_ValidateOrgDomainRequest,
        __Marshaller_zitadel_management_v1_ValidateOrgDomainResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SetPrimaryOrgDomainRequest, global::Zitadel.Management.V1.SetPrimaryOrgDomainResponse> __Method_SetPrimaryOrgDomain = new grpc::Method<global::Zitadel.Management.V1.SetPrimaryOrgDomainRequest, global::Zitadel.Management.V1.SetPrimaryOrgDomainResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetPrimaryOrgDomain",
        __Marshaller_zitadel_management_v1_SetPrimaryOrgDomainRequest,
        __Marshaller_zitadel_management_v1_SetPrimaryOrgDomainResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListOrgMemberRolesRequest, global::Zitadel.Management.V1.ListOrgMemberRolesResponse> __Method_ListOrgMemberRoles = new grpc::Method<global::Zitadel.Management.V1.ListOrgMemberRolesRequest, global::Zitadel.Management.V1.ListOrgMemberRolesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListOrgMemberRoles",
        __Marshaller_zitadel_management_v1_ListOrgMemberRolesRequest,
        __Marshaller_zitadel_management_v1_ListOrgMemberRolesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListOrgMembersRequest, global::Zitadel.Management.V1.ListOrgMembersResponse> __Method_ListOrgMembers = new grpc::Method<global::Zitadel.Management.V1.ListOrgMembersRequest, global::Zitadel.Management.V1.ListOrgMembersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListOrgMembers",
        __Marshaller_zitadel_management_v1_ListOrgMembersRequest,
        __Marshaller_zitadel_management_v1_ListOrgMembersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddOrgMemberRequest, global::Zitadel.Management.V1.AddOrgMemberResponse> __Method_AddOrgMember = new grpc::Method<global::Zitadel.Management.V1.AddOrgMemberRequest, global::Zitadel.Management.V1.AddOrgMemberResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddOrgMember",
        __Marshaller_zitadel_management_v1_AddOrgMemberRequest,
        __Marshaller_zitadel_management_v1_AddOrgMemberResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateOrgMemberRequest, global::Zitadel.Management.V1.UpdateOrgMemberResponse> __Method_UpdateOrgMember = new grpc::Method<global::Zitadel.Management.V1.UpdateOrgMemberRequest, global::Zitadel.Management.V1.UpdateOrgMemberResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateOrgMember",
        __Marshaller_zitadel_management_v1_UpdateOrgMemberRequest,
        __Marshaller_zitadel_management_v1_UpdateOrgMemberResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveOrgMemberRequest, global::Zitadel.Management.V1.RemoveOrgMemberResponse> __Method_RemoveOrgMember = new grpc::Method<global::Zitadel.Management.V1.RemoveOrgMemberRequest, global::Zitadel.Management.V1.RemoveOrgMemberResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveOrgMember",
        __Marshaller_zitadel_management_v1_RemoveOrgMemberRequest,
        __Marshaller_zitadel_management_v1_RemoveOrgMemberResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetProjectByIDRequest, global::Zitadel.Management.V1.GetProjectByIDResponse> __Method_GetProjectByID = new grpc::Method<global::Zitadel.Management.V1.GetProjectByIDRequest, global::Zitadel.Management.V1.GetProjectByIDResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProjectByID",
        __Marshaller_zitadel_management_v1_GetProjectByIDRequest,
        __Marshaller_zitadel_management_v1_GetProjectByIDResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetGrantedProjectByIDRequest, global::Zitadel.Management.V1.GetGrantedProjectByIDResponse> __Method_GetGrantedProjectByID = new grpc::Method<global::Zitadel.Management.V1.GetGrantedProjectByIDRequest, global::Zitadel.Management.V1.GetGrantedProjectByIDResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetGrantedProjectByID",
        __Marshaller_zitadel_management_v1_GetGrantedProjectByIDRequest,
        __Marshaller_zitadel_management_v1_GetGrantedProjectByIDResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListProjectsRequest, global::Zitadel.Management.V1.ListProjectsResponse> __Method_ListProjects = new grpc::Method<global::Zitadel.Management.V1.ListProjectsRequest, global::Zitadel.Management.V1.ListProjectsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProjects",
        __Marshaller_zitadel_management_v1_ListProjectsRequest,
        __Marshaller_zitadel_management_v1_ListProjectsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListGrantedProjectsRequest, global::Zitadel.Management.V1.ListGrantedProjectsResponse> __Method_ListGrantedProjects = new grpc::Method<global::Zitadel.Management.V1.ListGrantedProjectsRequest, global::Zitadel.Management.V1.ListGrantedProjectsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListGrantedProjects",
        __Marshaller_zitadel_management_v1_ListGrantedProjectsRequest,
        __Marshaller_zitadel_management_v1_ListGrantedProjectsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListGrantedProjectRolesRequest, global::Zitadel.Management.V1.ListGrantedProjectRolesResponse> __Method_ListGrantedProjectRoles = new grpc::Method<global::Zitadel.Management.V1.ListGrantedProjectRolesRequest, global::Zitadel.Management.V1.ListGrantedProjectRolesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListGrantedProjectRoles",
        __Marshaller_zitadel_management_v1_ListGrantedProjectRolesRequest,
        __Marshaller_zitadel_management_v1_ListGrantedProjectRolesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListProjectChangesRequest, global::Zitadel.Management.V1.ListProjectChangesResponse> __Method_ListProjectChanges = new grpc::Method<global::Zitadel.Management.V1.ListProjectChangesRequest, global::Zitadel.Management.V1.ListProjectChangesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProjectChanges",
        __Marshaller_zitadel_management_v1_ListProjectChangesRequest,
        __Marshaller_zitadel_management_v1_ListProjectChangesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddProjectRequest, global::Zitadel.Management.V1.AddProjectResponse> __Method_AddProject = new grpc::Method<global::Zitadel.Management.V1.AddProjectRequest, global::Zitadel.Management.V1.AddProjectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddProject",
        __Marshaller_zitadel_management_v1_AddProjectRequest,
        __Marshaller_zitadel_management_v1_AddProjectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateProjectRequest, global::Zitadel.Management.V1.UpdateProjectResponse> __Method_UpdateProject = new grpc::Method<global::Zitadel.Management.V1.UpdateProjectRequest, global::Zitadel.Management.V1.UpdateProjectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProject",
        __Marshaller_zitadel_management_v1_UpdateProjectRequest,
        __Marshaller_zitadel_management_v1_UpdateProjectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.DeactivateProjectRequest, global::Zitadel.Management.V1.DeactivateProjectResponse> __Method_DeactivateProject = new grpc::Method<global::Zitadel.Management.V1.DeactivateProjectRequest, global::Zitadel.Management.V1.DeactivateProjectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeactivateProject",
        __Marshaller_zitadel_management_v1_DeactivateProjectRequest,
        __Marshaller_zitadel_management_v1_DeactivateProjectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ReactivateProjectRequest, global::Zitadel.Management.V1.ReactivateProjectResponse> __Method_ReactivateProject = new grpc::Method<global::Zitadel.Management.V1.ReactivateProjectRequest, global::Zitadel.Management.V1.ReactivateProjectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReactivateProject",
        __Marshaller_zitadel_management_v1_ReactivateProjectRequest,
        __Marshaller_zitadel_management_v1_ReactivateProjectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveProjectRequest, global::Zitadel.Management.V1.RemoveProjectResponse> __Method_RemoveProject = new grpc::Method<global::Zitadel.Management.V1.RemoveProjectRequest, global::Zitadel.Management.V1.RemoveProjectResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveProject",
        __Marshaller_zitadel_management_v1_RemoveProjectRequest,
        __Marshaller_zitadel_management_v1_RemoveProjectResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListProjectRolesRequest, global::Zitadel.Management.V1.ListProjectRolesResponse> __Method_ListProjectRoles = new grpc::Method<global::Zitadel.Management.V1.ListProjectRolesRequest, global::Zitadel.Management.V1.ListProjectRolesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProjectRoles",
        __Marshaller_zitadel_management_v1_ListProjectRolesRequest,
        __Marshaller_zitadel_management_v1_ListProjectRolesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddProjectRoleRequest, global::Zitadel.Management.V1.AddProjectRoleResponse> __Method_AddProjectRole = new grpc::Method<global::Zitadel.Management.V1.AddProjectRoleRequest, global::Zitadel.Management.V1.AddProjectRoleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddProjectRole",
        __Marshaller_zitadel_management_v1_AddProjectRoleRequest,
        __Marshaller_zitadel_management_v1_AddProjectRoleResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.BulkAddProjectRolesRequest, global::Zitadel.Management.V1.BulkAddProjectRolesResponse> __Method_BulkAddProjectRoles = new grpc::Method<global::Zitadel.Management.V1.BulkAddProjectRolesRequest, global::Zitadel.Management.V1.BulkAddProjectRolesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BulkAddProjectRoles",
        __Marshaller_zitadel_management_v1_BulkAddProjectRolesRequest,
        __Marshaller_zitadel_management_v1_BulkAddProjectRolesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateProjectRoleRequest, global::Zitadel.Management.V1.UpdateProjectRoleResponse> __Method_UpdateProjectRole = new grpc::Method<global::Zitadel.Management.V1.UpdateProjectRoleRequest, global::Zitadel.Management.V1.UpdateProjectRoleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProjectRole",
        __Marshaller_zitadel_management_v1_UpdateProjectRoleRequest,
        __Marshaller_zitadel_management_v1_UpdateProjectRoleResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveProjectRoleRequest, global::Zitadel.Management.V1.RemoveProjectRoleResponse> __Method_RemoveProjectRole = new grpc::Method<global::Zitadel.Management.V1.RemoveProjectRoleRequest, global::Zitadel.Management.V1.RemoveProjectRoleResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveProjectRole",
        __Marshaller_zitadel_management_v1_RemoveProjectRoleRequest,
        __Marshaller_zitadel_management_v1_RemoveProjectRoleResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListProjectMemberRolesRequest, global::Zitadel.Management.V1.ListProjectMemberRolesResponse> __Method_ListProjectMemberRoles = new grpc::Method<global::Zitadel.Management.V1.ListProjectMemberRolesRequest, global::Zitadel.Management.V1.ListProjectMemberRolesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProjectMemberRoles",
        __Marshaller_zitadel_management_v1_ListProjectMemberRolesRequest,
        __Marshaller_zitadel_management_v1_ListProjectMemberRolesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListProjectMembersRequest, global::Zitadel.Management.V1.ListProjectMembersResponse> __Method_ListProjectMembers = new grpc::Method<global::Zitadel.Management.V1.ListProjectMembersRequest, global::Zitadel.Management.V1.ListProjectMembersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProjectMembers",
        __Marshaller_zitadel_management_v1_ListProjectMembersRequest,
        __Marshaller_zitadel_management_v1_ListProjectMembersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddProjectMemberRequest, global::Zitadel.Management.V1.AddProjectMemberResponse> __Method_AddProjectMember = new grpc::Method<global::Zitadel.Management.V1.AddProjectMemberRequest, global::Zitadel.Management.V1.AddProjectMemberResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddProjectMember",
        __Marshaller_zitadel_management_v1_AddProjectMemberRequest,
        __Marshaller_zitadel_management_v1_AddProjectMemberResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateProjectMemberRequest, global::Zitadel.Management.V1.UpdateProjectMemberResponse> __Method_UpdateProjectMember = new grpc::Method<global::Zitadel.Management.V1.UpdateProjectMemberRequest, global::Zitadel.Management.V1.UpdateProjectMemberResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProjectMember",
        __Marshaller_zitadel_management_v1_UpdateProjectMemberRequest,
        __Marshaller_zitadel_management_v1_UpdateProjectMemberResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveProjectMemberRequest, global::Zitadel.Management.V1.RemoveProjectMemberResponse> __Method_RemoveProjectMember = new grpc::Method<global::Zitadel.Management.V1.RemoveProjectMemberRequest, global::Zitadel.Management.V1.RemoveProjectMemberResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveProjectMember",
        __Marshaller_zitadel_management_v1_RemoveProjectMemberRequest,
        __Marshaller_zitadel_management_v1_RemoveProjectMemberResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetAppByIDRequest, global::Zitadel.Management.V1.GetAppByIDResponse> __Method_GetAppByID = new grpc::Method<global::Zitadel.Management.V1.GetAppByIDRequest, global::Zitadel.Management.V1.GetAppByIDResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAppByID",
        __Marshaller_zitadel_management_v1_GetAppByIDRequest,
        __Marshaller_zitadel_management_v1_GetAppByIDResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListAppsRequest, global::Zitadel.Management.V1.ListAppsResponse> __Method_ListApps = new grpc::Method<global::Zitadel.Management.V1.ListAppsRequest, global::Zitadel.Management.V1.ListAppsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListApps",
        __Marshaller_zitadel_management_v1_ListAppsRequest,
        __Marshaller_zitadel_management_v1_ListAppsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListAppChangesRequest, global::Zitadel.Management.V1.ListAppChangesResponse> __Method_ListAppChanges = new grpc::Method<global::Zitadel.Management.V1.ListAppChangesRequest, global::Zitadel.Management.V1.ListAppChangesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAppChanges",
        __Marshaller_zitadel_management_v1_ListAppChangesRequest,
        __Marshaller_zitadel_management_v1_ListAppChangesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddOIDCAppRequest, global::Zitadel.Management.V1.AddOIDCAppResponse> __Method_AddOIDCApp = new grpc::Method<global::Zitadel.Management.V1.AddOIDCAppRequest, global::Zitadel.Management.V1.AddOIDCAppResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddOIDCApp",
        __Marshaller_zitadel_management_v1_AddOIDCAppRequest,
        __Marshaller_zitadel_management_v1_AddOIDCAppResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddSAMLAppRequest, global::Zitadel.Management.V1.AddSAMLAppResponse> __Method_AddSAMLApp = new grpc::Method<global::Zitadel.Management.V1.AddSAMLAppRequest, global::Zitadel.Management.V1.AddSAMLAppResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddSAMLApp",
        __Marshaller_zitadel_management_v1_AddSAMLAppRequest,
        __Marshaller_zitadel_management_v1_AddSAMLAppResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddAPIAppRequest, global::Zitadel.Management.V1.AddAPIAppResponse> __Method_AddAPIApp = new grpc::Method<global::Zitadel.Management.V1.AddAPIAppRequest, global::Zitadel.Management.V1.AddAPIAppResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddAPIApp",
        __Marshaller_zitadel_management_v1_AddAPIAppRequest,
        __Marshaller_zitadel_management_v1_AddAPIAppResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateAppRequest, global::Zitadel.Management.V1.UpdateAppResponse> __Method_UpdateApp = new grpc::Method<global::Zitadel.Management.V1.UpdateAppRequest, global::Zitadel.Management.V1.UpdateAppResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateApp",
        __Marshaller_zitadel_management_v1_UpdateAppRequest,
        __Marshaller_zitadel_management_v1_UpdateAppResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateOIDCAppConfigRequest, global::Zitadel.Management.V1.UpdateOIDCAppConfigResponse> __Method_UpdateOIDCAppConfig = new grpc::Method<global::Zitadel.Management.V1.UpdateOIDCAppConfigRequest, global::Zitadel.Management.V1.UpdateOIDCAppConfigResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateOIDCAppConfig",
        __Marshaller_zitadel_management_v1_UpdateOIDCAppConfigRequest,
        __Marshaller_zitadel_management_v1_UpdateOIDCAppConfigResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateSAMLAppConfigRequest, global::Zitadel.Management.V1.UpdateSAMLAppConfigResponse> __Method_UpdateSAMLAppConfig = new grpc::Method<global::Zitadel.Management.V1.UpdateSAMLAppConfigRequest, global::Zitadel.Management.V1.UpdateSAMLAppConfigResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSAMLAppConfig",
        __Marshaller_zitadel_management_v1_UpdateSAMLAppConfigRequest,
        __Marshaller_zitadel_management_v1_UpdateSAMLAppConfigResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateAPIAppConfigRequest, global::Zitadel.Management.V1.UpdateAPIAppConfigResponse> __Method_UpdateAPIAppConfig = new grpc::Method<global::Zitadel.Management.V1.UpdateAPIAppConfigRequest, global::Zitadel.Management.V1.UpdateAPIAppConfigResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAPIAppConfig",
        __Marshaller_zitadel_management_v1_UpdateAPIAppConfigRequest,
        __Marshaller_zitadel_management_v1_UpdateAPIAppConfigResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.DeactivateAppRequest, global::Zitadel.Management.V1.DeactivateAppResponse> __Method_DeactivateApp = new grpc::Method<global::Zitadel.Management.V1.DeactivateAppRequest, global::Zitadel.Management.V1.DeactivateAppResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeactivateApp",
        __Marshaller_zitadel_management_v1_DeactivateAppRequest,
        __Marshaller_zitadel_management_v1_DeactivateAppResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ReactivateAppRequest, global::Zitadel.Management.V1.ReactivateAppResponse> __Method_ReactivateApp = new grpc::Method<global::Zitadel.Management.V1.ReactivateAppRequest, global::Zitadel.Management.V1.ReactivateAppResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReactivateApp",
        __Marshaller_zitadel_management_v1_ReactivateAppRequest,
        __Marshaller_zitadel_management_v1_ReactivateAppResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveAppRequest, global::Zitadel.Management.V1.RemoveAppResponse> __Method_RemoveApp = new grpc::Method<global::Zitadel.Management.V1.RemoveAppRequest, global::Zitadel.Management.V1.RemoveAppResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveApp",
        __Marshaller_zitadel_management_v1_RemoveAppRequest,
        __Marshaller_zitadel_management_v1_RemoveAppResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RegenerateOIDCClientSecretRequest, global::Zitadel.Management.V1.RegenerateOIDCClientSecretResponse> __Method_RegenerateOIDCClientSecret = new grpc::Method<global::Zitadel.Management.V1.RegenerateOIDCClientSecretRequest, global::Zitadel.Management.V1.RegenerateOIDCClientSecretResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegenerateOIDCClientSecret",
        __Marshaller_zitadel_management_v1_RegenerateOIDCClientSecretRequest,
        __Marshaller_zitadel_management_v1_RegenerateOIDCClientSecretResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RegenerateAPIClientSecretRequest, global::Zitadel.Management.V1.RegenerateAPIClientSecretResponse> __Method_RegenerateAPIClientSecret = new grpc::Method<global::Zitadel.Management.V1.RegenerateAPIClientSecretRequest, global::Zitadel.Management.V1.RegenerateAPIClientSecretResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegenerateAPIClientSecret",
        __Marshaller_zitadel_management_v1_RegenerateAPIClientSecretRequest,
        __Marshaller_zitadel_management_v1_RegenerateAPIClientSecretResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetAppKeyRequest, global::Zitadel.Management.V1.GetAppKeyResponse> __Method_GetAppKey = new grpc::Method<global::Zitadel.Management.V1.GetAppKeyRequest, global::Zitadel.Management.V1.GetAppKeyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAppKey",
        __Marshaller_zitadel_management_v1_GetAppKeyRequest,
        __Marshaller_zitadel_management_v1_GetAppKeyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListAppKeysRequest, global::Zitadel.Management.V1.ListAppKeysResponse> __Method_ListAppKeys = new grpc::Method<global::Zitadel.Management.V1.ListAppKeysRequest, global::Zitadel.Management.V1.ListAppKeysResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAppKeys",
        __Marshaller_zitadel_management_v1_ListAppKeysRequest,
        __Marshaller_zitadel_management_v1_ListAppKeysResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddAppKeyRequest, global::Zitadel.Management.V1.AddAppKeyResponse> __Method_AddAppKey = new grpc::Method<global::Zitadel.Management.V1.AddAppKeyRequest, global::Zitadel.Management.V1.AddAppKeyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddAppKey",
        __Marshaller_zitadel_management_v1_AddAppKeyRequest,
        __Marshaller_zitadel_management_v1_AddAppKeyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveAppKeyRequest, global::Zitadel.Management.V1.RemoveAppKeyResponse> __Method_RemoveAppKey = new grpc::Method<global::Zitadel.Management.V1.RemoveAppKeyRequest, global::Zitadel.Management.V1.RemoveAppKeyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveAppKey",
        __Marshaller_zitadel_management_v1_RemoveAppKeyRequest,
        __Marshaller_zitadel_management_v1_RemoveAppKeyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListProjectGrantChangesRequest, global::Zitadel.Management.V1.ListProjectGrantChangesResponse> __Method_ListProjectGrantChanges = new grpc::Method<global::Zitadel.Management.V1.ListProjectGrantChangesRequest, global::Zitadel.Management.V1.ListProjectGrantChangesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProjectGrantChanges",
        __Marshaller_zitadel_management_v1_ListProjectGrantChangesRequest,
        __Marshaller_zitadel_management_v1_ListProjectGrantChangesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetProjectGrantByIDRequest, global::Zitadel.Management.V1.GetProjectGrantByIDResponse> __Method_GetProjectGrantByID = new grpc::Method<global::Zitadel.Management.V1.GetProjectGrantByIDRequest, global::Zitadel.Management.V1.GetProjectGrantByIDResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProjectGrantByID",
        __Marshaller_zitadel_management_v1_GetProjectGrantByIDRequest,
        __Marshaller_zitadel_management_v1_GetProjectGrantByIDResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListProjectGrantsRequest, global::Zitadel.Management.V1.ListProjectGrantsResponse> __Method_ListProjectGrants = new grpc::Method<global::Zitadel.Management.V1.ListProjectGrantsRequest, global::Zitadel.Management.V1.ListProjectGrantsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProjectGrants",
        __Marshaller_zitadel_management_v1_ListProjectGrantsRequest,
        __Marshaller_zitadel_management_v1_ListProjectGrantsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListAllProjectGrantsRequest, global::Zitadel.Management.V1.ListAllProjectGrantsResponse> __Method_ListAllProjectGrants = new grpc::Method<global::Zitadel.Management.V1.ListAllProjectGrantsRequest, global::Zitadel.Management.V1.ListAllProjectGrantsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAllProjectGrants",
        __Marshaller_zitadel_management_v1_ListAllProjectGrantsRequest,
        __Marshaller_zitadel_management_v1_ListAllProjectGrantsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddProjectGrantRequest, global::Zitadel.Management.V1.AddProjectGrantResponse> __Method_AddProjectGrant = new grpc::Method<global::Zitadel.Management.V1.AddProjectGrantRequest, global::Zitadel.Management.V1.AddProjectGrantResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddProjectGrant",
        __Marshaller_zitadel_management_v1_AddProjectGrantRequest,
        __Marshaller_zitadel_management_v1_AddProjectGrantResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateProjectGrantRequest, global::Zitadel.Management.V1.UpdateProjectGrantResponse> __Method_UpdateProjectGrant = new grpc::Method<global::Zitadel.Management.V1.UpdateProjectGrantRequest, global::Zitadel.Management.V1.UpdateProjectGrantResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProjectGrant",
        __Marshaller_zitadel_management_v1_UpdateProjectGrantRequest,
        __Marshaller_zitadel_management_v1_UpdateProjectGrantResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.DeactivateProjectGrantRequest, global::Zitadel.Management.V1.DeactivateProjectGrantResponse> __Method_DeactivateProjectGrant = new grpc::Method<global::Zitadel.Management.V1.DeactivateProjectGrantRequest, global::Zitadel.Management.V1.DeactivateProjectGrantResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeactivateProjectGrant",
        __Marshaller_zitadel_management_v1_DeactivateProjectGrantRequest,
        __Marshaller_zitadel_management_v1_DeactivateProjectGrantResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ReactivateProjectGrantRequest, global::Zitadel.Management.V1.ReactivateProjectGrantResponse> __Method_ReactivateProjectGrant = new grpc::Method<global::Zitadel.Management.V1.ReactivateProjectGrantRequest, global::Zitadel.Management.V1.ReactivateProjectGrantResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReactivateProjectGrant",
        __Marshaller_zitadel_management_v1_ReactivateProjectGrantRequest,
        __Marshaller_zitadel_management_v1_ReactivateProjectGrantResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveProjectGrantRequest, global::Zitadel.Management.V1.RemoveProjectGrantResponse> __Method_RemoveProjectGrant = new grpc::Method<global::Zitadel.Management.V1.RemoveProjectGrantRequest, global::Zitadel.Management.V1.RemoveProjectGrantResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveProjectGrant",
        __Marshaller_zitadel_management_v1_RemoveProjectGrantRequest,
        __Marshaller_zitadel_management_v1_RemoveProjectGrantResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListProjectGrantMemberRolesRequest, global::Zitadel.Management.V1.ListProjectGrantMemberRolesResponse> __Method_ListProjectGrantMemberRoles = new grpc::Method<global::Zitadel.Management.V1.ListProjectGrantMemberRolesRequest, global::Zitadel.Management.V1.ListProjectGrantMemberRolesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProjectGrantMemberRoles",
        __Marshaller_zitadel_management_v1_ListProjectGrantMemberRolesRequest,
        __Marshaller_zitadel_management_v1_ListProjectGrantMemberRolesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListProjectGrantMembersRequest, global::Zitadel.Management.V1.ListProjectGrantMembersResponse> __Method_ListProjectGrantMembers = new grpc::Method<global::Zitadel.Management.V1.ListProjectGrantMembersRequest, global::Zitadel.Management.V1.ListProjectGrantMembersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProjectGrantMembers",
        __Marshaller_zitadel_management_v1_ListProjectGrantMembersRequest,
        __Marshaller_zitadel_management_v1_ListProjectGrantMembersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddProjectGrantMemberRequest, global::Zitadel.Management.V1.AddProjectGrantMemberResponse> __Method_AddProjectGrantMember = new grpc::Method<global::Zitadel.Management.V1.AddProjectGrantMemberRequest, global::Zitadel.Management.V1.AddProjectGrantMemberResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddProjectGrantMember",
        __Marshaller_zitadel_management_v1_AddProjectGrantMemberRequest,
        __Marshaller_zitadel_management_v1_AddProjectGrantMemberResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateProjectGrantMemberRequest, global::Zitadel.Management.V1.UpdateProjectGrantMemberResponse> __Method_UpdateProjectGrantMember = new grpc::Method<global::Zitadel.Management.V1.UpdateProjectGrantMemberRequest, global::Zitadel.Management.V1.UpdateProjectGrantMemberResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateProjectGrantMember",
        __Marshaller_zitadel_management_v1_UpdateProjectGrantMemberRequest,
        __Marshaller_zitadel_management_v1_UpdateProjectGrantMemberResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveProjectGrantMemberRequest, global::Zitadel.Management.V1.RemoveProjectGrantMemberResponse> __Method_RemoveProjectGrantMember = new grpc::Method<global::Zitadel.Management.V1.RemoveProjectGrantMemberRequest, global::Zitadel.Management.V1.RemoveProjectGrantMemberResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveProjectGrantMember",
        __Marshaller_zitadel_management_v1_RemoveProjectGrantMemberRequest,
        __Marshaller_zitadel_management_v1_RemoveProjectGrantMemberResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetUserGrantByIDRequest, global::Zitadel.Management.V1.GetUserGrantByIDResponse> __Method_GetUserGrantByID = new grpc::Method<global::Zitadel.Management.V1.GetUserGrantByIDRequest, global::Zitadel.Management.V1.GetUserGrantByIDResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserGrantByID",
        __Marshaller_zitadel_management_v1_GetUserGrantByIDRequest,
        __Marshaller_zitadel_management_v1_GetUserGrantByIDResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListUserGrantRequest, global::Zitadel.Management.V1.ListUserGrantResponse> __Method_ListUserGrants = new grpc::Method<global::Zitadel.Management.V1.ListUserGrantRequest, global::Zitadel.Management.V1.ListUserGrantResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListUserGrants",
        __Marshaller_zitadel_management_v1_ListUserGrantRequest,
        __Marshaller_zitadel_management_v1_ListUserGrantResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddUserGrantRequest, global::Zitadel.Management.V1.AddUserGrantResponse> __Method_AddUserGrant = new grpc::Method<global::Zitadel.Management.V1.AddUserGrantRequest, global::Zitadel.Management.V1.AddUserGrantResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddUserGrant",
        __Marshaller_zitadel_management_v1_AddUserGrantRequest,
        __Marshaller_zitadel_management_v1_AddUserGrantResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateUserGrantRequest, global::Zitadel.Management.V1.UpdateUserGrantResponse> __Method_UpdateUserGrant = new grpc::Method<global::Zitadel.Management.V1.UpdateUserGrantRequest, global::Zitadel.Management.V1.UpdateUserGrantResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateUserGrant",
        __Marshaller_zitadel_management_v1_UpdateUserGrantRequest,
        __Marshaller_zitadel_management_v1_UpdateUserGrantResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.DeactivateUserGrantRequest, global::Zitadel.Management.V1.DeactivateUserGrantResponse> __Method_DeactivateUserGrant = new grpc::Method<global::Zitadel.Management.V1.DeactivateUserGrantRequest, global::Zitadel.Management.V1.DeactivateUserGrantResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeactivateUserGrant",
        __Marshaller_zitadel_management_v1_DeactivateUserGrantRequest,
        __Marshaller_zitadel_management_v1_DeactivateUserGrantResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ReactivateUserGrantRequest, global::Zitadel.Management.V1.ReactivateUserGrantResponse> __Method_ReactivateUserGrant = new grpc::Method<global::Zitadel.Management.V1.ReactivateUserGrantRequest, global::Zitadel.Management.V1.ReactivateUserGrantResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReactivateUserGrant",
        __Marshaller_zitadel_management_v1_ReactivateUserGrantRequest,
        __Marshaller_zitadel_management_v1_ReactivateUserGrantResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveUserGrantRequest, global::Zitadel.Management.V1.RemoveUserGrantResponse> __Method_RemoveUserGrant = new grpc::Method<global::Zitadel.Management.V1.RemoveUserGrantRequest, global::Zitadel.Management.V1.RemoveUserGrantResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveUserGrant",
        __Marshaller_zitadel_management_v1_RemoveUserGrantRequest,
        __Marshaller_zitadel_management_v1_RemoveUserGrantResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.BulkRemoveUserGrantRequest, global::Zitadel.Management.V1.BulkRemoveUserGrantResponse> __Method_BulkRemoveUserGrant = new grpc::Method<global::Zitadel.Management.V1.BulkRemoveUserGrantRequest, global::Zitadel.Management.V1.BulkRemoveUserGrantResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "BulkRemoveUserGrant",
        __Marshaller_zitadel_management_v1_BulkRemoveUserGrantRequest,
        __Marshaller_zitadel_management_v1_BulkRemoveUserGrantResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetOrgIAMPolicyRequest, global::Zitadel.Management.V1.GetOrgIAMPolicyResponse> __Method_GetOrgIAMPolicy = new grpc::Method<global::Zitadel.Management.V1.GetOrgIAMPolicyRequest, global::Zitadel.Management.V1.GetOrgIAMPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrgIAMPolicy",
        __Marshaller_zitadel_management_v1_GetOrgIAMPolicyRequest,
        __Marshaller_zitadel_management_v1_GetOrgIAMPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDomainPolicyRequest, global::Zitadel.Management.V1.GetDomainPolicyResponse> __Method_GetDomainPolicy = new grpc::Method<global::Zitadel.Management.V1.GetDomainPolicyRequest, global::Zitadel.Management.V1.GetDomainPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDomainPolicy",
        __Marshaller_zitadel_management_v1_GetDomainPolicyRequest,
        __Marshaller_zitadel_management_v1_GetDomainPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetLoginPolicyRequest, global::Zitadel.Management.V1.GetLoginPolicyResponse> __Method_GetLoginPolicy = new grpc::Method<global::Zitadel.Management.V1.GetLoginPolicyRequest, global::Zitadel.Management.V1.GetLoginPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLoginPolicy",
        __Marshaller_zitadel_management_v1_GetLoginPolicyRequest,
        __Marshaller_zitadel_management_v1_GetLoginPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDefaultLoginPolicyRequest, global::Zitadel.Management.V1.GetDefaultLoginPolicyResponse> __Method_GetDefaultLoginPolicy = new grpc::Method<global::Zitadel.Management.V1.GetDefaultLoginPolicyRequest, global::Zitadel.Management.V1.GetDefaultLoginPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultLoginPolicy",
        __Marshaller_zitadel_management_v1_GetDefaultLoginPolicyRequest,
        __Marshaller_zitadel_management_v1_GetDefaultLoginPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddCustomLoginPolicyRequest, global::Zitadel.Management.V1.AddCustomLoginPolicyResponse> __Method_AddCustomLoginPolicy = new grpc::Method<global::Zitadel.Management.V1.AddCustomLoginPolicyRequest, global::Zitadel.Management.V1.AddCustomLoginPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddCustomLoginPolicy",
        __Marshaller_zitadel_management_v1_AddCustomLoginPolicyRequest,
        __Marshaller_zitadel_management_v1_AddCustomLoginPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateCustomLoginPolicyRequest, global::Zitadel.Management.V1.UpdateCustomLoginPolicyResponse> __Method_UpdateCustomLoginPolicy = new grpc::Method<global::Zitadel.Management.V1.UpdateCustomLoginPolicyRequest, global::Zitadel.Management.V1.UpdateCustomLoginPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCustomLoginPolicy",
        __Marshaller_zitadel_management_v1_UpdateCustomLoginPolicyRequest,
        __Marshaller_zitadel_management_v1_UpdateCustomLoginPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResetLoginPolicyToDefaultRequest, global::Zitadel.Management.V1.ResetLoginPolicyToDefaultResponse> __Method_ResetLoginPolicyToDefault = new grpc::Method<global::Zitadel.Management.V1.ResetLoginPolicyToDefaultRequest, global::Zitadel.Management.V1.ResetLoginPolicyToDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetLoginPolicyToDefault",
        __Marshaller_zitadel_management_v1_ResetLoginPolicyToDefaultRequest,
        __Marshaller_zitadel_management_v1_ResetLoginPolicyToDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListLoginPolicyIDPsRequest, global::Zitadel.Management.V1.ListLoginPolicyIDPsResponse> __Method_ListLoginPolicyIDPs = new grpc::Method<global::Zitadel.Management.V1.ListLoginPolicyIDPsRequest, global::Zitadel.Management.V1.ListLoginPolicyIDPsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListLoginPolicyIDPs",
        __Marshaller_zitadel_management_v1_ListLoginPolicyIDPsRequest,
        __Marshaller_zitadel_management_v1_ListLoginPolicyIDPsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddIDPToLoginPolicyRequest, global::Zitadel.Management.V1.AddIDPToLoginPolicyResponse> __Method_AddIDPToLoginPolicy = new grpc::Method<global::Zitadel.Management.V1.AddIDPToLoginPolicyRequest, global::Zitadel.Management.V1.AddIDPToLoginPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddIDPToLoginPolicy",
        __Marshaller_zitadel_management_v1_AddIDPToLoginPolicyRequest,
        __Marshaller_zitadel_management_v1_AddIDPToLoginPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyRequest, global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyResponse> __Method_RemoveIDPFromLoginPolicy = new grpc::Method<global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyRequest, global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveIDPFromLoginPolicy",
        __Marshaller_zitadel_management_v1_RemoveIDPFromLoginPolicyRequest,
        __Marshaller_zitadel_management_v1_RemoveIDPFromLoginPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListLoginPolicySecondFactorsRequest, global::Zitadel.Management.V1.ListLoginPolicySecondFactorsResponse> __Method_ListLoginPolicySecondFactors = new grpc::Method<global::Zitadel.Management.V1.ListLoginPolicySecondFactorsRequest, global::Zitadel.Management.V1.ListLoginPolicySecondFactorsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListLoginPolicySecondFactors",
        __Marshaller_zitadel_management_v1_ListLoginPolicySecondFactorsRequest,
        __Marshaller_zitadel_management_v1_ListLoginPolicySecondFactorsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyRequest, global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyResponse> __Method_AddSecondFactorToLoginPolicy = new grpc::Method<global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyRequest, global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddSecondFactorToLoginPolicy",
        __Marshaller_zitadel_management_v1_AddSecondFactorToLoginPolicyRequest,
        __Marshaller_zitadel_management_v1_AddSecondFactorToLoginPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyRequest, global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyResponse> __Method_RemoveSecondFactorFromLoginPolicy = new grpc::Method<global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyRequest, global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveSecondFactorFromLoginPolicy",
        __Marshaller_zitadel_management_v1_RemoveSecondFactorFromLoginPolicyRequest,
        __Marshaller_zitadel_management_v1_RemoveSecondFactorFromLoginPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsRequest, global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsResponse> __Method_ListLoginPolicyMultiFactors = new grpc::Method<global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsRequest, global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListLoginPolicyMultiFactors",
        __Marshaller_zitadel_management_v1_ListLoginPolicyMultiFactorsRequest,
        __Marshaller_zitadel_management_v1_ListLoginPolicyMultiFactorsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyRequest, global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyResponse> __Method_AddMultiFactorToLoginPolicy = new grpc::Method<global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyRequest, global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddMultiFactorToLoginPolicy",
        __Marshaller_zitadel_management_v1_AddMultiFactorToLoginPolicyRequest,
        __Marshaller_zitadel_management_v1_AddMultiFactorToLoginPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyRequest, global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyResponse> __Method_RemoveMultiFactorFromLoginPolicy = new grpc::Method<global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyRequest, global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveMultiFactorFromLoginPolicy",
        __Marshaller_zitadel_management_v1_RemoveMultiFactorFromLoginPolicyRequest,
        __Marshaller_zitadel_management_v1_RemoveMultiFactorFromLoginPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetPasswordComplexityPolicyRequest, global::Zitadel.Management.V1.GetPasswordComplexityPolicyResponse> __Method_GetPasswordComplexityPolicy = new grpc::Method<global::Zitadel.Management.V1.GetPasswordComplexityPolicyRequest, global::Zitadel.Management.V1.GetPasswordComplexityPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPasswordComplexityPolicy",
        __Marshaller_zitadel_management_v1_GetPasswordComplexityPolicyRequest,
        __Marshaller_zitadel_management_v1_GetPasswordComplexityPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyRequest, global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyResponse> __Method_GetDefaultPasswordComplexityPolicy = new grpc::Method<global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyRequest, global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultPasswordComplexityPolicy",
        __Marshaller_zitadel_management_v1_GetDefaultPasswordComplexityPolicyRequest,
        __Marshaller_zitadel_management_v1_GetDefaultPasswordComplexityPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyRequest, global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyResponse> __Method_AddCustomPasswordComplexityPolicy = new grpc::Method<global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyRequest, global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddCustomPasswordComplexityPolicy",
        __Marshaller_zitadel_management_v1_AddCustomPasswordComplexityPolicyRequest,
        __Marshaller_zitadel_management_v1_AddCustomPasswordComplexityPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyRequest, global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyResponse> __Method_UpdateCustomPasswordComplexityPolicy = new grpc::Method<global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyRequest, global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCustomPasswordComplexityPolicy",
        __Marshaller_zitadel_management_v1_UpdateCustomPasswordComplexityPolicyRequest,
        __Marshaller_zitadel_management_v1_UpdateCustomPasswordComplexityPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultRequest, global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultResponse> __Method_ResetPasswordComplexityPolicyToDefault = new grpc::Method<global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultRequest, global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetPasswordComplexityPolicyToDefault",
        __Marshaller_zitadel_management_v1_ResetPasswordComplexityPolicyToDefaultRequest,
        __Marshaller_zitadel_management_v1_ResetPasswordComplexityPolicyToDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetPasswordAgePolicyRequest, global::Zitadel.Management.V1.GetPasswordAgePolicyResponse> __Method_GetPasswordAgePolicy = new grpc::Method<global::Zitadel.Management.V1.GetPasswordAgePolicyRequest, global::Zitadel.Management.V1.GetPasswordAgePolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPasswordAgePolicy",
        __Marshaller_zitadel_management_v1_GetPasswordAgePolicyRequest,
        __Marshaller_zitadel_management_v1_GetPasswordAgePolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyRequest, global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyResponse> __Method_GetDefaultPasswordAgePolicy = new grpc::Method<global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyRequest, global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultPasswordAgePolicy",
        __Marshaller_zitadel_management_v1_GetDefaultPasswordAgePolicyRequest,
        __Marshaller_zitadel_management_v1_GetDefaultPasswordAgePolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddCustomPasswordAgePolicyRequest, global::Zitadel.Management.V1.AddCustomPasswordAgePolicyResponse> __Method_AddCustomPasswordAgePolicy = new grpc::Method<global::Zitadel.Management.V1.AddCustomPasswordAgePolicyRequest, global::Zitadel.Management.V1.AddCustomPasswordAgePolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddCustomPasswordAgePolicy",
        __Marshaller_zitadel_management_v1_AddCustomPasswordAgePolicyRequest,
        __Marshaller_zitadel_management_v1_AddCustomPasswordAgePolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyRequest, global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyResponse> __Method_UpdateCustomPasswordAgePolicy = new grpc::Method<global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyRequest, global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCustomPasswordAgePolicy",
        __Marshaller_zitadel_management_v1_UpdateCustomPasswordAgePolicyRequest,
        __Marshaller_zitadel_management_v1_UpdateCustomPasswordAgePolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultRequest, global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultResponse> __Method_ResetPasswordAgePolicyToDefault = new grpc::Method<global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultRequest, global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetPasswordAgePolicyToDefault",
        __Marshaller_zitadel_management_v1_ResetPasswordAgePolicyToDefaultRequest,
        __Marshaller_zitadel_management_v1_ResetPasswordAgePolicyToDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetLockoutPolicyRequest, global::Zitadel.Management.V1.GetLockoutPolicyResponse> __Method_GetLockoutPolicy = new grpc::Method<global::Zitadel.Management.V1.GetLockoutPolicyRequest, global::Zitadel.Management.V1.GetLockoutPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLockoutPolicy",
        __Marshaller_zitadel_management_v1_GetLockoutPolicyRequest,
        __Marshaller_zitadel_management_v1_GetLockoutPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDefaultLockoutPolicyRequest, global::Zitadel.Management.V1.GetDefaultLockoutPolicyResponse> __Method_GetDefaultLockoutPolicy = new grpc::Method<global::Zitadel.Management.V1.GetDefaultLockoutPolicyRequest, global::Zitadel.Management.V1.GetDefaultLockoutPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultLockoutPolicy",
        __Marshaller_zitadel_management_v1_GetDefaultLockoutPolicyRequest,
        __Marshaller_zitadel_management_v1_GetDefaultLockoutPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddCustomLockoutPolicyRequest, global::Zitadel.Management.V1.AddCustomLockoutPolicyResponse> __Method_AddCustomLockoutPolicy = new grpc::Method<global::Zitadel.Management.V1.AddCustomLockoutPolicyRequest, global::Zitadel.Management.V1.AddCustomLockoutPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddCustomLockoutPolicy",
        __Marshaller_zitadel_management_v1_AddCustomLockoutPolicyRequest,
        __Marshaller_zitadel_management_v1_AddCustomLockoutPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateCustomLockoutPolicyRequest, global::Zitadel.Management.V1.UpdateCustomLockoutPolicyResponse> __Method_UpdateCustomLockoutPolicy = new grpc::Method<global::Zitadel.Management.V1.UpdateCustomLockoutPolicyRequest, global::Zitadel.Management.V1.UpdateCustomLockoutPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCustomLockoutPolicy",
        __Marshaller_zitadel_management_v1_UpdateCustomLockoutPolicyRequest,
        __Marshaller_zitadel_management_v1_UpdateCustomLockoutPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultRequest, global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultResponse> __Method_ResetLockoutPolicyToDefault = new grpc::Method<global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultRequest, global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetLockoutPolicyToDefault",
        __Marshaller_zitadel_management_v1_ResetLockoutPolicyToDefaultRequest,
        __Marshaller_zitadel_management_v1_ResetLockoutPolicyToDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetPrivacyPolicyRequest, global::Zitadel.Management.V1.GetPrivacyPolicyResponse> __Method_GetPrivacyPolicy = new grpc::Method<global::Zitadel.Management.V1.GetPrivacyPolicyRequest, global::Zitadel.Management.V1.GetPrivacyPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPrivacyPolicy",
        __Marshaller_zitadel_management_v1_GetPrivacyPolicyRequest,
        __Marshaller_zitadel_management_v1_GetPrivacyPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDefaultPrivacyPolicyRequest, global::Zitadel.Management.V1.GetDefaultPrivacyPolicyResponse> __Method_GetDefaultPrivacyPolicy = new grpc::Method<global::Zitadel.Management.V1.GetDefaultPrivacyPolicyRequest, global::Zitadel.Management.V1.GetDefaultPrivacyPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultPrivacyPolicy",
        __Marshaller_zitadel_management_v1_GetDefaultPrivacyPolicyRequest,
        __Marshaller_zitadel_management_v1_GetDefaultPrivacyPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddCustomPrivacyPolicyRequest, global::Zitadel.Management.V1.AddCustomPrivacyPolicyResponse> __Method_AddCustomPrivacyPolicy = new grpc::Method<global::Zitadel.Management.V1.AddCustomPrivacyPolicyRequest, global::Zitadel.Management.V1.AddCustomPrivacyPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddCustomPrivacyPolicy",
        __Marshaller_zitadel_management_v1_AddCustomPrivacyPolicyRequest,
        __Marshaller_zitadel_management_v1_AddCustomPrivacyPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyRequest, global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyResponse> __Method_UpdateCustomPrivacyPolicy = new grpc::Method<global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyRequest, global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCustomPrivacyPolicy",
        __Marshaller_zitadel_management_v1_UpdateCustomPrivacyPolicyRequest,
        __Marshaller_zitadel_management_v1_UpdateCustomPrivacyPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultRequest, global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultResponse> __Method_ResetPrivacyPolicyToDefault = new grpc::Method<global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultRequest, global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetPrivacyPolicyToDefault",
        __Marshaller_zitadel_management_v1_ResetPrivacyPolicyToDefaultRequest,
        __Marshaller_zitadel_management_v1_ResetPrivacyPolicyToDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetNotificationPolicyRequest, global::Zitadel.Management.V1.GetNotificationPolicyResponse> __Method_GetNotificationPolicy = new grpc::Method<global::Zitadel.Management.V1.GetNotificationPolicyRequest, global::Zitadel.Management.V1.GetNotificationPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetNotificationPolicy",
        __Marshaller_zitadel_management_v1_GetNotificationPolicyRequest,
        __Marshaller_zitadel_management_v1_GetNotificationPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDefaultNotificationPolicyRequest, global::Zitadel.Management.V1.GetDefaultNotificationPolicyResponse> __Method_GetDefaultNotificationPolicy = new grpc::Method<global::Zitadel.Management.V1.GetDefaultNotificationPolicyRequest, global::Zitadel.Management.V1.GetDefaultNotificationPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultNotificationPolicy",
        __Marshaller_zitadel_management_v1_GetDefaultNotificationPolicyRequest,
        __Marshaller_zitadel_management_v1_GetDefaultNotificationPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddCustomNotificationPolicyRequest, global::Zitadel.Management.V1.AddCustomNotificationPolicyResponse> __Method_AddCustomNotificationPolicy = new grpc::Method<global::Zitadel.Management.V1.AddCustomNotificationPolicyRequest, global::Zitadel.Management.V1.AddCustomNotificationPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddCustomNotificationPolicy",
        __Marshaller_zitadel_management_v1_AddCustomNotificationPolicyRequest,
        __Marshaller_zitadel_management_v1_AddCustomNotificationPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateCustomNotificationPolicyRequest, global::Zitadel.Management.V1.UpdateCustomNotificationPolicyResponse> __Method_UpdateCustomNotificationPolicy = new grpc::Method<global::Zitadel.Management.V1.UpdateCustomNotificationPolicyRequest, global::Zitadel.Management.V1.UpdateCustomNotificationPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCustomNotificationPolicy",
        __Marshaller_zitadel_management_v1_UpdateCustomNotificationPolicyRequest,
        __Marshaller_zitadel_management_v1_UpdateCustomNotificationPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultRequest, global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultResponse> __Method_ResetNotificationPolicyToDefault = new grpc::Method<global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultRequest, global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetNotificationPolicyToDefault",
        __Marshaller_zitadel_management_v1_ResetNotificationPolicyToDefaultRequest,
        __Marshaller_zitadel_management_v1_ResetNotificationPolicyToDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetLabelPolicyRequest, global::Zitadel.Management.V1.GetLabelPolicyResponse> __Method_GetLabelPolicy = new grpc::Method<global::Zitadel.Management.V1.GetLabelPolicyRequest, global::Zitadel.Management.V1.GetLabelPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLabelPolicy",
        __Marshaller_zitadel_management_v1_GetLabelPolicyRequest,
        __Marshaller_zitadel_management_v1_GetLabelPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetPreviewLabelPolicyRequest, global::Zitadel.Management.V1.GetPreviewLabelPolicyResponse> __Method_GetPreviewLabelPolicy = new grpc::Method<global::Zitadel.Management.V1.GetPreviewLabelPolicyRequest, global::Zitadel.Management.V1.GetPreviewLabelPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPreviewLabelPolicy",
        __Marshaller_zitadel_management_v1_GetPreviewLabelPolicyRequest,
        __Marshaller_zitadel_management_v1_GetPreviewLabelPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDefaultLabelPolicyRequest, global::Zitadel.Management.V1.GetDefaultLabelPolicyResponse> __Method_GetDefaultLabelPolicy = new grpc::Method<global::Zitadel.Management.V1.GetDefaultLabelPolicyRequest, global::Zitadel.Management.V1.GetDefaultLabelPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultLabelPolicy",
        __Marshaller_zitadel_management_v1_GetDefaultLabelPolicyRequest,
        __Marshaller_zitadel_management_v1_GetDefaultLabelPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddCustomLabelPolicyRequest, global::Zitadel.Management.V1.AddCustomLabelPolicyResponse> __Method_AddCustomLabelPolicy = new grpc::Method<global::Zitadel.Management.V1.AddCustomLabelPolicyRequest, global::Zitadel.Management.V1.AddCustomLabelPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddCustomLabelPolicy",
        __Marshaller_zitadel_management_v1_AddCustomLabelPolicyRequest,
        __Marshaller_zitadel_management_v1_AddCustomLabelPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateCustomLabelPolicyRequest, global::Zitadel.Management.V1.UpdateCustomLabelPolicyResponse> __Method_UpdateCustomLabelPolicy = new grpc::Method<global::Zitadel.Management.V1.UpdateCustomLabelPolicyRequest, global::Zitadel.Management.V1.UpdateCustomLabelPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateCustomLabelPolicy",
        __Marshaller_zitadel_management_v1_UpdateCustomLabelPolicyRequest,
        __Marshaller_zitadel_management_v1_UpdateCustomLabelPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ActivateCustomLabelPolicyRequest, global::Zitadel.Management.V1.ActivateCustomLabelPolicyResponse> __Method_ActivateCustomLabelPolicy = new grpc::Method<global::Zitadel.Management.V1.ActivateCustomLabelPolicyRequest, global::Zitadel.Management.V1.ActivateCustomLabelPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ActivateCustomLabelPolicy",
        __Marshaller_zitadel_management_v1_ActivateCustomLabelPolicyRequest,
        __Marshaller_zitadel_management_v1_ActivateCustomLabelPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoRequest, global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoResponse> __Method_RemoveCustomLabelPolicyLogo = new grpc::Method<global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoRequest, global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveCustomLabelPolicyLogo",
        __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyLogoRequest,
        __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyLogoResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkRequest, global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkResponse> __Method_RemoveCustomLabelPolicyLogoDark = new grpc::Method<global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkRequest, global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveCustomLabelPolicyLogoDark",
        __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyLogoDarkRequest,
        __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyLogoDarkResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconRequest, global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconResponse> __Method_RemoveCustomLabelPolicyIcon = new grpc::Method<global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconRequest, global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveCustomLabelPolicyIcon",
        __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyIconRequest,
        __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyIconResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkRequest, global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkResponse> __Method_RemoveCustomLabelPolicyIconDark = new grpc::Method<global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkRequest, global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveCustomLabelPolicyIconDark",
        __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyIconDarkRequest,
        __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyIconDarkResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontRequest, global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontResponse> __Method_RemoveCustomLabelPolicyFont = new grpc::Method<global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontRequest, global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveCustomLabelPolicyFont",
        __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyFontRequest,
        __Marshaller_zitadel_management_v1_RemoveCustomLabelPolicyFontResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResetLabelPolicyToDefaultRequest, global::Zitadel.Management.V1.ResetLabelPolicyToDefaultResponse> __Method_ResetLabelPolicyToDefault = new grpc::Method<global::Zitadel.Management.V1.ResetLabelPolicyToDefaultRequest, global::Zitadel.Management.V1.ResetLabelPolicyToDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetLabelPolicyToDefault",
        __Marshaller_zitadel_management_v1_ResetLabelPolicyToDefaultRequest,
        __Marshaller_zitadel_management_v1_ResetLabelPolicyToDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetCustomInitMessageTextRequest, global::Zitadel.Management.V1.GetCustomInitMessageTextResponse> __Method_GetCustomInitMessageText = new grpc::Method<global::Zitadel.Management.V1.GetCustomInitMessageTextRequest, global::Zitadel.Management.V1.GetCustomInitMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomInitMessageText",
        __Marshaller_zitadel_management_v1_GetCustomInitMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetCustomInitMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDefaultInitMessageTextRequest, global::Zitadel.Management.V1.GetDefaultInitMessageTextResponse> __Method_GetDefaultInitMessageText = new grpc::Method<global::Zitadel.Management.V1.GetDefaultInitMessageTextRequest, global::Zitadel.Management.V1.GetDefaultInitMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultInitMessageText",
        __Marshaller_zitadel_management_v1_GetDefaultInitMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetDefaultInitMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SetCustomInitMessageTextRequest, global::Zitadel.Management.V1.SetCustomInitMessageTextResponse> __Method_SetCustomInitMessageText = new grpc::Method<global::Zitadel.Management.V1.SetCustomInitMessageTextRequest, global::Zitadel.Management.V1.SetCustomInitMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetCustomInitMessageText",
        __Marshaller_zitadel_management_v1_SetCustomInitMessageTextRequest,
        __Marshaller_zitadel_management_v1_SetCustomInitMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultResponse> __Method_ResetCustomInitMessageTextToDefault = new grpc::Method<global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetCustomInitMessageTextToDefault",
        __Marshaller_zitadel_management_v1_ResetCustomInitMessageTextToDefaultRequest,
        __Marshaller_zitadel_management_v1_ResetCustomInitMessageTextToDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextRequest, global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextResponse> __Method_GetCustomPasswordResetMessageText = new grpc::Method<global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextRequest, global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomPasswordResetMessageText",
        __Marshaller_zitadel_management_v1_GetCustomPasswordResetMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetCustomPasswordResetMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextRequest, global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextResponse> __Method_GetDefaultPasswordResetMessageText = new grpc::Method<global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextRequest, global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultPasswordResetMessageText",
        __Marshaller_zitadel_management_v1_GetDefaultPasswordResetMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetDefaultPasswordResetMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextRequest, global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextResponse> __Method_SetCustomPasswordResetMessageText = new grpc::Method<global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextRequest, global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetCustomPasswordResetMessageText",
        __Marshaller_zitadel_management_v1_SetCustomPasswordResetMessageTextRequest,
        __Marshaller_zitadel_management_v1_SetCustomPasswordResetMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultResponse> __Method_ResetCustomPasswordResetMessageTextToDefault = new grpc::Method<global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetCustomPasswordResetMessageTextToDefault",
        __Marshaller_zitadel_management_v1_ResetCustomPasswordResetMessageTextToDefaultRequest,
        __Marshaller_zitadel_management_v1_ResetCustomPasswordResetMessageTextToDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextRequest, global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextResponse> __Method_GetCustomVerifyEmailMessageText = new grpc::Method<global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextRequest, global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomVerifyEmailMessageText",
        __Marshaller_zitadel_management_v1_GetCustomVerifyEmailMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetCustomVerifyEmailMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextRequest, global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextResponse> __Method_GetDefaultVerifyEmailMessageText = new grpc::Method<global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextRequest, global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultVerifyEmailMessageText",
        __Marshaller_zitadel_management_v1_GetDefaultVerifyEmailMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetDefaultVerifyEmailMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextRequest, global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextResponse> __Method_SetCustomVerifyEmailMessageText = new grpc::Method<global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextRequest, global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetCustomVerifyEmailMessageText",
        __Marshaller_zitadel_management_v1_SetCustomVerifyEmailMessageTextRequest,
        __Marshaller_zitadel_management_v1_SetCustomVerifyEmailMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultResponse> __Method_ResetCustomVerifyEmailMessageTextToDefault = new grpc::Method<global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetCustomVerifyEmailMessageTextToDefault",
        __Marshaller_zitadel_management_v1_ResetCustomVerifyEmailMessageTextToDefaultRequest,
        __Marshaller_zitadel_management_v1_ResetCustomVerifyEmailMessageTextToDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextRequest, global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextResponse> __Method_GetCustomVerifyPhoneMessageText = new grpc::Method<global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextRequest, global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomVerifyPhoneMessageText",
        __Marshaller_zitadel_management_v1_GetCustomVerifyPhoneMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetCustomVerifyPhoneMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextRequest, global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextResponse> __Method_GetDefaultVerifyPhoneMessageText = new grpc::Method<global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextRequest, global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultVerifyPhoneMessageText",
        __Marshaller_zitadel_management_v1_GetDefaultVerifyPhoneMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetDefaultVerifyPhoneMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextRequest, global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextResponse> __Method_SetCustomVerifyPhoneMessageText = new grpc::Method<global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextRequest, global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetCustomVerifyPhoneMessageText",
        __Marshaller_zitadel_management_v1_SetCustomVerifyPhoneMessageTextRequest,
        __Marshaller_zitadel_management_v1_SetCustomVerifyPhoneMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultResponse> __Method_ResetCustomVerifyPhoneMessageTextToDefault = new grpc::Method<global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetCustomVerifyPhoneMessageTextToDefault",
        __Marshaller_zitadel_management_v1_ResetCustomVerifyPhoneMessageTextToDefaultRequest,
        __Marshaller_zitadel_management_v1_ResetCustomVerifyPhoneMessageTextToDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextRequest, global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextResponse> __Method_GetCustomVerifySMSOTPMessageText = new grpc::Method<global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextRequest, global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomVerifySMSOTPMessageText",
        __Marshaller_zitadel_management_v1_GetCustomVerifySMSOTPMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetCustomVerifySMSOTPMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextRequest, global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextResponse> __Method_GetDefaultVerifySMSOTPMessageText = new grpc::Method<global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextRequest, global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultVerifySMSOTPMessageText",
        __Marshaller_zitadel_management_v1_GetDefaultVerifySMSOTPMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetDefaultVerifySMSOTPMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextRequest, global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextResponse> __Method_SetCustomVerifySMSOTPMessageText = new grpc::Method<global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextRequest, global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetCustomVerifySMSOTPMessageText",
        __Marshaller_zitadel_management_v1_SetCustomVerifySMSOTPMessageTextRequest,
        __Marshaller_zitadel_management_v1_SetCustomVerifySMSOTPMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultResponse> __Method_ResetCustomVerifySMSOTPMessageTextToDefault = new grpc::Method<global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetCustomVerifySMSOTPMessageTextToDefault",
        __Marshaller_zitadel_management_v1_ResetCustomVerifySMSOTPMessageTextToDefaultRequest,
        __Marshaller_zitadel_management_v1_ResetCustomVerifySMSOTPMessageTextToDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextRequest, global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextResponse> __Method_GetCustomVerifyEmailOTPMessageText = new grpc::Method<global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextRequest, global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomVerifyEmailOTPMessageText",
        __Marshaller_zitadel_management_v1_GetCustomVerifyEmailOTPMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetCustomVerifyEmailOTPMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextRequest, global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextResponse> __Method_GetDefaultVerifyEmailOTPMessageText = new grpc::Method<global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextRequest, global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultVerifyEmailOTPMessageText",
        __Marshaller_zitadel_management_v1_GetDefaultVerifyEmailOTPMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetDefaultVerifyEmailOTPMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextRequest, global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextResponse> __Method_SetCustomVerifyEmailOTPMessageText = new grpc::Method<global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextRequest, global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetCustomVerifyEmailOTPMessageText",
        __Marshaller_zitadel_management_v1_SetCustomVerifyEmailOTPMessageTextRequest,
        __Marshaller_zitadel_management_v1_SetCustomVerifyEmailOTPMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse> __Method_ResetCustomVerifyEmailOTPMessageTextToDefault = new grpc::Method<global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetCustomVerifyEmailOTPMessageTextToDefault",
        __Marshaller_zitadel_management_v1_ResetCustomVerifyEmailOTPMessageTextToDefaultRequest,
        __Marshaller_zitadel_management_v1_ResetCustomVerifyEmailOTPMessageTextToDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextRequest, global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextResponse> __Method_GetCustomDomainClaimedMessageText = new grpc::Method<global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextRequest, global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomDomainClaimedMessageText",
        __Marshaller_zitadel_management_v1_GetCustomDomainClaimedMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetCustomDomainClaimedMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextRequest, global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextResponse> __Method_GetDefaultDomainClaimedMessageText = new grpc::Method<global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextRequest, global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultDomainClaimedMessageText",
        __Marshaller_zitadel_management_v1_GetDefaultDomainClaimedMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetDefaultDomainClaimedMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextRequest, global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextResponse> __Method_SetCustomDomainClaimedMessageCustomText = new grpc::Method<global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextRequest, global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetCustomDomainClaimedMessageCustomText",
        __Marshaller_zitadel_management_v1_SetCustomDomainClaimedMessageTextRequest,
        __Marshaller_zitadel_management_v1_SetCustomDomainClaimedMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultResponse> __Method_ResetCustomDomainClaimedMessageTextToDefault = new grpc::Method<global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetCustomDomainClaimedMessageTextToDefault",
        __Marshaller_zitadel_management_v1_ResetCustomDomainClaimedMessageTextToDefaultRequest,
        __Marshaller_zitadel_management_v1_ResetCustomDomainClaimedMessageTextToDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextRequest, global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextResponse> __Method_GetCustomPasswordlessRegistrationMessageText = new grpc::Method<global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextRequest, global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomPasswordlessRegistrationMessageText",
        __Marshaller_zitadel_management_v1_GetCustomPasswordlessRegistrationMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetCustomPasswordlessRegistrationMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextRequest, global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextResponse> __Method_GetDefaultPasswordlessRegistrationMessageText = new grpc::Method<global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextRequest, global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultPasswordlessRegistrationMessageText",
        __Marshaller_zitadel_management_v1_GetDefaultPasswordlessRegistrationMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetDefaultPasswordlessRegistrationMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextRequest, global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextResponse> __Method_SetCustomPasswordlessRegistrationMessageCustomText = new grpc::Method<global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextRequest, global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetCustomPasswordlessRegistrationMessageCustomText",
        __Marshaller_zitadel_management_v1_SetCustomPasswordlessRegistrationMessageTextRequest,
        __Marshaller_zitadel_management_v1_SetCustomPasswordlessRegistrationMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse> __Method_ResetCustomPasswordlessRegistrationMessageTextToDefault = new grpc::Method<global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetCustomPasswordlessRegistrationMessageTextToDefault",
        __Marshaller_zitadel_management_v1_ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest,
        __Marshaller_zitadel_management_v1_ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextRequest, global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextResponse> __Method_GetCustomPasswordChangeMessageText = new grpc::Method<global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextRequest, global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomPasswordChangeMessageText",
        __Marshaller_zitadel_management_v1_GetCustomPasswordChangeMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetCustomPasswordChangeMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextRequest, global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextResponse> __Method_GetDefaultPasswordChangeMessageText = new grpc::Method<global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextRequest, global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultPasswordChangeMessageText",
        __Marshaller_zitadel_management_v1_GetDefaultPasswordChangeMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetDefaultPasswordChangeMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextRequest, global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextResponse> __Method_SetCustomPasswordChangeMessageCustomText = new grpc::Method<global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextRequest, global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetCustomPasswordChangeMessageCustomText",
        __Marshaller_zitadel_management_v1_SetCustomPasswordChangeMessageTextRequest,
        __Marshaller_zitadel_management_v1_SetCustomPasswordChangeMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultResponse> __Method_ResetCustomPasswordChangeMessageTextToDefault = new grpc::Method<global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetCustomPasswordChangeMessageTextToDefault",
        __Marshaller_zitadel_management_v1_ResetCustomPasswordChangeMessageTextToDefaultRequest,
        __Marshaller_zitadel_management_v1_ResetCustomPasswordChangeMessageTextToDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetCustomInviteUserMessageTextRequest, global::Zitadel.Management.V1.GetCustomInviteUserMessageTextResponse> __Method_GetCustomInviteUserMessageText = new grpc::Method<global::Zitadel.Management.V1.GetCustomInviteUserMessageTextRequest, global::Zitadel.Management.V1.GetCustomInviteUserMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomInviteUserMessageText",
        __Marshaller_zitadel_management_v1_GetCustomInviteUserMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetCustomInviteUserMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextRequest, global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextResponse> __Method_GetDefaultInviteUserMessageText = new grpc::Method<global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextRequest, global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultInviteUserMessageText",
        __Marshaller_zitadel_management_v1_GetDefaultInviteUserMessageTextRequest,
        __Marshaller_zitadel_management_v1_GetDefaultInviteUserMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SetCustomInviteUserMessageTextRequest, global::Zitadel.Management.V1.SetCustomInviteUserMessageTextResponse> __Method_SetCustomInviteUserMessageCustomText = new grpc::Method<global::Zitadel.Management.V1.SetCustomInviteUserMessageTextRequest, global::Zitadel.Management.V1.SetCustomInviteUserMessageTextResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetCustomInviteUserMessageCustomText",
        __Marshaller_zitadel_management_v1_SetCustomInviteUserMessageTextRequest,
        __Marshaller_zitadel_management_v1_SetCustomInviteUserMessageTextResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultResponse> __Method_ResetCustomInviteUserMessageTextToDefault = new grpc::Method<global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetCustomInviteUserMessageTextToDefault",
        __Marshaller_zitadel_management_v1_ResetCustomInviteUserMessageTextToDefaultRequest,
        __Marshaller_zitadel_management_v1_ResetCustomInviteUserMessageTextToDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetCustomLoginTextsRequest, global::Zitadel.Management.V1.GetCustomLoginTextsResponse> __Method_GetCustomLoginTexts = new grpc::Method<global::Zitadel.Management.V1.GetCustomLoginTextsRequest, global::Zitadel.Management.V1.GetCustomLoginTextsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetCustomLoginTexts",
        __Marshaller_zitadel_management_v1_GetCustomLoginTextsRequest,
        __Marshaller_zitadel_management_v1_GetCustomLoginTextsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetDefaultLoginTextsRequest, global::Zitadel.Management.V1.GetDefaultLoginTextsResponse> __Method_GetDefaultLoginTexts = new grpc::Method<global::Zitadel.Management.V1.GetDefaultLoginTextsRequest, global::Zitadel.Management.V1.GetDefaultLoginTextsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDefaultLoginTexts",
        __Marshaller_zitadel_management_v1_GetDefaultLoginTextsRequest,
        __Marshaller_zitadel_management_v1_GetDefaultLoginTextsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SetCustomLoginTextsRequest, global::Zitadel.Management.V1.SetCustomLoginTextsResponse> __Method_SetCustomLoginText = new grpc::Method<global::Zitadel.Management.V1.SetCustomLoginTextsRequest, global::Zitadel.Management.V1.SetCustomLoginTextsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetCustomLoginText",
        __Marshaller_zitadel_management_v1_SetCustomLoginTextsRequest,
        __Marshaller_zitadel_management_v1_SetCustomLoginTextsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultRequest, global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultResponse> __Method_ResetCustomLoginTextToDefault = new grpc::Method<global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultRequest, global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResetCustomLoginTextToDefault",
        __Marshaller_zitadel_management_v1_ResetCustomLoginTextsToDefaultRequest,
        __Marshaller_zitadel_management_v1_ResetCustomLoginTextsToDefaultResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetOrgIDPByIDRequest, global::Zitadel.Management.V1.GetOrgIDPByIDResponse> __Method_GetOrgIDPByID = new grpc::Method<global::Zitadel.Management.V1.GetOrgIDPByIDRequest, global::Zitadel.Management.V1.GetOrgIDPByIDResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetOrgIDPByID",
        __Marshaller_zitadel_management_v1_GetOrgIDPByIDRequest,
        __Marshaller_zitadel_management_v1_GetOrgIDPByIDResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListOrgIDPsRequest, global::Zitadel.Management.V1.ListOrgIDPsResponse> __Method_ListOrgIDPs = new grpc::Method<global::Zitadel.Management.V1.ListOrgIDPsRequest, global::Zitadel.Management.V1.ListOrgIDPsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListOrgIDPs",
        __Marshaller_zitadel_management_v1_ListOrgIDPsRequest,
        __Marshaller_zitadel_management_v1_ListOrgIDPsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddOrgOIDCIDPRequest, global::Zitadel.Management.V1.AddOrgOIDCIDPResponse> __Method_AddOrgOIDCIDP = new grpc::Method<global::Zitadel.Management.V1.AddOrgOIDCIDPRequest, global::Zitadel.Management.V1.AddOrgOIDCIDPResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddOrgOIDCIDP",
        __Marshaller_zitadel_management_v1_AddOrgOIDCIDPRequest,
        __Marshaller_zitadel_management_v1_AddOrgOIDCIDPResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddOrgJWTIDPRequest, global::Zitadel.Management.V1.AddOrgJWTIDPResponse> __Method_AddOrgJWTIDP = new grpc::Method<global::Zitadel.Management.V1.AddOrgJWTIDPRequest, global::Zitadel.Management.V1.AddOrgJWTIDPResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddOrgJWTIDP",
        __Marshaller_zitadel_management_v1_AddOrgJWTIDPRequest,
        __Marshaller_zitadel_management_v1_AddOrgJWTIDPResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.DeactivateOrgIDPRequest, global::Zitadel.Management.V1.DeactivateOrgIDPResponse> __Method_DeactivateOrgIDP = new grpc::Method<global::Zitadel.Management.V1.DeactivateOrgIDPRequest, global::Zitadel.Management.V1.DeactivateOrgIDPResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeactivateOrgIDP",
        __Marshaller_zitadel_management_v1_DeactivateOrgIDPRequest,
        __Marshaller_zitadel_management_v1_DeactivateOrgIDPResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ReactivateOrgIDPRequest, global::Zitadel.Management.V1.ReactivateOrgIDPResponse> __Method_ReactivateOrgIDP = new grpc::Method<global::Zitadel.Management.V1.ReactivateOrgIDPRequest, global::Zitadel.Management.V1.ReactivateOrgIDPResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReactivateOrgIDP",
        __Marshaller_zitadel_management_v1_ReactivateOrgIDPRequest,
        __Marshaller_zitadel_management_v1_ReactivateOrgIDPResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RemoveOrgIDPRequest, global::Zitadel.Management.V1.RemoveOrgIDPResponse> __Method_RemoveOrgIDP = new grpc::Method<global::Zitadel.Management.V1.RemoveOrgIDPRequest, global::Zitadel.Management.V1.RemoveOrgIDPResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveOrgIDP",
        __Marshaller_zitadel_management_v1_RemoveOrgIDPRequest,
        __Marshaller_zitadel_management_v1_RemoveOrgIDPResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateOrgIDPRequest, global::Zitadel.Management.V1.UpdateOrgIDPResponse> __Method_UpdateOrgIDP = new grpc::Method<global::Zitadel.Management.V1.UpdateOrgIDPRequest, global::Zitadel.Management.V1.UpdateOrgIDPResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateOrgIDP",
        __Marshaller_zitadel_management_v1_UpdateOrgIDPRequest,
        __Marshaller_zitadel_management_v1_UpdateOrgIDPResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigRequest, global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigResponse> __Method_UpdateOrgIDPOIDCConfig = new grpc::Method<global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigRequest, global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateOrgIDPOIDCConfig",
        __Marshaller_zitadel_management_v1_UpdateOrgIDPOIDCConfigRequest,
        __Marshaller_zitadel_management_v1_UpdateOrgIDPOIDCConfigResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigRequest, global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigResponse> __Method_UpdateOrgIDPJWTConfig = new grpc::Method<global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigRequest, global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateOrgIDPJWTConfig",
        __Marshaller_zitadel_management_v1_UpdateOrgIDPJWTConfigRequest,
        __Marshaller_zitadel_management_v1_UpdateOrgIDPJWTConfigResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListProvidersRequest, global::Zitadel.Management.V1.ListProvidersResponse> __Method_ListProviders = new grpc::Method<global::Zitadel.Management.V1.ListProvidersRequest, global::Zitadel.Management.V1.ListProvidersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListProviders",
        __Marshaller_zitadel_management_v1_ListProvidersRequest,
        __Marshaller_zitadel_management_v1_ListProvidersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetProviderByIDRequest, global::Zitadel.Management.V1.GetProviderByIDResponse> __Method_GetProviderByID = new grpc::Method<global::Zitadel.Management.V1.GetProviderByIDRequest, global::Zitadel.Management.V1.GetProviderByIDResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetProviderByID",
        __Marshaller_zitadel_management_v1_GetProviderByIDRequest,
        __Marshaller_zitadel_management_v1_GetProviderByIDResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddGenericOAuthProviderRequest, global::Zitadel.Management.V1.AddGenericOAuthProviderResponse> __Method_AddGenericOAuthProvider = new grpc::Method<global::Zitadel.Management.V1.AddGenericOAuthProviderRequest, global::Zitadel.Management.V1.AddGenericOAuthProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddGenericOAuthProvider",
        __Marshaller_zitadel_management_v1_AddGenericOAuthProviderRequest,
        __Marshaller_zitadel_management_v1_AddGenericOAuthProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateGenericOAuthProviderRequest, global::Zitadel.Management.V1.UpdateGenericOAuthProviderResponse> __Method_UpdateGenericOAuthProvider = new grpc::Method<global::Zitadel.Management.V1.UpdateGenericOAuthProviderRequest, global::Zitadel.Management.V1.UpdateGenericOAuthProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateGenericOAuthProvider",
        __Marshaller_zitadel_management_v1_UpdateGenericOAuthProviderRequest,
        __Marshaller_zitadel_management_v1_UpdateGenericOAuthProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddGenericOIDCProviderRequest, global::Zitadel.Management.V1.AddGenericOIDCProviderResponse> __Method_AddGenericOIDCProvider = new grpc::Method<global::Zitadel.Management.V1.AddGenericOIDCProviderRequest, global::Zitadel.Management.V1.AddGenericOIDCProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddGenericOIDCProvider",
        __Marshaller_zitadel_management_v1_AddGenericOIDCProviderRequest,
        __Marshaller_zitadel_management_v1_AddGenericOIDCProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateGenericOIDCProviderRequest, global::Zitadel.Management.V1.UpdateGenericOIDCProviderResponse> __Method_UpdateGenericOIDCProvider = new grpc::Method<global::Zitadel.Management.V1.UpdateGenericOIDCProviderRequest, global::Zitadel.Management.V1.UpdateGenericOIDCProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateGenericOIDCProvider",
        __Marshaller_zitadel_management_v1_UpdateGenericOIDCProviderRequest,
        __Marshaller_zitadel_management_v1_UpdateGenericOIDCProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.MigrateGenericOIDCProviderRequest, global::Zitadel.Management.V1.MigrateGenericOIDCProviderResponse> __Method_MigrateGenericOIDCProvider = new grpc::Method<global::Zitadel.Management.V1.MigrateGenericOIDCProviderRequest, global::Zitadel.Management.V1.MigrateGenericOIDCProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "MigrateGenericOIDCProvider",
        __Marshaller_zitadel_management_v1_MigrateGenericOIDCProviderRequest,
        __Marshaller_zitadel_management_v1_MigrateGenericOIDCProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddJWTProviderRequest, global::Zitadel.Management.V1.AddJWTProviderResponse> __Method_AddJWTProvider = new grpc::Method<global::Zitadel.Management.V1.AddJWTProviderRequest, global::Zitadel.Management.V1.AddJWTProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddJWTProvider",
        __Marshaller_zitadel_management_v1_AddJWTProviderRequest,
        __Marshaller_zitadel_management_v1_AddJWTProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateJWTProviderRequest, global::Zitadel.Management.V1.UpdateJWTProviderResponse> __Method_UpdateJWTProvider = new grpc::Method<global::Zitadel.Management.V1.UpdateJWTProviderRequest, global::Zitadel.Management.V1.UpdateJWTProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateJWTProvider",
        __Marshaller_zitadel_management_v1_UpdateJWTProviderRequest,
        __Marshaller_zitadel_management_v1_UpdateJWTProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddAzureADProviderRequest, global::Zitadel.Management.V1.AddAzureADProviderResponse> __Method_AddAzureADProvider = new grpc::Method<global::Zitadel.Management.V1.AddAzureADProviderRequest, global::Zitadel.Management.V1.AddAzureADProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddAzureADProvider",
        __Marshaller_zitadel_management_v1_AddAzureADProviderRequest,
        __Marshaller_zitadel_management_v1_AddAzureADProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateAzureADProviderRequest, global::Zitadel.Management.V1.UpdateAzureADProviderResponse> __Method_UpdateAzureADProvider = new grpc::Method<global::Zitadel.Management.V1.UpdateAzureADProviderRequest, global::Zitadel.Management.V1.UpdateAzureADProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAzureADProvider",
        __Marshaller_zitadel_management_v1_UpdateAzureADProviderRequest,
        __Marshaller_zitadel_management_v1_UpdateAzureADProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddGitHubProviderRequest, global::Zitadel.Management.V1.AddGitHubProviderResponse> __Method_AddGitHubProvider = new grpc::Method<global::Zitadel.Management.V1.AddGitHubProviderRequest, global::Zitadel.Management.V1.AddGitHubProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddGitHubProvider",
        __Marshaller_zitadel_management_v1_AddGitHubProviderRequest,
        __Marshaller_zitadel_management_v1_AddGitHubProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateGitHubProviderRequest, global::Zitadel.Management.V1.UpdateGitHubProviderResponse> __Method_UpdateGitHubProvider = new grpc::Method<global::Zitadel.Management.V1.UpdateGitHubProviderRequest, global::Zitadel.Management.V1.UpdateGitHubProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateGitHubProvider",
        __Marshaller_zitadel_management_v1_UpdateGitHubProviderRequest,
        __Marshaller_zitadel_management_v1_UpdateGitHubProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderRequest, global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderResponse> __Method_AddGitHubEnterpriseServerProvider = new grpc::Method<global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderRequest, global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddGitHubEnterpriseServerProvider",
        __Marshaller_zitadel_management_v1_AddGitHubEnterpriseServerProviderRequest,
        __Marshaller_zitadel_management_v1_AddGitHubEnterpriseServerProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderRequest, global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderResponse> __Method_UpdateGitHubEnterpriseServerProvider = new grpc::Method<global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderRequest, global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateGitHubEnterpriseServerProvider",
        __Marshaller_zitadel_management_v1_UpdateGitHubEnterpriseServerProviderRequest,
        __Marshaller_zitadel_management_v1_UpdateGitHubEnterpriseServerProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddGitLabProviderRequest, global::Zitadel.Management.V1.AddGitLabProviderResponse> __Method_AddGitLabProvider = new grpc::Method<global::Zitadel.Management.V1.AddGitLabProviderRequest, global::Zitadel.Management.V1.AddGitLabProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddGitLabProvider",
        __Marshaller_zitadel_management_v1_AddGitLabProviderRequest,
        __Marshaller_zitadel_management_v1_AddGitLabProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateGitLabProviderRequest, global::Zitadel.Management.V1.UpdateGitLabProviderResponse> __Method_UpdateGitLabProvider = new grpc::Method<global::Zitadel.Management.V1.UpdateGitLabProviderRequest, global::Zitadel.Management.V1.UpdateGitLabProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateGitLabProvider",
        __Marshaller_zitadel_management_v1_UpdateGitLabProviderRequest,
        __Marshaller_zitadel_management_v1_UpdateGitLabProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddGitLabSelfHostedProviderRequest, global::Zitadel.Management.V1.AddGitLabSelfHostedProviderResponse> __Method_AddGitLabSelfHostedProvider = new grpc::Method<global::Zitadel.Management.V1.AddGitLabSelfHostedProviderRequest, global::Zitadel.Management.V1.AddGitLabSelfHostedProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddGitLabSelfHostedProvider",
        __Marshaller_zitadel_management_v1_AddGitLabSelfHostedProviderRequest,
        __Marshaller_zitadel_management_v1_AddGitLabSelfHostedProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderRequest, global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderResponse> __Method_UpdateGitLabSelfHostedProvider = new grpc::Method<global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderRequest, global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateGitLabSelfHostedProvider",
        __Marshaller_zitadel_management_v1_UpdateGitLabSelfHostedProviderRequest,
        __Marshaller_zitadel_management_v1_UpdateGitLabSelfHostedProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddGoogleProviderRequest, global::Zitadel.Management.V1.AddGoogleProviderResponse> __Method_AddGoogleProvider = new grpc::Method<global::Zitadel.Management.V1.AddGoogleProviderRequest, global::Zitadel.Management.V1.AddGoogleProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddGoogleProvider",
        __Marshaller_zitadel_management_v1_AddGoogleProviderRequest,
        __Marshaller_zitadel_management_v1_AddGoogleProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateGoogleProviderRequest, global::Zitadel.Management.V1.UpdateGoogleProviderResponse> __Method_UpdateGoogleProvider = new grpc::Method<global::Zitadel.Management.V1.UpdateGoogleProviderRequest, global::Zitadel.Management.V1.UpdateGoogleProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateGoogleProvider",
        __Marshaller_zitadel_management_v1_UpdateGoogleProviderRequest,
        __Marshaller_zitadel_management_v1_UpdateGoogleProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddLDAPProviderRequest, global::Zitadel.Management.V1.AddLDAPProviderResponse> __Method_AddLDAPProvider = new grpc::Method<global::Zitadel.Management.V1.AddLDAPProviderRequest, global::Zitadel.Management.V1.AddLDAPProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddLDAPProvider",
        __Marshaller_zitadel_management_v1_AddLDAPProviderRequest,
        __Marshaller_zitadel_management_v1_AddLDAPProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateLDAPProviderRequest, global::Zitadel.Management.V1.UpdateLDAPProviderResponse> __Method_UpdateLDAPProvider = new grpc::Method<global::Zitadel.Management.V1.UpdateLDAPProviderRequest, global::Zitadel.Management.V1.UpdateLDAPProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateLDAPProvider",
        __Marshaller_zitadel_management_v1_UpdateLDAPProviderRequest,
        __Marshaller_zitadel_management_v1_UpdateLDAPProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddAppleProviderRequest, global::Zitadel.Management.V1.AddAppleProviderResponse> __Method_AddAppleProvider = new grpc::Method<global::Zitadel.Management.V1.AddAppleProviderRequest, global::Zitadel.Management.V1.AddAppleProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddAppleProvider",
        __Marshaller_zitadel_management_v1_AddAppleProviderRequest,
        __Marshaller_zitadel_management_v1_AddAppleProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateAppleProviderRequest, global::Zitadel.Management.V1.UpdateAppleProviderResponse> __Method_UpdateAppleProvider = new grpc::Method<global::Zitadel.Management.V1.UpdateAppleProviderRequest, global::Zitadel.Management.V1.UpdateAppleProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAppleProvider",
        __Marshaller_zitadel_management_v1_UpdateAppleProviderRequest,
        __Marshaller_zitadel_management_v1_UpdateAppleProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.AddSAMLProviderRequest, global::Zitadel.Management.V1.AddSAMLProviderResponse> __Method_AddSAMLProvider = new grpc::Method<global::Zitadel.Management.V1.AddSAMLProviderRequest, global::Zitadel.Management.V1.AddSAMLProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddSAMLProvider",
        __Marshaller_zitadel_management_v1_AddSAMLProviderRequest,
        __Marshaller_zitadel_management_v1_AddSAMLProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateSAMLProviderRequest, global::Zitadel.Management.V1.UpdateSAMLProviderResponse> __Method_UpdateSAMLProvider = new grpc::Method<global::Zitadel.Management.V1.UpdateSAMLProviderRequest, global::Zitadel.Management.V1.UpdateSAMLProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateSAMLProvider",
        __Marshaller_zitadel_management_v1_UpdateSAMLProviderRequest,
        __Marshaller_zitadel_management_v1_UpdateSAMLProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateRequest, global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateResponse> __Method_RegenerateSAMLProviderCertificate = new grpc::Method<global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateRequest, global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegenerateSAMLProviderCertificate",
        __Marshaller_zitadel_management_v1_RegenerateSAMLProviderCertificateRequest,
        __Marshaller_zitadel_management_v1_RegenerateSAMLProviderCertificateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.DeleteProviderRequest, global::Zitadel.Management.V1.DeleteProviderResponse> __Method_DeleteProvider = new grpc::Method<global::Zitadel.Management.V1.DeleteProviderRequest, global::Zitadel.Management.V1.DeleteProviderResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteProvider",
        __Marshaller_zitadel_management_v1_DeleteProviderRequest,
        __Marshaller_zitadel_management_v1_DeleteProviderResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListActionsRequest, global::Zitadel.Management.V1.ListActionsResponse> __Method_ListActions = new grpc::Method<global::Zitadel.Management.V1.ListActionsRequest, global::Zitadel.Management.V1.ListActionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListActions",
        __Marshaller_zitadel_management_v1_ListActionsRequest,
        __Marshaller_zitadel_management_v1_ListActionsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetActionRequest, global::Zitadel.Management.V1.GetActionResponse> __Method_GetAction = new grpc::Method<global::Zitadel.Management.V1.GetActionRequest, global::Zitadel.Management.V1.GetActionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAction",
        __Marshaller_zitadel_management_v1_GetActionRequest,
        __Marshaller_zitadel_management_v1_GetActionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.CreateActionRequest, global::Zitadel.Management.V1.CreateActionResponse> __Method_CreateAction = new grpc::Method<global::Zitadel.Management.V1.CreateActionRequest, global::Zitadel.Management.V1.CreateActionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateAction",
        __Marshaller_zitadel_management_v1_CreateActionRequest,
        __Marshaller_zitadel_management_v1_CreateActionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.UpdateActionRequest, global::Zitadel.Management.V1.UpdateActionResponse> __Method_UpdateAction = new grpc::Method<global::Zitadel.Management.V1.UpdateActionRequest, global::Zitadel.Management.V1.UpdateActionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateAction",
        __Marshaller_zitadel_management_v1_UpdateActionRequest,
        __Marshaller_zitadel_management_v1_UpdateActionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.DeactivateActionRequest, global::Zitadel.Management.V1.DeactivateActionResponse> __Method_DeactivateAction = new grpc::Method<global::Zitadel.Management.V1.DeactivateActionRequest, global::Zitadel.Management.V1.DeactivateActionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeactivateAction",
        __Marshaller_zitadel_management_v1_DeactivateActionRequest,
        __Marshaller_zitadel_management_v1_DeactivateActionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ReactivateActionRequest, global::Zitadel.Management.V1.ReactivateActionResponse> __Method_ReactivateAction = new grpc::Method<global::Zitadel.Management.V1.ReactivateActionRequest, global::Zitadel.Management.V1.ReactivateActionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReactivateAction",
        __Marshaller_zitadel_management_v1_ReactivateActionRequest,
        __Marshaller_zitadel_management_v1_ReactivateActionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.DeleteActionRequest, global::Zitadel.Management.V1.DeleteActionResponse> __Method_DeleteAction = new grpc::Method<global::Zitadel.Management.V1.DeleteActionRequest, global::Zitadel.Management.V1.DeleteActionResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteAction",
        __Marshaller_zitadel_management_v1_DeleteActionRequest,
        __Marshaller_zitadel_management_v1_DeleteActionResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListFlowTypesRequest, global::Zitadel.Management.V1.ListFlowTypesResponse> __Method_ListFlowTypes = new grpc::Method<global::Zitadel.Management.V1.ListFlowTypesRequest, global::Zitadel.Management.V1.ListFlowTypesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListFlowTypes",
        __Marshaller_zitadel_management_v1_ListFlowTypesRequest,
        __Marshaller_zitadel_management_v1_ListFlowTypesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ListFlowTriggerTypesRequest, global::Zitadel.Management.V1.ListFlowTriggerTypesResponse> __Method_ListFlowTriggerTypes = new grpc::Method<global::Zitadel.Management.V1.ListFlowTriggerTypesRequest, global::Zitadel.Management.V1.ListFlowTriggerTypesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListFlowTriggerTypes",
        __Marshaller_zitadel_management_v1_ListFlowTriggerTypesRequest,
        __Marshaller_zitadel_management_v1_ListFlowTriggerTypesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.GetFlowRequest, global::Zitadel.Management.V1.GetFlowResponse> __Method_GetFlow = new grpc::Method<global::Zitadel.Management.V1.GetFlowRequest, global::Zitadel.Management.V1.GetFlowResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetFlow",
        __Marshaller_zitadel_management_v1_GetFlowRequest,
        __Marshaller_zitadel_management_v1_GetFlowResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.ClearFlowRequest, global::Zitadel.Management.V1.ClearFlowResponse> __Method_ClearFlow = new grpc::Method<global::Zitadel.Management.V1.ClearFlowRequest, global::Zitadel.Management.V1.ClearFlowResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ClearFlow",
        __Marshaller_zitadel_management_v1_ClearFlowRequest,
        __Marshaller_zitadel_management_v1_ClearFlowResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Management.V1.SetTriggerActionsRequest, global::Zitadel.Management.V1.SetTriggerActionsResponse> __Method_SetTriggerActions = new grpc::Method<global::Zitadel.Management.V1.SetTriggerActionsRequest, global::Zitadel.Management.V1.SetTriggerActionsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetTriggerActions",
        __Marshaller_zitadel_management_v1_SetTriggerActionsRequest,
        __Marshaller_zitadel_management_v1_SetTriggerActionsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Zitadel.Management.V1.ManagementReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ManagementService</summary>
    [grpc::BindServiceMethod(typeof(ManagementService), "BindService")]
    public abstract partial class ManagementServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.HealthzResponse> Healthz(global::Zitadel.Management.V1.HealthzRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetOIDCInformationResponse> GetOIDCInformation(global::Zitadel.Management.V1.GetOIDCInformationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetIAMResponse> GetIAM(global::Zitadel.Management.V1.GetIAMRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetSupportedLanguagesResponse> GetSupportedLanguages(global::Zitadel.Management.V1.GetSupportedLanguagesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// User by ID
      ///
      /// Deprecated: use [user service v2 ListUsers with InUserIDQuery](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Returns the full user object (human or machine) including the profile, email, etc.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetUserByIDResponse> GetUserByID(global::Zitadel.Management.V1.GetUserByIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get User by login name (globally)
      ///
      /// Deprecated: use [user service v2 ListUsers with LoginNameQuery](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Get a user by login name searched over all organizations. The request only returns data if the login name matches exactly.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetUserByLoginNameGlobalResponse> GetUserByLoginNameGlobal(global::Zitadel.Management.V1.GetUserByLoginNameGlobalRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Search Users
      ///
      /// Deprecated: use [user service v2 ListUsers](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Search for users within an organization. By default, we will return users of your organization. Make sure to include a limit and sorting for pagination.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListUsersResponse> ListUsers(global::Zitadel.Management.V1.ListUsersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListUserChangesResponse> ListUserChanges(global::Zitadel.Management.V1.ListUserChangesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Check for existing user
      ///
      /// Deprecated: use [user service v2 ListUsers](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead, is unique if no user returned.
      ///
      /// Returns if a user with the requested email or username is unique. So you can create the user.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.IsUserUniqueResponse> IsUserUnique(global::Zitadel.Management.V1.IsUserUniqueRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create User (Human)
      ///
      /// Deprecated: use [user service v2 CreateUser](apis/resources/user_service_v2/user-service-create-user.api.mdx) instead.
      ///
      /// Create a new user with the type human. The newly created user will get an initialization email if either the email address is not marked as verified or no password is set. If a password is set the user will not be requested to set a new one on the first login.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddHumanUserResponse> AddHumanUser(global::Zitadel.Management.V1.AddHumanUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create/Import User (Human)
      ///
      /// Deprecated: use [user service v2 UpdateHumanUser](apis/resources/user_service_v2/user-service-update-human-user.api.mdx) instead.
      ///
      /// Create/import a new user with the type human. The newly created user will get an initialization email if either the email address is not marked as verified or no password is set. If a password is set the user will not be requested to set a new one on the first login.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ImportHumanUserResponse> ImportHumanUser(global::Zitadel.Management.V1.ImportHumanUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create User (Machine)
      ///
      /// Deprecated: use [user service v2 CreateUser](apis/resources/user_service_v2/user-service-create-user.api.mdx) instead.
      ///
      /// Create a new user with the type machine for your API, service or device. These users are used for non-interactive authentication flows.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddMachineUserResponse> AddMachineUser(global::Zitadel.Management.V1.AddMachineUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deactivate User
      ///
      /// Deprecated: use [user service v2 DeactivateUser](apis/resources/user_service_v2/user-service-deactivate-user.api.mdx) instead.
      ///
      /// The state of the user will be changed to 'deactivated'. The user will not be able to log in anymore.
      /// The endpoint returns an error if the user is already in the state 'deactivated'.
      /// Use deactivate user when the user should not be able to use the account anymore, but you still need access to the user data.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.DeactivateUserResponse> DeactivateUser(global::Zitadel.Management.V1.DeactivateUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deactivate User
      ///
      /// Deprecated: use [user service v2 ReactivateUser](apis/resources/user_service_v2/user-service-reactivate-user.api.mdx) instead.
      ///
      /// Reactivate a user with the state 'deactivated'. The user will be able to log in again afterward.
      /// The endpoint returns an error if the user is not in the state 'deactivated'.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ReactivateUserResponse> ReactivateUser(global::Zitadel.Management.V1.ReactivateUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lock User
      ///
      /// Deprecated: use [user service v2 LockUser](apis/resources/user_service_v2/user-service-lock-user.api.mdx) instead.
      ///
      /// The state of the user will be changed to 'locked'. The user will not be able to log in anymore.
      /// The endpoint returns an error if the user is already in the state 'locked'.
      /// Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.LockUserResponse> LockUser(global::Zitadel.Management.V1.LockUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Unlock User
      ///
      /// Deprecated: use [user service v2 UnlockUser](apis/resources/user_service_v2/user-service-unlock-user.api.mdx) instead.
      ///
      /// Unlock a user with the state 'locked'. The user will be able to log in again afterward.
      /// The endpoint returns an error if the user is not in the state 'locked'.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UnlockUserResponse> UnlockUser(global::Zitadel.Management.V1.UnlockUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Unlock User
      ///
      /// Deprecated: use [user service v2 DeleteUser](apis/resources/user_service_v2/user-service-delete-user.api.mdx) instead.
      ///
      /// The state of the user will be changed to 'deleted'. The user will not be able to log in anymore. Endpoints requesting this user will return an error 'User not found.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveUserResponse> RemoveUser(global::Zitadel.Management.V1.RemoveUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Change user name
      ///
      /// Deprecated: use [user service v2 UpdateUser](apis/resources/user_service_v2/user-service-update-user.api.mdx) instead.
      ///
      /// Change the username of the user. Be aware that the user has to log in with the newly added username afterward.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateUserNameResponse> UpdateUserName(global::Zitadel.Management.V1.UpdateUserNameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Set User Metadata
      ///
      /// Deprecated: use [SetUserMetadata](apis/resources/user_service_v2/user-service-set-user-metadata.api.mdx) instead.
      ///
      /// This endpoint either adds or updates a metadata value for the requested key. Make sure the value is base64 encoded.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SetUserMetadataResponse> SetUserMetadata(global::Zitadel.Management.V1.SetUserMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Bulk Set User Metadata
      ///
      /// Deprecated: use [SetUserMetadata](apis/resources/user_service_v2/user-service-set-user-metadata.api.mdx) instead.
      ///
      /// Add or update multiple metadata values for a user. Make sure the values are base64 encoded.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.BulkSetUserMetadataResponse> BulkSetUserMetadata(global::Zitadel.Management.V1.BulkSetUserMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Search User Metadata
      ///
      /// Deprecated: use [ListUserMetadata](apis/resources/user_service_v2/user-service-list-user-metadata.api.mdx) instead.
      ///
      /// Get the metadata of a user filtered by your query.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListUserMetadataResponse> ListUserMetadata(global::Zitadel.Management.V1.ListUserMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get User Metadata By Key
      ///
      /// Deprecated: use [ListUserMetadata](apis/resources/user_service_v2/user-service-list-user-metadata.api.mdx) instead.
      ///
      /// Get a metadata object from a user by a specific key.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetUserMetadataResponse> GetUserMetadata(global::Zitadel.Management.V1.GetUserMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete User Metadata By Key
      ///
      /// Deprecated: use [DeleteUserMetadata](apis/resources/user_service_v2/user-service-delete-user-metadata.api.mdx) instead.
      ///
      /// Get a metadata object from a user by a specific key.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveUserMetadataResponse> RemoveUserMetadata(global::Zitadel.Management.V1.RemoveUserMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete User Metadata By Key
      ///
      /// Deprecated: use [DeleteUserMetadata](apis/resources/user_service_v2/user-service-delete-user-metadata.api.mdx) instead.
      ///
      /// Remove a list of metadata objects from a user with a list of keys.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.BulkRemoveUserMetadataResponse> BulkRemoveUserMetadata(global::Zitadel.Management.V1.BulkRemoveUserMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get User Profile (Human)
      ///
      /// Deprecated: use [user service v2 GetUserByID](apis/resources/user_service_v2/user-service-get-user-by-id.api.mdx) instead.
      ///
      /// Get basic information like first_name and last_name of a user.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetHumanProfileResponse> GetHumanProfile(global::Zitadel.Management.V1.GetHumanProfileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update User Profile (Human)
      ///
      /// Deprecated: use [user service v2 UpdateHumanUser](apis/resources/user_service_v2/user-service-update-human-user.api.mdx) instead.
      ///
      /// Update the profile information from a user. The profile includes basic information like first_name and last_name.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateHumanProfileResponse> UpdateHumanProfile(global::Zitadel.Management.V1.UpdateHumanProfileRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get User Email (Human)
      ///
      /// Deprecated: use [user service v2 GetUserByID](apis/resources/user_service_v2/user-service-get-user-by-id.api.mdx) instead.
      ///
      /// Get the email address and the verification state of the address.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetHumanEmailResponse> GetHumanEmail(global::Zitadel.Management.V1.GetHumanEmailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update User Email (Human)
      ///
      /// Deprecated: use [user service v2 SetEmail](apis/resources/user_service_v2/user-service-set-email.api.mdx) instead.
      ///
      /// Change the email address of a user. If the state is set to not verified, the user will get a verification email.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateHumanEmailResponse> UpdateHumanEmail(global::Zitadel.Management.V1.UpdateHumanEmailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Resend User Initialization Email
      ///
      /// Deprecated: not used anymore in user state so will be removed.
      ///
      /// A newly created user will get an initialization email to verify the email address and set a password. Resend the email with this request to the user's email address, or a newly added address.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResendHumanInitializationResponse> ResendHumanInitialization(global::Zitadel.Management.V1.ResendHumanInitializationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Resend User Email Verification
      ///
      /// Deprecated: use [user service v2 ResendEmailCode](apis/resources/user_service_v2/user-service-resend-email-code.api.mdx) instead.
      ///
      /// Resend the email verification notification to the given email address of the user.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResendHumanEmailVerificationResponse> ResendHumanEmailVerification(global::Zitadel.Management.V1.ResendHumanEmailVerificationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get User Phone (Human)
      ///
      /// Deprecated: use [user service v2 GetUserByID](apis/resources/user_service_v2/user-service-get-user-by-id.api.mdx) instead.
      ///
      /// Get the phone number and the verification state of the number. The phone number is only for informational purposes and to send messages, not for Authentication (2FA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetHumanPhoneResponse> GetHumanPhone(global::Zitadel.Management.V1.GetHumanPhoneRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update User Phone (Human)
      ///
      /// Deprecated: use [user service v2 UpdateUser](apis/resources/user_service_v2/user-service-update-user.api.mdx) instead.
      ///
      /// Change the phone number of a user. If the state is set to not verified, the user will get an SMS to verify (if a notification provider is configured). The phone number is only for informational purposes and to send messages, not for Authentication (2FA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateHumanPhoneResponse> UpdateHumanPhone(global::Zitadel.Management.V1.UpdateHumanPhoneRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove User Phone (Human)
      ///
      /// Deprecated: use user service v2 [user service v2 SetPhone](apis/resources/user_service_v2/user-service-set-phone.api.mdx) instead.
      ///
      /// Remove the configured phone number of a user.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveHumanPhoneResponse> RemoveHumanPhone(global::Zitadel.Management.V1.RemoveHumanPhoneRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Resend User Phone Verification
      ///
      /// Deprecated: use user service v2 [user service v2 ResendPhoneCode](apis/resources/user_service_v2/user-service-resend-phone-code.api.mdx) instead.
      ///
      /// Resend the notification for the verification of the phone number, to the number stored on the user.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResendHumanPhoneVerificationResponse> ResendHumanPhoneVerification(global::Zitadel.Management.V1.ResendHumanPhoneVerificationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete User Avatar (Human)
      ///
      /// Removes the avatar that is currently set on the user.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveHumanAvatarResponse> RemoveHumanAvatar(global::Zitadel.Management.V1.RemoveHumanAvatarRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Set Human Initial Password
      ///
      /// Deprecated: use [user service v2 SetPassword](apis/resources/user_service_v2/user-service-set-password.api.mdx) instead.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SetHumanInitialPasswordResponse> SetHumanInitialPassword(global::Zitadel.Management.V1.SetHumanInitialPasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Set User Password
      ///
      /// Deprecated: use [user service v2 SetPassword](apis/resources/user_service_v2/user-service-set-password.api.mdx) instead.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SetHumanPasswordResponse> SetHumanPassword(global::Zitadel.Management.V1.SetHumanPasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Send Reset Password Notification
      ///
      /// Deprecated: use [user service v2 PasswordReset](apis/resources/user_service_v2/user-service-password-reset.api.mdx) instead.
      ///
      /// The user will receive an email with a link to change the password.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SendHumanResetPasswordNotificationResponse> SendHumanResetPasswordNotification(global::Zitadel.Management.V1.SendHumanResetPasswordNotificationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get User Authentication Factors (2FA/MFA)
      ///
      /// Deprecated: use [user service v2 ListAuthenticationMethodTypes](apis/resources/user_service_v2/user-service-list-authentication-method-types.api.mdx) instead.
      ///
      /// Get a list of authentication factors the user has set. Including Second Factors (2FA) and Multi-Factors (MFA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListHumanAuthFactorsResponse> ListHumanAuthFactors(global::Zitadel.Management.V1.ListHumanAuthFactorsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove Multi-Factor OTP
      ///
      /// Deprecated: use [user service v2 RemoveTOTP](apis/resources/user_service_v2/user-service-remove-totp.api.mdx) instead.
      ///
      /// Remove the configured One-Time Password (OTP) as a factor from the user. OTP is an authentication app, like Authy or Google/Microsoft Authenticator.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPResponse> RemoveHumanAuthFactorOTP(global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove Multi-Factor U2F
      ///
      /// Deprecated: use [user service v2 RemoveU2F](apis/resources/user_service_v2/user-service-remove-u-2-f.api.mdx) instead.
      ///
      /// Remove the configured Universal Second Factor (U2F) as a factor from the user. U2F is a device-dependent factor like FingerPrint, Windows-Hello, etc.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FResponse> RemoveHumanAuthFactorU2F(global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove Multi-Factor OTP SMS
      ///
      /// Deprecated: use [user service v2 RemoveOTPSMS](apis/resources/user_service_v2/user-service-remove-otpsms.api.mdx) instead.
      ///
      /// Remove the configured One-Time Password (OTP) SMS as a factor from the user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSResponse> RemoveHumanAuthFactorOTPSMS(global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove Multi-Factor OTP Email
      ///
      /// Deprecated: use [user service v2 RemoveOTPEmail](apis/resources/user_service_v2/user-service-remove-otp-email.api.mdx) instead.
      ///
      /// Remove the configured One-Time Password (OTP) Email as a factor from the user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailResponse> RemoveHumanAuthFactorOTPEmail(global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Search Passwordless/Passkey authentication
      ///
      /// Deprecated: use [user service v2 ListPasskeys](apis/resources/user_service_v2/user-service-list-passkeys.api.mdx) instead.
      ///
      /// Get a list of configured passwordless/passkey authentication methods from the user. Passwordless/passkey is a device-dependent authentication like FingerScan, WindowsHello or a Hardware Token.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListHumanPasswordlessResponse> ListHumanPasswordless(global::Zitadel.Management.V1.ListHumanPasswordlessRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add Passwordless/Passkey Registration Link
      ///
      /// Deprecated: use [user service v2 RegisterPasskey](apis/resources/user_service_v2/user-service-register-passkey.api.mdx) instead.
      ///
      /// Adds a new passwordless/passkey authenticator link to the user and returns it in the response. The link enables the user to register a new device if current passwordless/passkey devices are all platform authenticators. e.g. User has already registered Windows Hello and wants to register FaceID on the iPhone.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddPasswordlessRegistrationResponse> AddPasswordlessRegistration(global::Zitadel.Management.V1.AddPasswordlessRegistrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Send Passwordless/Passkey Registration Link
      ///
      /// Deprecated: use [user service v2 RegisterPasskey](apis/resources/user_service_v2/user-service-register-passkey.api.mdx) instead.
      ///
      /// Adds a new passwordless/passkey authenticator link to the user and sends it to the user per email. The link enables the user to register a new device if current passwordless/passkey devices are all platform authenticators. e.g. User has already registered Windows Hello and wants to register FaceID on the iPhone.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SendPasswordlessRegistrationResponse> SendPasswordlessRegistration(global::Zitadel.Management.V1.SendPasswordlessRegistrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete Passwordless/Passkey
      ///
      /// Deprecated: use [user service v2 RemovePasskey](apis/resources/user_service_v2/user-service-remove-passkey.api.mdx) instead.
      ///
      /// Remove a configured passwordless/passkey authentication method from the user. (e.g FaceID, FingerScane, WindowsHello, etc.).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveHumanPasswordlessResponse> RemoveHumanPasswordless(global::Zitadel.Management.V1.RemoveHumanPasswordlessRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update Machine User
      ///
      /// Deprecated: use [user service v2 UpdateUser](apis/resources/user_service_v2/user-service-update-user.api.mdx) instead.
      ///
      /// Change a service account/machine user. It is used for accounts with non-interactive authentication possibilities.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateMachineResponse> UpdateMachine(global::Zitadel.Management.V1.UpdateMachineRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create Secret for Machine User
      ///
      /// Deprecated: use [user service v2 AddSecret](apis/resources/user_service_v2/user-service-add-secret.api.mdx) instead.
      ///
      /// Create a new secret for a machine user/service account. It is used to authenticate the user (client credential grant).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GenerateMachineSecretResponse> GenerateMachineSecret(global::Zitadel.Management.V1.GenerateMachineSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete Secret of Machine User
      ///
      /// Deprecated: use [user service v2 RemoveSecret](apis/resources/user_service_v2/user-service-remove-secret.api.mdx) instead.
      ///
      /// Delete a secret of a machine user/service account. The user will not be able to authenticate with the secret afterward.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveMachineSecretResponse> RemoveMachineSecret(global::Zitadel.Management.V1.RemoveMachineSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get Machine user Key By ID
      ///
      /// Deprecated: use [user service v2 ListUsers](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Get a specific Key of a machine user by its id. Machine keys are used to authenticate with jwt profile authentication.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetMachineKeyByIDsResponse> GetMachineKeyByIDs(global::Zitadel.Management.V1.GetMachineKeyByIDsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List Machine Keys
      ///
      /// Deprecated: use [user service v2 ListKeys](apis/resources/user_service_v2/user-service-list-keys.api.mdx) instead.
      ///
      /// Get the list of keys of a machine user. Machine keys are used to authenticate with jwt profile authentication.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListMachineKeysResponse> ListMachineKeys(global::Zitadel.Management.V1.ListMachineKeysRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create Key for machine user
      ///
      /// Deprecated: use [user service v2 AddKey](apis/resources/user_service_v2/user-service-add-key.api.mdx) instead.
      ///
      /// If a public key is not supplied, a new key is generated and will be returned in the response.
      /// Make sure to store the returned key.
      /// If an RSA public key is supplied, the private key is omitted from the response.
      /// Machine keys are used to authenticate with jwt profile.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddMachineKeyResponse> AddMachineKey(global::Zitadel.Management.V1.AddMachineKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete Key for machine user
      ///
      /// Deprecated: use [user service v2 RemoveKey](apis/resources/user_service_v2/user-service-remove-key.api.mdx) instead.
      ///
      /// Delete a specific key from a user.
      /// The user will not be able to authenticate with that key afterward.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveMachineKeyResponse> RemoveMachineKey(global::Zitadel.Management.V1.RemoveMachineKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get Personal-Access-Token (PAT) by ID
      ///
      /// Deprecated: use [user service v2 ListPersonalAccessTokens](apis/resources/user_service_v2/user-service-list-personal-access-tokens.api.mdx) instead.
      ///
      /// Returns the PAT for a user, currently only available for machine users/service accounts. PATs are ready-to-use tokens and can be sent directly in the authentication header.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsResponse> GetPersonalAccessTokenByIDs(global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List Personal-Access-Tokens (PATs)
      ///
      /// Deprecated: use [user service v2 ListPersonalAccessTokens](apis/resources/user_service_v2/user-service-list-personal-access-tokens.api.mdx) instead.
      ///
      /// Returns a list of PATs for a user, currently only available for machine users/service accounts. PATs are ready-to-use tokens and can be sent directly in the authentication header.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListPersonalAccessTokensResponse> ListPersonalAccessTokens(global::Zitadel.Management.V1.ListPersonalAccessTokensRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a Personal-Access-Token (PAT)
      ///
      /// Deprecated: use [user service v2 AddPersonalAccessToken](apis/resources/user_service_v2/user-service-add-personal-access-token.api.mdx) instead.
      ///
      /// Generates a new PAT for the user. Currently only available for machine users.
      /// The token will be returned in the response, make sure to store it.
      /// PATs are ready-to-use tokens and can be sent directly in the authentication header.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddPersonalAccessTokenResponse> AddPersonalAccessToken(global::Zitadel.Management.V1.AddPersonalAccessTokenRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove a Personal-Access-Token (PAT) by ID
      ///
      /// Deprecated: use [user service v2 RemovePersonalAccessToken](apis/resources/user_service_v2/user-service-remove-personal-access-token.api.mdx) instead.
      ///
      /// Delete a PAT from a user. Afterward, the user will not be able to authenticate with that token anymore.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemovePersonalAccessTokenResponse> RemovePersonalAccessToken(global::Zitadel.Management.V1.RemovePersonalAccessTokenRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List Social Logins
      ///
      /// Deprecated: use [user service v2 ListLinkedIDPs](apis/resources/user_service_v2/user-service-list-idp-links.api.mdx) instead.
      ///
      /// Returns a list of all linked identity providers/social logins of the user. (e. Google, Microsoft, AzureAD, etc.).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListHumanLinkedIDPsResponse> ListHumanLinkedIDPs(global::Zitadel.Management.V1.ListHumanLinkedIDPsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove Social Login
      ///
      /// Deprecated: use [user service v2 RemoveIDPLink](apis/resources/user_service_v2/user-service-remove-idp-link.api.mdx) instead.
      ///
      /// Remove a configured social logins/identity providers of the user (e.g. Google, Microsoft, AzureAD, etc.). The user will not be able to log in with the given provider afterward. Make sure the user does have other possibilities to authenticate.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveHumanLinkedIDPResponse> RemoveHumanLinkedIDP(global::Zitadel.Management.V1.RemoveHumanLinkedIDPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List ZITADEL Permissions
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Show all the permissions the user has in ZITADEL (ZITADEL Manager).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListUserMembershipsResponse> ListUserMemberships(global::Zitadel.Management.V1.ListUserMembershipsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetMyOrgResponse> GetMyOrg(global::Zitadel.Management.V1.GetMyOrgRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get Organization By Domain
      ///
      /// Deprecated: use [organization v2 service ListOrganizations](apis/resources/org_service_v2/organization-service-list-organizations.api.mdx) instead.
      ///
      /// Search an organization by the domain, overall organizations. The domain must match exactly.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetOrgByDomainGlobalResponse> GetOrgByDomainGlobal(global::Zitadel.Management.V1.GetOrgByDomainGlobalRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListOrgChangesResponse> ListOrgChanges(global::Zitadel.Management.V1.ListOrgChangesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create Organization
      ///
      /// Deprecated: use [organization service v2 CreateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-create-organization.api.mdx) instead
      ///
      /// Create a new organization. Based on the given name a domain will be generated to be able to identify users within an organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddOrgResponse> AddOrg(global::Zitadel.Management.V1.AddOrgRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update Organization
      ///
      /// Deprecated: use [organization service v2 UpdateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-update-organization.api.mdx) instead.
      ///
      /// Change the name of the organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateOrgResponse> UpdateOrg(global::Zitadel.Management.V1.UpdateOrgRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deactivate Organization
      ///
      /// Deprecated: use [organization service v2 DeactivateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-deactivate-organization.api.mdx) instead.
      ///
      /// Sets the state of my organization to deactivated. Users of this organization will not be able to log in.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.DeactivateOrgResponse> DeactivateOrg(global::Zitadel.Management.V1.DeactivateOrgRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Reactivate Organization
      ///
      /// Deprecated: use [organization service v2 ActivateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-activate-organization.api.mdx) instead.
      ///
      /// Set the state of my organization to active. The state of the organization has to be deactivated to perform the request. Users of this organization will be able to log in again.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ReactivateOrgResponse> ReactivateOrg(global::Zitadel.Management.V1.ReactivateOrgRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete Organization
      ///
      /// Deprecated: use [organization service v2 DeleteOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization.api.mdx) instead.
      ///
      /// Deletes my organization and all its resources (Users, Projects, Grants to and from the org). Users of this organization will not be able to log in.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveOrgResponse> RemoveOrg(global::Zitadel.Management.V1.RemoveOrgRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Set Organization Metadata
      ///
      /// Deprecated: use [organization service v2 SetOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-set-organization-metadata.api.mdx) instead.
      ///
      /// This endpoint either adds or updates a metadata value for the requested key. Make sure the value is base64 encoded.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SetOrgMetadataResponse> SetOrgMetadata(global::Zitadel.Management.V1.SetOrgMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Bulk Set Organization Metadata
      ///
      /// Deprecated: use [organization service v2 SetOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-set-organization-metadata.api.mdx) instead.
      ///
      /// This endpoint sets a list of metadata to the organization. Make sure the values are base64 encoded.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.BulkSetOrgMetadataResponse> BulkSetOrgMetadata(global::Zitadel.Management.V1.BulkSetOrgMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Search Organization Metadata
      ///
      /// Deprecated: use [organization service v2 ListOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-list-organization-metadata.api.mdx) instead.
      ///
      /// Get the metadata of an organization filtered by your query.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListOrgMetadataResponse> ListOrgMetadata(global::Zitadel.Management.V1.ListOrgMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get Organization Metadata By Key
      ///
      /// Deprecated: use [organization service v2 ListOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-list-organization-metadata.api.mdx) instead.
      ///
      /// Get a metadata object from an organization by a specific key.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetOrgMetadataResponse> GetOrgMetadata(global::Zitadel.Management.V1.GetOrgMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete Organization Metadata By Key
      ///
      /// Deprecated: use [organization service v2 DeleteOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization-metadata.api.mdx) instead.
      ///
      /// Remove a metadata object from an organization with a specific key.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveOrgMetadataResponse> RemoveOrgMetadata(global::Zitadel.Management.V1.RemoveOrgMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Bulk Delete Metadata
      ///
      /// Deprecated: use [organization service v2 DeleteOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization-metadata.api.mdx) instead.
      ///
      /// Remove a list of metadata objects from an organization with a list of keys.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.BulkRemoveOrgMetadataResponse> BulkRemoveOrgMetadata(global::Zitadel.Management.V1.BulkRemoveOrgMetadataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add Domain
      ///
      /// Deprecated: use [organization service v2 AddOrganizationDomain](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-add-organization-domain.api.mdx) instead.
      ///
      /// Add a new domain to an organization. The domains are used to identify to which organization a user belongs.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddOrgDomainResponse> AddOrgDomain(global::Zitadel.Management.V1.AddOrgDomainRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Search Domains
      ///
      /// Deprecated: use [organization service v2 ListOrganizationDomains](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-list-organization-domains.api.mdx) instead.
      ///
      /// Returns the list of registered domains of an organization. The domains are used to identify to which organization a user belongs.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListOrgDomainsResponse> ListOrgDomains(global::Zitadel.Management.V1.ListOrgDomainsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove Domain
      ///
      /// Deprecated: use [organization service v2 DeleteOrganizationDomain](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization-domain.api.mdx) instead.
      ///
      /// Delete a new domain from an organization. The domains are used to identify to which organization a user belongs. If the uses use the domain for login, this will not be possible afterwards. They have to use another domain instead.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveOrgDomainResponse> RemoveOrgDomain(global::Zitadel.Management.V1.RemoveOrgDomainRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Generate Domain Verification
      ///
      /// Deprecated: use [organization service v2 GenerateOrganizationDomainValidation](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-generate-organization-domain-validation.api.mdx) instead.
      ///
      /// Generate a new file to be able to verify your domain with DNS or HTTP challenge.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GenerateOrgDomainValidationResponse> GenerateOrgDomainValidation(global::Zitadel.Management.V1.GenerateOrgDomainValidationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Verify Domain
      ///
      /// Deprecated: use [organization service v2 VerifyOrganizationDomain](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-verify-organization-domain.api.mdx) instead.
      ///
      /// Make sure you have added the required verification to your domain, depending on the method you have chosen (HTTP or DNS challenge). ZITADEL will check it and set the domain as verified if it was successful. A verify domain has to be unique.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ValidateOrgDomainResponse> ValidateOrgDomain(global::Zitadel.Management.V1.ValidateOrgDomainRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SetPrimaryOrgDomainResponse> SetPrimaryOrgDomain(global::Zitadel.Management.V1.SetPrimaryOrgDomainRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListOrgMemberRolesResponse> ListOrgMemberRoles(global::Zitadel.Management.V1.ListOrgMemberRolesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List Organization Members
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the organization level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListOrgMembersResponse> ListOrgMembers(global::Zitadel.Management.V1.ListOrgMembersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add Organization Member
      ///
      /// Deprecated: use [CreateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-create-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request adds a new user to the members list on the organization level with one or multiple roles.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddOrgMemberResponse> AddOrgMember(global::Zitadel.Management.V1.AddOrgMemberRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update Organization Member
      ///
      /// Deprecated: use [UpdateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-update-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateOrgMemberResponse> UpdateOrgMember(global::Zitadel.Management.V1.UpdateOrgMemberRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove Organization Member
      ///
      /// Deprecated: use [DeleteAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-delete-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on an instance level. The user can still have roles on another level (iam, project).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveOrgMemberResponse> RemoveOrgMember(global::Zitadel.Management.V1.RemoveOrgMemberRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get Project By ID
      ///
      /// Deprecated: use [project v2 service GetProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-get-project.api.mdx) instead.
      ///
      /// Returns a project owned by the organization (no granted projects). A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetProjectByIDResponse> GetProjectByID(global::Zitadel.Management.V1.GetProjectByIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get Granted Project By ID
      ///
      /// Deprecated: use [project v2 service ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a project owned by another organization and granted to my organization. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetGrantedProjectByIDResponse> GetGrantedProjectByID(global::Zitadel.Management.V1.GetGrantedProjectByIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Search Project
      ///
      /// Deprecated: use [project v2 service ListProjects](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-projects.api.mdx) instead.
      ///
      /// Lists projects my organization is the owner of (no granted projects). A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListProjectsResponse> ListProjects(global::Zitadel.Management.V1.ListProjectsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Search Granted Project
      ///
      /// Deprecated: use [project v2 service ListProjects](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-projects.api.mdx) instead.
      ///
      /// Lists projects my organization got granted from another organization. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListGrantedProjectsResponse> ListGrantedProjects(global::Zitadel.Management.V1.ListGrantedProjectsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Search Granted Project Roles
      ///
      /// Deprecated: use [project v2 service ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Lists the roles a granted projects has. These are the roles, that have been granted by the owner organization to my organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListGrantedProjectRolesResponse> ListGrantedProjectRoles(global::Zitadel.Management.V1.ListGrantedProjectRolesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListProjectChangesResponse> ListProjectChanges(global::Zitadel.Management.V1.ListProjectChangesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create Project
      ///
      /// Deprecated: use [project v2 service CreateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-create-project.api.mdx) instead.
      ///
      /// Create a new project. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddProjectResponse> AddProject(global::Zitadel.Management.V1.AddProjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update Project
      ///
      /// Deprecated: use [project v2 service UpdateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-update-project.api.mdx) instead.
      ///
      /// Update a project and its settings. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateProjectResponse> UpdateProject(global::Zitadel.Management.V1.UpdateProjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deactivate Project
      ///
      /// Deprecated: use [project v2 service DeactivateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-deactivate-project.api.mdx) instead.
      ///
      /// Set the state of a project to deactivated. Request returns an error if the project is already deactivated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.DeactivateProjectResponse> DeactivateProject(global::Zitadel.Management.V1.DeactivateProjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Reactivate Project
      ///
      /// Deprecated: use [project v2 service ActivateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-activate-project.api.mdx) instead.
      ///
      /// Set the state of a project to active. Request returns an error if the project is not deactivated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ReactivateProjectResponse> ReactivateProject(global::Zitadel.Management.V1.ReactivateProjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove Project
      ///
      /// Deprecated: use [project v2 service DeleteProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-delete-project.api.mdx) instead.
      ///
      /// Set the state of a project to active. Request returns an error if the project is not deactivated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveProjectResponse> RemoveProject(global::Zitadel.Management.V1.RemoveProjectRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Search Project Roles
      ///
      /// Deprecated: use [project v2 service ListProjectRoles](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-roles.api.mdx) instead.
      ///
      /// Returns all roles of a project matching the search query.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListProjectRolesResponse> ListProjectRoles(global::Zitadel.Management.V1.ListProjectRolesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add Project Role
      ///
      /// Deprecated: use [project v2 service AddProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-add-project-role.api.mdx) instead.
      ///
      /// Add a new project role to a project. The key must be unique within the project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddProjectRoleResponse> AddProjectRole(global::Zitadel.Management.V1.AddProjectRoleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Bulk Add Project Role
      ///
      /// Deprecated: use [project v2 service AddProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-add-project-role.api.mdx) instead.
      ///
      /// Add a list of roles to a project. The keys must be unique within the project.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.BulkAddProjectRolesResponse> BulkAddProjectRoles(global::Zitadel.Management.V1.BulkAddProjectRolesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Change Project Role
      ///
      /// Deprecated: use [project v2 service UpdateProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-update-project-role.api.mdx) instead.
      ///
      /// Change a project role. The key is not editable. If a key should change, remove the role and create a new one.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateProjectRoleResponse> UpdateProjectRole(global::Zitadel.Management.V1.UpdateProjectRoleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove Project Role
      ///
      /// Deprecated: use [project v2 service RemoveProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-remove-project-role.api.mdx) instead.
      ///
      /// Removes the role from the project and on every resource it has a dependency. This includes project grants and user grants.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveProjectRoleResponse> RemoveProjectRole(global::Zitadel.Management.V1.RemoveProjectRoleRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListProjectMemberRolesResponse> ListProjectMemberRoles(global::Zitadel.Management.V1.ListProjectMemberRolesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List Project Members
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the project level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListProjectMembersResponse> ListProjectMembers(global::Zitadel.Management.V1.ListProjectMembersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add Project Member
      ///
      /// Deprecated: use [CreateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-create-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request adds a new user to the members list on the project level with one or multiple roles.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddProjectMemberResponse> AddProjectMember(global::Zitadel.Management.V1.AddProjectMemberRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update Project Member
      ///
      /// Deprecated: use [UpdateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-update-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateProjectMemberResponse> UpdateProjectMember(global::Zitadel.Management.V1.UpdateProjectMemberRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove Project Member
      ///
      /// Deprecated: use [DeleteAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-delete-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on an project level. The user can still have roles on another level (iam, organization).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveProjectMemberResponse> RemoveProjectMember(global::Zitadel.Management.V1.RemoveProjectMemberRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get Application By ID
      ///
      /// Deprecated: Use [GetApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-get-application.api.mdx) instead to fetch an app
      ///
      /// Get an application of any type (OIDC, API, SAML).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetAppByIDResponse> GetAppByID(global::Zitadel.Management.V1.GetAppByIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Search Applications
      ///
      /// Deprecated: Use [ListApplications](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-list-applications.api.mdx) instead to list applications
      ///
      /// Returns all applications within a project, that match the query.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListAppsResponse> ListApps(global::Zitadel.Management.V1.ListAppsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListAppChangesResponse> ListAppChanges(global::Zitadel.Management.V1.ListAppChangesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create Application (OIDC)
      ///
      /// Deprecated: Use [CreateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application.api.mdx) instead to create an OIDC application.
      ///
      /// Create a new OIDC client. The client id will be generated and returned in the response. Depending on the chosen configuration also a secret will be returned.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddOIDCAppResponse> AddOIDCApp(global::Zitadel.Management.V1.AddOIDCAppRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create Application (SAML)
      ///
      /// Deprecated: Use [CreateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application.api.mdx) instead to create a SAML application.
      ///
      /// Create a new SAML client. Returns an entity ID.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddSAMLAppResponse> AddSAMLApp(global::Zitadel.Management.V1.AddSAMLAppRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create Application (API)
      ///
      /// Deprecated: Use [CreateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application.api.mdx) instead to create an API application
      ///
      /// Create a new API client. The client id will be generated and returned in the response.
      /// Depending on the chosen configuration also a secret will be generated and returned.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddAPIAppResponse> AddAPIApp(global::Zitadel.Management.V1.AddAPIAppRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update Application
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the generic params of an app.
      ///
      /// Update the basic information of an application. This doesn't include information that are dependent on the application type (OIDC, API, SAML)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateAppResponse> UpdateApp(global::Zitadel.Management.V1.UpdateAppRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update OIDC Application Config
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the config of an OIDC app.
      ///
      /// Update the OIDC specific configuration of an application.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateOIDCAppConfigResponse> UpdateOIDCAppConfig(global::Zitadel.Management.V1.UpdateOIDCAppConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update SAML Application Config
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the config of a SAML app.
      ///
      /// Update the SAML specific configuration of an application.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateSAMLAppConfigResponse> UpdateSAMLAppConfig(global::Zitadel.Management.V1.UpdateSAMLAppConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update API Application Config
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the config of an API app.
      ///
      /// Update the OIDC-specific configuration of an application.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateAPIAppConfigResponse> UpdateAPIAppConfig(global::Zitadel.Management.V1.UpdateAPIAppConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deactivate Application
      ///
      /// Deprecated: Use [DeactivateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-deactivate-application.api.mdx) instead to deactivate an app.
      ///
      /// Set the state of an application to deactivated. It is not possible to request tokens for deactivated apps. Request returns an error if the application is already deactivated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.DeactivateAppResponse> DeactivateApp(global::Zitadel.Management.V1.DeactivateAppRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Reactivate Application
      ///
      /// Deprecated: Use [ReactivateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-reactivate-application.api.mdx) instead to reactivate an app.
      ///
      /// Set the state of an application to active. Request returns an error if the application is not deactivated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ReactivateAppResponse> ReactivateApp(global::Zitadel.Management.V1.ReactivateAppRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove Application
      ///
      /// Deprecated: Use [DeleteApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-delete-application.api.mdx) instead to delete an app.
      ///
      /// Remove an application. It is not possible to request tokens for removed apps. Request returns an error if the application is already deactivated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveAppResponse> RemoveApp(global::Zitadel.Management.V1.RemoveAppRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Generate New OIDC Client Secret
      ///
      /// Deprecated: Use [RegenerateClientSecret](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-regenerate-client-secret.api.mdx) instead to regenerate an OIDC app client secret.
      ///
      /// Generates a new client secret for the OIDC application, make sure to save the response.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RegenerateOIDCClientSecretResponse> RegenerateOIDCClientSecret(global::Zitadel.Management.V1.RegenerateOIDCClientSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Generate New API Client Secret
      ///
      /// Deprecated: Use [RegenerateClientSecret](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-regenerate-client-secret.api.mdx) instead to regenerate an API app client secret
      ///
      /// Generates a new client secret for the API application, make sure to save the response.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RegenerateAPIClientSecretResponse> RegenerateAPIClientSecret(global::Zitadel.Management.V1.RegenerateAPIClientSecretRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get Application Key By ID
      ///
      /// Deprecated: Use [GetApplicationKey](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-get-application-key.api.mdx) instead to get an application key.
      ///
      /// Returns an application key. Keys are used for authorizing API Applications.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetAppKeyResponse> GetAppKey(global::Zitadel.Management.V1.GetAppKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List Application Keys
      ///
      /// Deprecated: Use [ListApplicationKeys](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-list-application-keys.api.mdx) instead to list application keys.
      ///
      /// Search application keys. Keys are used for authorizing API Applications.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListAppKeysResponse> ListAppKeys(global::Zitadel.Management.V1.ListAppKeysRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create Application Key
      ///
      /// Deprecated: Use [CreateApplicationKey](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application-key.api.mdx) instead to create an application key.
      ///
      /// Create a new application key, they are used for authorizing API Applications. Key details will be returned in the response, make sure to save it.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddAppKeyResponse> AddAppKey(global::Zitadel.Management.V1.AddAppKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete Application Key
      ///
      /// Deprecated: Use [DeleteApplicationKey](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-delete-application-key.api.mdx) instead to delete an application key.
      ///
      /// Remove an application key. The API application will not be able to authorize with the key anymore.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveAppKeyResponse> RemoveAppKey(global::Zitadel.Management.V1.RemoveAppKeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListProjectGrantChangesResponse> ListProjectGrantChanges(global::Zitadel.Management.V1.ListProjectGrantChangesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Project Grant By ID
      ///
      /// Deprecated: use [ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a project grant. A project grant is when the organization grants its project to another organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetProjectGrantByIDResponse> GetProjectGrantByID(global::Zitadel.Management.V1.GetProjectGrantByIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Search Project Grants from Project
      ///
      /// Deprecated: use [ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a list of project grants for a specific project. A project grant is when the organization grants its project to another organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListProjectGrantsResponse> ListProjectGrants(global::Zitadel.Management.V1.ListProjectGrantsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Search Project Grants
      ///
      /// Deprecated: use [ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a list of project grants. A project grant is when the organization grants its project to another organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListAllProjectGrantsResponse> ListAllProjectGrants(global::Zitadel.Management.V1.ListAllProjectGrantsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add Project Grant
      ///
      /// Deprecated: use [CreateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-create-project-grant.api.mdx) instead.
      ///
      /// Grant a project to another organization. The project grant will allow the granted organization to access the project and manage the authorizations for its users. Project Grant will be listed in the granted project of the granted organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddProjectGrantResponse> AddProjectGrant(global::Zitadel.Management.V1.AddProjectGrantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Change Project Grant
      ///
      /// Deprecated: use [UpdateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-update-project-grant.api.mdx) instead.
      ///
      /// Change the roles of the project that is granted to another organization. The project grant will allow the granted organization to access the project and manage the authorizations for its users. Project Grant will be listed in the granted project of the granted organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateProjectGrantResponse> UpdateProjectGrant(global::Zitadel.Management.V1.UpdateProjectGrantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deactivate Project Grant
      ///
      /// Deprecated: use [DeactivateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-deactivate-project-grant.api.mdx) instead.
      ///
      /// Set the state of the project grant to deactivated. The grant has to be active to be able to deactivate.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.DeactivateProjectGrantResponse> DeactivateProjectGrant(global::Zitadel.Management.V1.DeactivateProjectGrantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Reactivate Project Grant
      ///
      /// Deprecated: use [ActivateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-activate-project-grant.api.mdx) instead.
      ///
      /// Set the state of the project grant to active. The grant has to be deactivated to be able to reactivate.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ReactivateProjectGrantResponse> ReactivateProjectGrant(global::Zitadel.Management.V1.ReactivateProjectGrantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove Project Grant
      ///
      /// Deprecated: use [DeleteProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-delete-project-grant.api.mdx) instead.
      ///
      /// Remove a project grant. All user grants for this project grant will also be removed. A user will not have access to the project afterward (if permissions are checked).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveProjectGrantResponse> RemoveProjectGrant(global::Zitadel.Management.V1.RemoveProjectGrantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListProjectGrantMemberRolesResponse> ListProjectGrantMemberRoles(global::Zitadel.Management.V1.ListProjectGrantMemberRolesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List Project Grant Members
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the project grant level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListProjectGrantMembersResponse> ListProjectGrantMembers(global::Zitadel.Management.V1.ListProjectGrantMembersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add Project Grant Member
      ///
      /// Deprecated: use [CreateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-create-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the project grant level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddProjectGrantMemberResponse> AddProjectGrantMember(global::Zitadel.Management.V1.AddProjectGrantMemberRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update Project Grant Member
      ///
      /// Deprecated: use [UpdateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-update-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateProjectGrantMemberResponse> UpdateProjectGrantMember(global::Zitadel.Management.V1.UpdateProjectGrantMemberRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove Project Grant Member
      ///
      /// Deprecated: use [DeleteAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-delete-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on a project grant level. The user can still have roles on another level (iam, organization, project).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveProjectGrantMemberResponse> RemoveProjectGrantMember(global::Zitadel.Management.V1.RemoveProjectGrantMemberRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get User Grant By ID
      ///
      /// Deprecated: [List authorizations](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-list-authorizations.api.mdx) and filter by its ID.
      ///
      /// Returns a user grant per ID. A user grant is a role a user has for a specific project and organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetUserGrantByIDResponse> GetUserGrantByID(global::Zitadel.Management.V1.GetUserGrantByIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Search User Grants
      ///
      /// Deprecated: [List authorizations](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-list-authorizations.api.mdx) and pass the user ID filter to search for a users grants on owned or granted projects.
      ///
      /// Returns a list of user grants that match the search queries. User grants are the roles users have for a specific project and organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListUserGrantResponse> ListUserGrants(global::Zitadel.Management.V1.ListUserGrantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add User Grant
      ///
      /// Deprecated: [Add an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-create-authorization.api.mdx) to grant a user access to an owned or granted project.
      ///
      /// Add a user grant for a specific user. User grants are the roles users have for a specific project and organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddUserGrantResponse> AddUserGrant(global::Zitadel.Management.V1.AddUserGrantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update User Grant
      ///
      /// Deprecated: [Update an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-update-authorization.api.mdx) to update a user's roles on an owned or granted project.
      ///
      /// Update the roles of a user grant. User grants are the roles users have for a specific project and organization.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateUserGrantResponse> UpdateUserGrant(global::Zitadel.Management.V1.UpdateUserGrantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deactivate User Grant
      ///
      /// Deprecated: [Deactivate an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-deactivate-authorization.api.mdx) to disable a user's access to an owned or granted project.
      ///
      /// Deactivate the user grant. The user will not be able to use the granted project anymore. Also, the roles will not be included in the tokens when requested. An error will be returned if the user grant is already deactivated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.DeactivateUserGrantResponse> DeactivateUserGrant(global::Zitadel.Management.V1.DeactivateUserGrantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Reactivate User Grant
      ///
      /// Deprecated: [Activate an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-activate-authorization.api.mdx) to enable a user's access to an owned or granted project.
      ///
      /// Reactivate a deactivated user grant. The user will be able to use the granted project again. An error will be returned if the user grant is not deactivated.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ReactivateUserGrantResponse> ReactivateUserGrant(global::Zitadel.Management.V1.ReactivateUserGrantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove User Grant
      ///
      /// Deprecated: [Delete an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-delete-authorization.api.mdx) to remove a users access to an owned or granted project.
      ///
      /// Removes the user grant from the user. The user will not be able to use the granted project anymore. Also, the roles will not be included in the tokens when requested.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveUserGrantResponse> RemoveUserGrant(global::Zitadel.Management.V1.RemoveUserGrantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Bulk Remove User Grants
      ///
      /// Deprecated: [Delete authorizations one after the other](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-delete-authorization.api.mdx) to remove access for multiple users on multiple owned or granted projects.
      ///
      /// Remove a list of user grants. The users will not be able to use the granted project anymore. Also, the roles will not be included in the tokens when requested.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.BulkRemoveUserGrantResponse> BulkRemoveUserGrant(global::Zitadel.Management.V1.BulkRemoveUserGrantRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///deprecated: please use DomainPolicy instead
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetOrgIAMPolicyResponse> GetOrgIAMPolicy(global::Zitadel.Management.V1.GetOrgIAMPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDomainPolicyResponse> GetDomainPolicy(global::Zitadel.Management.V1.GetDomainPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetLoginPolicyResponse> GetLoginPolicy(global::Zitadel.Management.V1.GetLoginPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDefaultLoginPolicyResponse> GetDefaultLoginPolicy(global::Zitadel.Management.V1.GetDefaultLoginPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddCustomLoginPolicyResponse> AddCustomLoginPolicy(global::Zitadel.Management.V1.AddCustomLoginPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateCustomLoginPolicyResponse> UpdateCustomLoginPolicy(global::Zitadel.Management.V1.UpdateCustomLoginPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResetLoginPolicyToDefaultResponse> ResetLoginPolicyToDefault(global::Zitadel.Management.V1.ResetLoginPolicyToDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListLoginPolicyIDPsResponse> ListLoginPolicyIDPs(global::Zitadel.Management.V1.ListLoginPolicyIDPsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddIDPToLoginPolicyResponse> AddIDPToLoginPolicy(global::Zitadel.Management.V1.AddIDPToLoginPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyResponse> RemoveIDPFromLoginPolicy(global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListLoginPolicySecondFactorsResponse> ListLoginPolicySecondFactors(global::Zitadel.Management.V1.ListLoginPolicySecondFactorsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyResponse> AddSecondFactorToLoginPolicy(global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyResponse> RemoveSecondFactorFromLoginPolicy(global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsResponse> ListLoginPolicyMultiFactors(global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyResponse> AddMultiFactorToLoginPolicy(global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyResponse> RemoveMultiFactorFromLoginPolicy(global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetPasswordComplexityPolicyResponse> GetPasswordComplexityPolicy(global::Zitadel.Management.V1.GetPasswordComplexityPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyResponse> GetDefaultPasswordComplexityPolicy(global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyResponse> AddCustomPasswordComplexityPolicy(global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyResponse> UpdateCustomPasswordComplexityPolicy(global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultResponse> ResetPasswordComplexityPolicyToDefault(global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetPasswordAgePolicyResponse> GetPasswordAgePolicy(global::Zitadel.Management.V1.GetPasswordAgePolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyResponse> GetDefaultPasswordAgePolicy(global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddCustomPasswordAgePolicyResponse> AddCustomPasswordAgePolicy(global::Zitadel.Management.V1.AddCustomPasswordAgePolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyResponse> UpdateCustomPasswordAgePolicy(global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultResponse> ResetPasswordAgePolicyToDefault(global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetLockoutPolicyResponse> GetLockoutPolicy(global::Zitadel.Management.V1.GetLockoutPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDefaultLockoutPolicyResponse> GetDefaultLockoutPolicy(global::Zitadel.Management.V1.GetDefaultLockoutPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddCustomLockoutPolicyResponse> AddCustomLockoutPolicy(global::Zitadel.Management.V1.AddCustomLockoutPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateCustomLockoutPolicyResponse> UpdateCustomLockoutPolicy(global::Zitadel.Management.V1.UpdateCustomLockoutPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultResponse> ResetLockoutPolicyToDefault(global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetPrivacyPolicyResponse> GetPrivacyPolicy(global::Zitadel.Management.V1.GetPrivacyPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDefaultPrivacyPolicyResponse> GetDefaultPrivacyPolicy(global::Zitadel.Management.V1.GetDefaultPrivacyPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddCustomPrivacyPolicyResponse> AddCustomPrivacyPolicy(global::Zitadel.Management.V1.AddCustomPrivacyPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyResponse> UpdateCustomPrivacyPolicy(global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultResponse> ResetPrivacyPolicyToDefault(global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetNotificationPolicyResponse> GetNotificationPolicy(global::Zitadel.Management.V1.GetNotificationPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDefaultNotificationPolicyResponse> GetDefaultNotificationPolicy(global::Zitadel.Management.V1.GetDefaultNotificationPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddCustomNotificationPolicyResponse> AddCustomNotificationPolicy(global::Zitadel.Management.V1.AddCustomNotificationPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateCustomNotificationPolicyResponse> UpdateCustomNotificationPolicy(global::Zitadel.Management.V1.UpdateCustomNotificationPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultResponse> ResetNotificationPolicyToDefault(global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetLabelPolicyResponse> GetLabelPolicy(global::Zitadel.Management.V1.GetLabelPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetPreviewLabelPolicyResponse> GetPreviewLabelPolicy(global::Zitadel.Management.V1.GetPreviewLabelPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDefaultLabelPolicyResponse> GetDefaultLabelPolicy(global::Zitadel.Management.V1.GetDefaultLabelPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddCustomLabelPolicyResponse> AddCustomLabelPolicy(global::Zitadel.Management.V1.AddCustomLabelPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateCustomLabelPolicyResponse> UpdateCustomLabelPolicy(global::Zitadel.Management.V1.UpdateCustomLabelPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ActivateCustomLabelPolicyResponse> ActivateCustomLabelPolicy(global::Zitadel.Management.V1.ActivateCustomLabelPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoResponse> RemoveCustomLabelPolicyLogo(global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkResponse> RemoveCustomLabelPolicyLogoDark(global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconResponse> RemoveCustomLabelPolicyIcon(global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkResponse> RemoveCustomLabelPolicyIconDark(global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontResponse> RemoveCustomLabelPolicyFont(global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResetLabelPolicyToDefaultResponse> ResetLabelPolicyToDefault(global::Zitadel.Management.V1.ResetLabelPolicyToDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetCustomInitMessageTextResponse> GetCustomInitMessageText(global::Zitadel.Management.V1.GetCustomInitMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDefaultInitMessageTextResponse> GetDefaultInitMessageText(global::Zitadel.Management.V1.GetDefaultInitMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SetCustomInitMessageTextResponse> SetCustomInitMessageText(global::Zitadel.Management.V1.SetCustomInitMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultResponse> ResetCustomInitMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextResponse> GetCustomPasswordResetMessageText(global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextResponse> GetDefaultPasswordResetMessageText(global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextResponse> SetCustomPasswordResetMessageText(global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultResponse> ResetCustomPasswordResetMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextResponse> GetCustomVerifyEmailMessageText(global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextResponse> GetDefaultVerifyEmailMessageText(global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextResponse> SetCustomVerifyEmailMessageText(global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultResponse> ResetCustomVerifyEmailMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextResponse> GetCustomVerifyPhoneMessageText(global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextResponse> GetDefaultVerifyPhoneMessageText(global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextResponse> SetCustomVerifyPhoneMessageText(global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultResponse> ResetCustomVerifyPhoneMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextResponse> GetCustomVerifySMSOTPMessageText(global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextResponse> GetDefaultVerifySMSOTPMessageText(global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextResponse> SetCustomVerifySMSOTPMessageText(global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultResponse> ResetCustomVerifySMSOTPMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextResponse> GetCustomVerifyEmailOTPMessageText(global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextResponse> GetDefaultVerifyEmailOTPMessageText(global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextResponse> SetCustomVerifyEmailOTPMessageText(global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse> ResetCustomVerifyEmailOTPMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextResponse> GetCustomDomainClaimedMessageText(global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextResponse> GetDefaultDomainClaimedMessageText(global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextResponse> SetCustomDomainClaimedMessageCustomText(global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultResponse> ResetCustomDomainClaimedMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextResponse> GetCustomPasswordlessRegistrationMessageText(global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextResponse> GetDefaultPasswordlessRegistrationMessageText(global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextResponse> SetCustomPasswordlessRegistrationMessageCustomText(global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse> ResetCustomPasswordlessRegistrationMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextResponse> GetCustomPasswordChangeMessageText(global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextResponse> GetDefaultPasswordChangeMessageText(global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextResponse> SetCustomPasswordChangeMessageCustomText(global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultResponse> ResetCustomPasswordChangeMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetCustomInviteUserMessageTextResponse> GetCustomInviteUserMessageText(global::Zitadel.Management.V1.GetCustomInviteUserMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextResponse> GetDefaultInviteUserMessageText(global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SetCustomInviteUserMessageTextResponse> SetCustomInviteUserMessageCustomText(global::Zitadel.Management.V1.SetCustomInviteUserMessageTextRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultResponse> ResetCustomInviteUserMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetCustomLoginTextsResponse> GetCustomLoginTexts(global::Zitadel.Management.V1.GetCustomLoginTextsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetDefaultLoginTextsResponse> GetDefaultLoginTexts(global::Zitadel.Management.V1.GetDefaultLoginTextsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SetCustomLoginTextsResponse> SetCustomLoginText(global::Zitadel.Management.V1.SetCustomLoginTextsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultResponse> ResetCustomLoginTextToDefault(global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetOrgIDPByIDResponse> GetOrgIDPByID(global::Zitadel.Management.V1.GetOrgIDPByIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListOrgIDPsResponse> ListOrgIDPs(global::Zitadel.Management.V1.ListOrgIDPsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddOrgOIDCIDPResponse> AddOrgOIDCIDP(global::Zitadel.Management.V1.AddOrgOIDCIDPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddOrgJWTIDPResponse> AddOrgJWTIDP(global::Zitadel.Management.V1.AddOrgJWTIDPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.DeactivateOrgIDPResponse> DeactivateOrgIDP(global::Zitadel.Management.V1.DeactivateOrgIDPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ReactivateOrgIDPResponse> ReactivateOrgIDP(global::Zitadel.Management.V1.ReactivateOrgIDPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RemoveOrgIDPResponse> RemoveOrgIDP(global::Zitadel.Management.V1.RemoveOrgIDPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateOrgIDPResponse> UpdateOrgIDP(global::Zitadel.Management.V1.UpdateOrgIDPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigResponse> UpdateOrgIDPOIDCConfig(global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigResponse> UpdateOrgIDPJWTConfig(global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns all identity providers, which match the query
      /// Limit should always be set, there is a default limit set by the service
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListProvidersResponse> ListProviders(global::Zitadel.Management.V1.ListProvidersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Returns an identity provider of the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetProviderByIDResponse> GetProviderByID(global::Zitadel.Management.V1.GetProviderByIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add a new OAuth2 identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddGenericOAuthProviderResponse> AddGenericOAuthProvider(global::Zitadel.Management.V1.AddGenericOAuthProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Change an existing OAuth2 identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateGenericOAuthProviderResponse> UpdateGenericOAuthProvider(global::Zitadel.Management.V1.UpdateGenericOAuthProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add a new OIDC identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddGenericOIDCProviderResponse> AddGenericOIDCProvider(global::Zitadel.Management.V1.AddGenericOIDCProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Change an existing OIDC identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateGenericOIDCProviderResponse> UpdateGenericOIDCProvider(global::Zitadel.Management.V1.UpdateGenericOIDCProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Migrate an existing OIDC identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.MigrateGenericOIDCProviderResponse> MigrateGenericOIDCProvider(global::Zitadel.Management.V1.MigrateGenericOIDCProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add a new JWT identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddJWTProviderResponse> AddJWTProvider(global::Zitadel.Management.V1.AddJWTProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Change an existing JWT identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateJWTProviderResponse> UpdateJWTProvider(global::Zitadel.Management.V1.UpdateJWTProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add a new Azure AD identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddAzureADProviderResponse> AddAzureADProvider(global::Zitadel.Management.V1.AddAzureADProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Change an existing Azure AD identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateAzureADProviderResponse> UpdateAzureADProvider(global::Zitadel.Management.V1.UpdateAzureADProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add a new GitHub identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddGitHubProviderResponse> AddGitHubProvider(global::Zitadel.Management.V1.AddGitHubProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Change an existing GitHub identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateGitHubProviderResponse> UpdateGitHubProvider(global::Zitadel.Management.V1.UpdateGitHubProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add a new GitHub Enterprise Server identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderResponse> AddGitHubEnterpriseServerProvider(global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Change an existing GitHub Enterprise Server identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderResponse> UpdateGitHubEnterpriseServerProvider(global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add a new GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddGitLabProviderResponse> AddGitLabProvider(global::Zitadel.Management.V1.AddGitLabProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Change an existing GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateGitLabProviderResponse> UpdateGitLabProvider(global::Zitadel.Management.V1.UpdateGitLabProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add a new self hosted GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddGitLabSelfHostedProviderResponse> AddGitLabSelfHostedProvider(global::Zitadel.Management.V1.AddGitLabSelfHostedProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Change an existing self hosted GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderResponse> UpdateGitLabSelfHostedProvider(global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add a new Google identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddGoogleProviderResponse> AddGoogleProvider(global::Zitadel.Management.V1.AddGoogleProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Change an existing Google identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateGoogleProviderResponse> UpdateGoogleProvider(global::Zitadel.Management.V1.UpdateGoogleProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add a new LDAP identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddLDAPProviderResponse> AddLDAPProvider(global::Zitadel.Management.V1.AddLDAPProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Change an existing LDAP identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateLDAPProviderResponse> UpdateLDAPProvider(global::Zitadel.Management.V1.UpdateLDAPProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add a new Apple identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddAppleProviderResponse> AddAppleProvider(global::Zitadel.Management.V1.AddAppleProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Change an existing Apple identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateAppleProviderResponse> UpdateAppleProvider(global::Zitadel.Management.V1.UpdateAppleProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add a new SAML identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.AddSAMLProviderResponse> AddSAMLProvider(global::Zitadel.Management.V1.AddSAMLProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Change an existing SAML identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateSAMLProviderResponse> UpdateSAMLProvider(global::Zitadel.Management.V1.UpdateSAMLProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Regenerate certificate for an existing SAML identity provider in the organization
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateResponse> RegenerateSAMLProviderCertificate(global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove an identity provider
      /// Will remove all linked providers of this configuration on the users
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.DeleteProviderResponse> DeleteProvider(global::Zitadel.Management.V1.DeleteProviderRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListActionsResponse> ListActions(global::Zitadel.Management.V1.ListActionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetActionResponse> GetAction(global::Zitadel.Management.V1.GetActionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.CreateActionResponse> CreateAction(global::Zitadel.Management.V1.CreateActionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.UpdateActionResponse> UpdateAction(global::Zitadel.Management.V1.UpdateActionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.DeactivateActionResponse> DeactivateAction(global::Zitadel.Management.V1.DeactivateActionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ReactivateActionResponse> ReactivateAction(global::Zitadel.Management.V1.ReactivateActionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.DeleteActionResponse> DeleteAction(global::Zitadel.Management.V1.DeleteActionRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListFlowTypesResponse> ListFlowTypes(global::Zitadel.Management.V1.ListFlowTypesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ListFlowTriggerTypesResponse> ListFlowTriggerTypes(global::Zitadel.Management.V1.ListFlowTriggerTypesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.GetFlowResponse> GetFlow(global::Zitadel.Management.V1.GetFlowRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.ClearFlowResponse> ClearFlow(global::Zitadel.Management.V1.ClearFlowRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Management.V1.SetTriggerActionsResponse> SetTriggerActions(global::Zitadel.Management.V1.SetTriggerActionsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ManagementService</summary>
    public partial class ManagementServiceClient : grpc::ClientBase<ManagementServiceClient>
    {
      /// <summary>Creates a new client for ManagementService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ManagementServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ManagementService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ManagementServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ManagementServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ManagementServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.HealthzResponse Healthz(global::Zitadel.Management.V1.HealthzRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Healthz(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.HealthzResponse Healthz(global::Zitadel.Management.V1.HealthzRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Healthz, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.HealthzResponse> HealthzAsync(global::Zitadel.Management.V1.HealthzRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return HealthzAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.HealthzResponse> HealthzAsync(global::Zitadel.Management.V1.HealthzRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Healthz, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetOIDCInformationResponse GetOIDCInformation(global::Zitadel.Management.V1.GetOIDCInformationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOIDCInformation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetOIDCInformationResponse GetOIDCInformation(global::Zitadel.Management.V1.GetOIDCInformationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOIDCInformation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetOIDCInformationResponse> GetOIDCInformationAsync(global::Zitadel.Management.V1.GetOIDCInformationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOIDCInformationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetOIDCInformationResponse> GetOIDCInformationAsync(global::Zitadel.Management.V1.GetOIDCInformationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOIDCInformation, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetIAMResponse GetIAM(global::Zitadel.Management.V1.GetIAMRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIAM(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetIAMResponse GetIAM(global::Zitadel.Management.V1.GetIAMRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetIAM, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetIAMResponse> GetIAMAsync(global::Zitadel.Management.V1.GetIAMRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIAMAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetIAMResponse> GetIAMAsync(global::Zitadel.Management.V1.GetIAMRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetIAM, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetSupportedLanguagesResponse GetSupportedLanguages(global::Zitadel.Management.V1.GetSupportedLanguagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSupportedLanguages(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetSupportedLanguagesResponse GetSupportedLanguages(global::Zitadel.Management.V1.GetSupportedLanguagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSupportedLanguages, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetSupportedLanguagesResponse> GetSupportedLanguagesAsync(global::Zitadel.Management.V1.GetSupportedLanguagesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSupportedLanguagesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetSupportedLanguagesResponse> GetSupportedLanguagesAsync(global::Zitadel.Management.V1.GetSupportedLanguagesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSupportedLanguages, null, options, request);
      }
      /// <summary>
      /// User by ID
      ///
      /// Deprecated: use [user service v2 ListUsers with InUserIDQuery](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Returns the full user object (human or machine) including the profile, email, etc.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetUserByIDResponse GetUserByID(global::Zitadel.Management.V1.GetUserByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// User by ID
      ///
      /// Deprecated: use [user service v2 ListUsers with InUserIDQuery](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Returns the full user object (human or machine) including the profile, email, etc.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetUserByIDResponse GetUserByID(global::Zitadel.Management.V1.GetUserByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserByID, null, options, request);
      }
      /// <summary>
      /// User by ID
      ///
      /// Deprecated: use [user service v2 ListUsers with InUserIDQuery](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Returns the full user object (human or machine) including the profile, email, etc.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetUserByIDResponse> GetUserByIDAsync(global::Zitadel.Management.V1.GetUserByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// User by ID
      ///
      /// Deprecated: use [user service v2 ListUsers with InUserIDQuery](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Returns the full user object (human or machine) including the profile, email, etc.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetUserByIDResponse> GetUserByIDAsync(global::Zitadel.Management.V1.GetUserByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserByID, null, options, request);
      }
      /// <summary>
      /// Get User by login name (globally)
      ///
      /// Deprecated: use [user service v2 ListUsers with LoginNameQuery](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Get a user by login name searched over all organizations. The request only returns data if the login name matches exactly.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetUserByLoginNameGlobalResponse GetUserByLoginNameGlobal(global::Zitadel.Management.V1.GetUserByLoginNameGlobalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserByLoginNameGlobal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get User by login name (globally)
      ///
      /// Deprecated: use [user service v2 ListUsers with LoginNameQuery](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Get a user by login name searched over all organizations. The request only returns data if the login name matches exactly.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetUserByLoginNameGlobalResponse GetUserByLoginNameGlobal(global::Zitadel.Management.V1.GetUserByLoginNameGlobalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserByLoginNameGlobal, null, options, request);
      }
      /// <summary>
      /// Get User by login name (globally)
      ///
      /// Deprecated: use [user service v2 ListUsers with LoginNameQuery](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Get a user by login name searched over all organizations. The request only returns data if the login name matches exactly.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetUserByLoginNameGlobalResponse> GetUserByLoginNameGlobalAsync(global::Zitadel.Management.V1.GetUserByLoginNameGlobalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserByLoginNameGlobalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get User by login name (globally)
      ///
      /// Deprecated: use [user service v2 ListUsers with LoginNameQuery](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Get a user by login name searched over all organizations. The request only returns data if the login name matches exactly.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetUserByLoginNameGlobalResponse> GetUserByLoginNameGlobalAsync(global::Zitadel.Management.V1.GetUserByLoginNameGlobalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserByLoginNameGlobal, null, options, request);
      }
      /// <summary>
      /// Search Users
      ///
      /// Deprecated: use [user service v2 ListUsers](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Search for users within an organization. By default, we will return users of your organization. Make sure to include a limit and sorting for pagination.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListUsersResponse ListUsers(global::Zitadel.Management.V1.ListUsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Users
      ///
      /// Deprecated: use [user service v2 ListUsers](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Search for users within an organization. By default, we will return users of your organization. Make sure to include a limit and sorting for pagination.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListUsersResponse ListUsers(global::Zitadel.Management.V1.ListUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListUsers, null, options, request);
      }
      /// <summary>
      /// Search Users
      ///
      /// Deprecated: use [user service v2 ListUsers](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Search for users within an organization. By default, we will return users of your organization. Make sure to include a limit and sorting for pagination.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListUsersResponse> ListUsersAsync(global::Zitadel.Management.V1.ListUsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Users
      ///
      /// Deprecated: use [user service v2 ListUsers](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Search for users within an organization. By default, we will return users of your organization. Make sure to include a limit and sorting for pagination.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListUsersResponse> ListUsersAsync(global::Zitadel.Management.V1.ListUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListUsers, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListUserChangesResponse ListUserChanges(global::Zitadel.Management.V1.ListUserChangesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUserChanges(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListUserChangesResponse ListUserChanges(global::Zitadel.Management.V1.ListUserChangesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListUserChanges, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListUserChangesResponse> ListUserChangesAsync(global::Zitadel.Management.V1.ListUserChangesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUserChangesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListUserChangesResponse> ListUserChangesAsync(global::Zitadel.Management.V1.ListUserChangesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListUserChanges, null, options, request);
      }
      /// <summary>
      /// Check for existing user
      ///
      /// Deprecated: use [user service v2 ListUsers](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead, is unique if no user returned.
      ///
      /// Returns if a user with the requested email or username is unique. So you can create the user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.IsUserUniqueResponse IsUserUnique(global::Zitadel.Management.V1.IsUserUniqueRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IsUserUnique(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Check for existing user
      ///
      /// Deprecated: use [user service v2 ListUsers](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead, is unique if no user returned.
      ///
      /// Returns if a user with the requested email or username is unique. So you can create the user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.IsUserUniqueResponse IsUserUnique(global::Zitadel.Management.V1.IsUserUniqueRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_IsUserUnique, null, options, request);
      }
      /// <summary>
      /// Check for existing user
      ///
      /// Deprecated: use [user service v2 ListUsers](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead, is unique if no user returned.
      ///
      /// Returns if a user with the requested email or username is unique. So you can create the user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.IsUserUniqueResponse> IsUserUniqueAsync(global::Zitadel.Management.V1.IsUserUniqueRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return IsUserUniqueAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Check for existing user
      ///
      /// Deprecated: use [user service v2 ListUsers](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead, is unique if no user returned.
      ///
      /// Returns if a user with the requested email or username is unique. So you can create the user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.IsUserUniqueResponse> IsUserUniqueAsync(global::Zitadel.Management.V1.IsUserUniqueRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_IsUserUnique, null, options, request);
      }
      /// <summary>
      /// Create User (Human)
      ///
      /// Deprecated: use [user service v2 CreateUser](apis/resources/user_service_v2/user-service-create-user.api.mdx) instead.
      ///
      /// Create a new user with the type human. The newly created user will get an initialization email if either the email address is not marked as verified or no password is set. If a password is set the user will not be requested to set a new one on the first login.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddHumanUserResponse AddHumanUser(global::Zitadel.Management.V1.AddHumanUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddHumanUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create User (Human)
      ///
      /// Deprecated: use [user service v2 CreateUser](apis/resources/user_service_v2/user-service-create-user.api.mdx) instead.
      ///
      /// Create a new user with the type human. The newly created user will get an initialization email if either the email address is not marked as verified or no password is set. If a password is set the user will not be requested to set a new one on the first login.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddHumanUserResponse AddHumanUser(global::Zitadel.Management.V1.AddHumanUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddHumanUser, null, options, request);
      }
      /// <summary>
      /// Create User (Human)
      ///
      /// Deprecated: use [user service v2 CreateUser](apis/resources/user_service_v2/user-service-create-user.api.mdx) instead.
      ///
      /// Create a new user with the type human. The newly created user will get an initialization email if either the email address is not marked as verified or no password is set. If a password is set the user will not be requested to set a new one on the first login.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddHumanUserResponse> AddHumanUserAsync(global::Zitadel.Management.V1.AddHumanUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddHumanUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create User (Human)
      ///
      /// Deprecated: use [user service v2 CreateUser](apis/resources/user_service_v2/user-service-create-user.api.mdx) instead.
      ///
      /// Create a new user with the type human. The newly created user will get an initialization email if either the email address is not marked as verified or no password is set. If a password is set the user will not be requested to set a new one on the first login.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddHumanUserResponse> AddHumanUserAsync(global::Zitadel.Management.V1.AddHumanUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddHumanUser, null, options, request);
      }
      /// <summary>
      /// Create/Import User (Human)
      ///
      /// Deprecated: use [user service v2 UpdateHumanUser](apis/resources/user_service_v2/user-service-update-human-user.api.mdx) instead.
      ///
      /// Create/import a new user with the type human. The newly created user will get an initialization email if either the email address is not marked as verified or no password is set. If a password is set the user will not be requested to set a new one on the first login.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ImportHumanUserResponse ImportHumanUser(global::Zitadel.Management.V1.ImportHumanUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportHumanUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create/Import User (Human)
      ///
      /// Deprecated: use [user service v2 UpdateHumanUser](apis/resources/user_service_v2/user-service-update-human-user.api.mdx) instead.
      ///
      /// Create/import a new user with the type human. The newly created user will get an initialization email if either the email address is not marked as verified or no password is set. If a password is set the user will not be requested to set a new one on the first login.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ImportHumanUserResponse ImportHumanUser(global::Zitadel.Management.V1.ImportHumanUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ImportHumanUser, null, options, request);
      }
      /// <summary>
      /// Create/Import User (Human)
      ///
      /// Deprecated: use [user service v2 UpdateHumanUser](apis/resources/user_service_v2/user-service-update-human-user.api.mdx) instead.
      ///
      /// Create/import a new user with the type human. The newly created user will get an initialization email if either the email address is not marked as verified or no password is set. If a password is set the user will not be requested to set a new one on the first login.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ImportHumanUserResponse> ImportHumanUserAsync(global::Zitadel.Management.V1.ImportHumanUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ImportHumanUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create/Import User (Human)
      ///
      /// Deprecated: use [user service v2 UpdateHumanUser](apis/resources/user_service_v2/user-service-update-human-user.api.mdx) instead.
      ///
      /// Create/import a new user with the type human. The newly created user will get an initialization email if either the email address is not marked as verified or no password is set. If a password is set the user will not be requested to set a new one on the first login.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ImportHumanUserResponse> ImportHumanUserAsync(global::Zitadel.Management.V1.ImportHumanUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ImportHumanUser, null, options, request);
      }
      /// <summary>
      /// Create User (Machine)
      ///
      /// Deprecated: use [user service v2 CreateUser](apis/resources/user_service_v2/user-service-create-user.api.mdx) instead.
      ///
      /// Create a new user with the type machine for your API, service or device. These users are used for non-interactive authentication flows.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddMachineUserResponse AddMachineUser(global::Zitadel.Management.V1.AddMachineUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddMachineUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create User (Machine)
      ///
      /// Deprecated: use [user service v2 CreateUser](apis/resources/user_service_v2/user-service-create-user.api.mdx) instead.
      ///
      /// Create a new user with the type machine for your API, service or device. These users are used for non-interactive authentication flows.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddMachineUserResponse AddMachineUser(global::Zitadel.Management.V1.AddMachineUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddMachineUser, null, options, request);
      }
      /// <summary>
      /// Create User (Machine)
      ///
      /// Deprecated: use [user service v2 CreateUser](apis/resources/user_service_v2/user-service-create-user.api.mdx) instead.
      ///
      /// Create a new user with the type machine for your API, service or device. These users are used for non-interactive authentication flows.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddMachineUserResponse> AddMachineUserAsync(global::Zitadel.Management.V1.AddMachineUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddMachineUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create User (Machine)
      ///
      /// Deprecated: use [user service v2 CreateUser](apis/resources/user_service_v2/user-service-create-user.api.mdx) instead.
      ///
      /// Create a new user with the type machine for your API, service or device. These users are used for non-interactive authentication flows.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddMachineUserResponse> AddMachineUserAsync(global::Zitadel.Management.V1.AddMachineUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddMachineUser, null, options, request);
      }
      /// <summary>
      /// Deactivate User
      ///
      /// Deprecated: use [user service v2 DeactivateUser](apis/resources/user_service_v2/user-service-deactivate-user.api.mdx) instead.
      ///
      /// The state of the user will be changed to 'deactivated'. The user will not be able to log in anymore.
      /// The endpoint returns an error if the user is already in the state 'deactivated'.
      /// Use deactivate user when the user should not be able to use the account anymore, but you still need access to the user data.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeactivateUserResponse DeactivateUser(global::Zitadel.Management.V1.DeactivateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivate User
      ///
      /// Deprecated: use [user service v2 DeactivateUser](apis/resources/user_service_v2/user-service-deactivate-user.api.mdx) instead.
      ///
      /// The state of the user will be changed to 'deactivated'. The user will not be able to log in anymore.
      /// The endpoint returns an error if the user is already in the state 'deactivated'.
      /// Use deactivate user when the user should not be able to use the account anymore, but you still need access to the user data.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeactivateUserResponse DeactivateUser(global::Zitadel.Management.V1.DeactivateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeactivateUser, null, options, request);
      }
      /// <summary>
      /// Deactivate User
      ///
      /// Deprecated: use [user service v2 DeactivateUser](apis/resources/user_service_v2/user-service-deactivate-user.api.mdx) instead.
      ///
      /// The state of the user will be changed to 'deactivated'. The user will not be able to log in anymore.
      /// The endpoint returns an error if the user is already in the state 'deactivated'.
      /// Use deactivate user when the user should not be able to use the account anymore, but you still need access to the user data.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeactivateUserResponse> DeactivateUserAsync(global::Zitadel.Management.V1.DeactivateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivate User
      ///
      /// Deprecated: use [user service v2 DeactivateUser](apis/resources/user_service_v2/user-service-deactivate-user.api.mdx) instead.
      ///
      /// The state of the user will be changed to 'deactivated'. The user will not be able to log in anymore.
      /// The endpoint returns an error if the user is already in the state 'deactivated'.
      /// Use deactivate user when the user should not be able to use the account anymore, but you still need access to the user data.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeactivateUserResponse> DeactivateUserAsync(global::Zitadel.Management.V1.DeactivateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeactivateUser, null, options, request);
      }
      /// <summary>
      /// Deactivate User
      ///
      /// Deprecated: use [user service v2 ReactivateUser](apis/resources/user_service_v2/user-service-reactivate-user.api.mdx) instead.
      ///
      /// Reactivate a user with the state 'deactivated'. The user will be able to log in again afterward.
      /// The endpoint returns an error if the user is not in the state 'deactivated'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ReactivateUserResponse ReactivateUser(global::Zitadel.Management.V1.ReactivateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivate User
      ///
      /// Deprecated: use [user service v2 ReactivateUser](apis/resources/user_service_v2/user-service-reactivate-user.api.mdx) instead.
      ///
      /// Reactivate a user with the state 'deactivated'. The user will be able to log in again afterward.
      /// The endpoint returns an error if the user is not in the state 'deactivated'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ReactivateUserResponse ReactivateUser(global::Zitadel.Management.V1.ReactivateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReactivateUser, null, options, request);
      }
      /// <summary>
      /// Deactivate User
      ///
      /// Deprecated: use [user service v2 ReactivateUser](apis/resources/user_service_v2/user-service-reactivate-user.api.mdx) instead.
      ///
      /// Reactivate a user with the state 'deactivated'. The user will be able to log in again afterward.
      /// The endpoint returns an error if the user is not in the state 'deactivated'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ReactivateUserResponse> ReactivateUserAsync(global::Zitadel.Management.V1.ReactivateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivate User
      ///
      /// Deprecated: use [user service v2 ReactivateUser](apis/resources/user_service_v2/user-service-reactivate-user.api.mdx) instead.
      ///
      /// Reactivate a user with the state 'deactivated'. The user will be able to log in again afterward.
      /// The endpoint returns an error if the user is not in the state 'deactivated'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ReactivateUserResponse> ReactivateUserAsync(global::Zitadel.Management.V1.ReactivateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReactivateUser, null, options, request);
      }
      /// <summary>
      /// Lock User
      ///
      /// Deprecated: use [user service v2 LockUser](apis/resources/user_service_v2/user-service-lock-user.api.mdx) instead.
      ///
      /// The state of the user will be changed to 'locked'. The user will not be able to log in anymore.
      /// The endpoint returns an error if the user is already in the state 'locked'.
      /// Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.LockUserResponse LockUser(global::Zitadel.Management.V1.LockUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LockUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lock User
      ///
      /// Deprecated: use [user service v2 LockUser](apis/resources/user_service_v2/user-service-lock-user.api.mdx) instead.
      ///
      /// The state of the user will be changed to 'locked'. The user will not be able to log in anymore.
      /// The endpoint returns an error if the user is already in the state 'locked'.
      /// Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.LockUserResponse LockUser(global::Zitadel.Management.V1.LockUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LockUser, null, options, request);
      }
      /// <summary>
      /// Lock User
      ///
      /// Deprecated: use [user service v2 LockUser](apis/resources/user_service_v2/user-service-lock-user.api.mdx) instead.
      ///
      /// The state of the user will be changed to 'locked'. The user will not be able to log in anymore.
      /// The endpoint returns an error if the user is already in the state 'locked'.
      /// Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.LockUserResponse> LockUserAsync(global::Zitadel.Management.V1.LockUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LockUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lock User
      ///
      /// Deprecated: use [user service v2 LockUser](apis/resources/user_service_v2/user-service-lock-user.api.mdx) instead.
      ///
      /// The state of the user will be changed to 'locked'. The user will not be able to log in anymore.
      /// The endpoint returns an error if the user is already in the state 'locked'.
      /// Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.LockUserResponse> LockUserAsync(global::Zitadel.Management.V1.LockUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LockUser, null, options, request);
      }
      /// <summary>
      /// Unlock User
      ///
      /// Deprecated: use [user service v2 UnlockUser](apis/resources/user_service_v2/user-service-unlock-user.api.mdx) instead.
      ///
      /// Unlock a user with the state 'locked'. The user will be able to log in again afterward.
      /// The endpoint returns an error if the user is not in the state 'locked'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UnlockUserResponse UnlockUser(global::Zitadel.Management.V1.UnlockUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnlockUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unlock User
      ///
      /// Deprecated: use [user service v2 UnlockUser](apis/resources/user_service_v2/user-service-unlock-user.api.mdx) instead.
      ///
      /// Unlock a user with the state 'locked'. The user will be able to log in again afterward.
      /// The endpoint returns an error if the user is not in the state 'locked'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UnlockUserResponse UnlockUser(global::Zitadel.Management.V1.UnlockUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnlockUser, null, options, request);
      }
      /// <summary>
      /// Unlock User
      ///
      /// Deprecated: use [user service v2 UnlockUser](apis/resources/user_service_v2/user-service-unlock-user.api.mdx) instead.
      ///
      /// Unlock a user with the state 'locked'. The user will be able to log in again afterward.
      /// The endpoint returns an error if the user is not in the state 'locked'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UnlockUserResponse> UnlockUserAsync(global::Zitadel.Management.V1.UnlockUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnlockUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unlock User
      ///
      /// Deprecated: use [user service v2 UnlockUser](apis/resources/user_service_v2/user-service-unlock-user.api.mdx) instead.
      ///
      /// Unlock a user with the state 'locked'. The user will be able to log in again afterward.
      /// The endpoint returns an error if the user is not in the state 'locked'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UnlockUserResponse> UnlockUserAsync(global::Zitadel.Management.V1.UnlockUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnlockUser, null, options, request);
      }
      /// <summary>
      /// Unlock User
      ///
      /// Deprecated: use [user service v2 DeleteUser](apis/resources/user_service_v2/user-service-delete-user.api.mdx) instead.
      ///
      /// The state of the user will be changed to 'deleted'. The user will not be able to log in anymore. Endpoints requesting this user will return an error 'User not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveUserResponse RemoveUser(global::Zitadel.Management.V1.RemoveUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unlock User
      ///
      /// Deprecated: use [user service v2 DeleteUser](apis/resources/user_service_v2/user-service-delete-user.api.mdx) instead.
      ///
      /// The state of the user will be changed to 'deleted'. The user will not be able to log in anymore. Endpoints requesting this user will return an error 'User not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveUserResponse RemoveUser(global::Zitadel.Management.V1.RemoveUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveUser, null, options, request);
      }
      /// <summary>
      /// Unlock User
      ///
      /// Deprecated: use [user service v2 DeleteUser](apis/resources/user_service_v2/user-service-delete-user.api.mdx) instead.
      ///
      /// The state of the user will be changed to 'deleted'. The user will not be able to log in anymore. Endpoints requesting this user will return an error 'User not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveUserResponse> RemoveUserAsync(global::Zitadel.Management.V1.RemoveUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unlock User
      ///
      /// Deprecated: use [user service v2 DeleteUser](apis/resources/user_service_v2/user-service-delete-user.api.mdx) instead.
      ///
      /// The state of the user will be changed to 'deleted'. The user will not be able to log in anymore. Endpoints requesting this user will return an error 'User not found.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveUserResponse> RemoveUserAsync(global::Zitadel.Management.V1.RemoveUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveUser, null, options, request);
      }
      /// <summary>
      /// Change user name
      ///
      /// Deprecated: use [user service v2 UpdateUser](apis/resources/user_service_v2/user-service-update-user.api.mdx) instead.
      ///
      /// Change the username of the user. Be aware that the user has to log in with the newly added username afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateUserNameResponse UpdateUserName(global::Zitadel.Management.V1.UpdateUserNameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUserName(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change user name
      ///
      /// Deprecated: use [user service v2 UpdateUser](apis/resources/user_service_v2/user-service-update-user.api.mdx) instead.
      ///
      /// Change the username of the user. Be aware that the user has to log in with the newly added username afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateUserNameResponse UpdateUserName(global::Zitadel.Management.V1.UpdateUserNameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateUserName, null, options, request);
      }
      /// <summary>
      /// Change user name
      ///
      /// Deprecated: use [user service v2 UpdateUser](apis/resources/user_service_v2/user-service-update-user.api.mdx) instead.
      ///
      /// Change the username of the user. Be aware that the user has to log in with the newly added username afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateUserNameResponse> UpdateUserNameAsync(global::Zitadel.Management.V1.UpdateUserNameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUserNameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change user name
      ///
      /// Deprecated: use [user service v2 UpdateUser](apis/resources/user_service_v2/user-service-update-user.api.mdx) instead.
      ///
      /// Change the username of the user. Be aware that the user has to log in with the newly added username afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateUserNameResponse> UpdateUserNameAsync(global::Zitadel.Management.V1.UpdateUserNameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateUserName, null, options, request);
      }
      /// <summary>
      /// Set User Metadata
      ///
      /// Deprecated: use [SetUserMetadata](apis/resources/user_service_v2/user-service-set-user-metadata.api.mdx) instead.
      ///
      /// This endpoint either adds or updates a metadata value for the requested key. Make sure the value is base64 encoded.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetUserMetadataResponse SetUserMetadata(global::Zitadel.Management.V1.SetUserMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetUserMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set User Metadata
      ///
      /// Deprecated: use [SetUserMetadata](apis/resources/user_service_v2/user-service-set-user-metadata.api.mdx) instead.
      ///
      /// This endpoint either adds or updates a metadata value for the requested key. Make sure the value is base64 encoded.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetUserMetadataResponse SetUserMetadata(global::Zitadel.Management.V1.SetUserMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetUserMetadata, null, options, request);
      }
      /// <summary>
      /// Set User Metadata
      ///
      /// Deprecated: use [SetUserMetadata](apis/resources/user_service_v2/user-service-set-user-metadata.api.mdx) instead.
      ///
      /// This endpoint either adds or updates a metadata value for the requested key. Make sure the value is base64 encoded.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetUserMetadataResponse> SetUserMetadataAsync(global::Zitadel.Management.V1.SetUserMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetUserMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set User Metadata
      ///
      /// Deprecated: use [SetUserMetadata](apis/resources/user_service_v2/user-service-set-user-metadata.api.mdx) instead.
      ///
      /// This endpoint either adds or updates a metadata value for the requested key. Make sure the value is base64 encoded.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetUserMetadataResponse> SetUserMetadataAsync(global::Zitadel.Management.V1.SetUserMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetUserMetadata, null, options, request);
      }
      /// <summary>
      /// Bulk Set User Metadata
      ///
      /// Deprecated: use [SetUserMetadata](apis/resources/user_service_v2/user-service-set-user-metadata.api.mdx) instead.
      ///
      /// Add or update multiple metadata values for a user. Make sure the values are base64 encoded.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.BulkSetUserMetadataResponse BulkSetUserMetadata(global::Zitadel.Management.V1.BulkSetUserMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkSetUserMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bulk Set User Metadata
      ///
      /// Deprecated: use [SetUserMetadata](apis/resources/user_service_v2/user-service-set-user-metadata.api.mdx) instead.
      ///
      /// Add or update multiple metadata values for a user. Make sure the values are base64 encoded.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.BulkSetUserMetadataResponse BulkSetUserMetadata(global::Zitadel.Management.V1.BulkSetUserMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BulkSetUserMetadata, null, options, request);
      }
      /// <summary>
      /// Bulk Set User Metadata
      ///
      /// Deprecated: use [SetUserMetadata](apis/resources/user_service_v2/user-service-set-user-metadata.api.mdx) instead.
      ///
      /// Add or update multiple metadata values for a user. Make sure the values are base64 encoded.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.BulkSetUserMetadataResponse> BulkSetUserMetadataAsync(global::Zitadel.Management.V1.BulkSetUserMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkSetUserMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bulk Set User Metadata
      ///
      /// Deprecated: use [SetUserMetadata](apis/resources/user_service_v2/user-service-set-user-metadata.api.mdx) instead.
      ///
      /// Add or update multiple metadata values for a user. Make sure the values are base64 encoded.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.BulkSetUserMetadataResponse> BulkSetUserMetadataAsync(global::Zitadel.Management.V1.BulkSetUserMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BulkSetUserMetadata, null, options, request);
      }
      /// <summary>
      /// Search User Metadata
      ///
      /// Deprecated: use [ListUserMetadata](apis/resources/user_service_v2/user-service-list-user-metadata.api.mdx) instead.
      ///
      /// Get the metadata of a user filtered by your query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListUserMetadataResponse ListUserMetadata(global::Zitadel.Management.V1.ListUserMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUserMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search User Metadata
      ///
      /// Deprecated: use [ListUserMetadata](apis/resources/user_service_v2/user-service-list-user-metadata.api.mdx) instead.
      ///
      /// Get the metadata of a user filtered by your query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListUserMetadataResponse ListUserMetadata(global::Zitadel.Management.V1.ListUserMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListUserMetadata, null, options, request);
      }
      /// <summary>
      /// Search User Metadata
      ///
      /// Deprecated: use [ListUserMetadata](apis/resources/user_service_v2/user-service-list-user-metadata.api.mdx) instead.
      ///
      /// Get the metadata of a user filtered by your query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListUserMetadataResponse> ListUserMetadataAsync(global::Zitadel.Management.V1.ListUserMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUserMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search User Metadata
      ///
      /// Deprecated: use [ListUserMetadata](apis/resources/user_service_v2/user-service-list-user-metadata.api.mdx) instead.
      ///
      /// Get the metadata of a user filtered by your query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListUserMetadataResponse> ListUserMetadataAsync(global::Zitadel.Management.V1.ListUserMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListUserMetadata, null, options, request);
      }
      /// <summary>
      /// Get User Metadata By Key
      ///
      /// Deprecated: use [ListUserMetadata](apis/resources/user_service_v2/user-service-list-user-metadata.api.mdx) instead.
      ///
      /// Get a metadata object from a user by a specific key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetUserMetadataResponse GetUserMetadata(global::Zitadel.Management.V1.GetUserMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get User Metadata By Key
      ///
      /// Deprecated: use [ListUserMetadata](apis/resources/user_service_v2/user-service-list-user-metadata.api.mdx) instead.
      ///
      /// Get a metadata object from a user by a specific key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetUserMetadataResponse GetUserMetadata(global::Zitadel.Management.V1.GetUserMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserMetadata, null, options, request);
      }
      /// <summary>
      /// Get User Metadata By Key
      ///
      /// Deprecated: use [ListUserMetadata](apis/resources/user_service_v2/user-service-list-user-metadata.api.mdx) instead.
      ///
      /// Get a metadata object from a user by a specific key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetUserMetadataResponse> GetUserMetadataAsync(global::Zitadel.Management.V1.GetUserMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get User Metadata By Key
      ///
      /// Deprecated: use [ListUserMetadata](apis/resources/user_service_v2/user-service-list-user-metadata.api.mdx) instead.
      ///
      /// Get a metadata object from a user by a specific key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetUserMetadataResponse> GetUserMetadataAsync(global::Zitadel.Management.V1.GetUserMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserMetadata, null, options, request);
      }
      /// <summary>
      /// Delete User Metadata By Key
      ///
      /// Deprecated: use [DeleteUserMetadata](apis/resources/user_service_v2/user-service-delete-user-metadata.api.mdx) instead.
      ///
      /// Get a metadata object from a user by a specific key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveUserMetadataResponse RemoveUserMetadata(global::Zitadel.Management.V1.RemoveUserMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveUserMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete User Metadata By Key
      ///
      /// Deprecated: use [DeleteUserMetadata](apis/resources/user_service_v2/user-service-delete-user-metadata.api.mdx) instead.
      ///
      /// Get a metadata object from a user by a specific key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveUserMetadataResponse RemoveUserMetadata(global::Zitadel.Management.V1.RemoveUserMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveUserMetadata, null, options, request);
      }
      /// <summary>
      /// Delete User Metadata By Key
      ///
      /// Deprecated: use [DeleteUserMetadata](apis/resources/user_service_v2/user-service-delete-user-metadata.api.mdx) instead.
      ///
      /// Get a metadata object from a user by a specific key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveUserMetadataResponse> RemoveUserMetadataAsync(global::Zitadel.Management.V1.RemoveUserMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveUserMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete User Metadata By Key
      ///
      /// Deprecated: use [DeleteUserMetadata](apis/resources/user_service_v2/user-service-delete-user-metadata.api.mdx) instead.
      ///
      /// Get a metadata object from a user by a specific key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveUserMetadataResponse> RemoveUserMetadataAsync(global::Zitadel.Management.V1.RemoveUserMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveUserMetadata, null, options, request);
      }
      /// <summary>
      /// Delete User Metadata By Key
      ///
      /// Deprecated: use [DeleteUserMetadata](apis/resources/user_service_v2/user-service-delete-user-metadata.api.mdx) instead.
      ///
      /// Remove a list of metadata objects from a user with a list of keys.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.BulkRemoveUserMetadataResponse BulkRemoveUserMetadata(global::Zitadel.Management.V1.BulkRemoveUserMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkRemoveUserMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete User Metadata By Key
      ///
      /// Deprecated: use [DeleteUserMetadata](apis/resources/user_service_v2/user-service-delete-user-metadata.api.mdx) instead.
      ///
      /// Remove a list of metadata objects from a user with a list of keys.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.BulkRemoveUserMetadataResponse BulkRemoveUserMetadata(global::Zitadel.Management.V1.BulkRemoveUserMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BulkRemoveUserMetadata, null, options, request);
      }
      /// <summary>
      /// Delete User Metadata By Key
      ///
      /// Deprecated: use [DeleteUserMetadata](apis/resources/user_service_v2/user-service-delete-user-metadata.api.mdx) instead.
      ///
      /// Remove a list of metadata objects from a user with a list of keys.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.BulkRemoveUserMetadataResponse> BulkRemoveUserMetadataAsync(global::Zitadel.Management.V1.BulkRemoveUserMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkRemoveUserMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete User Metadata By Key
      ///
      /// Deprecated: use [DeleteUserMetadata](apis/resources/user_service_v2/user-service-delete-user-metadata.api.mdx) instead.
      ///
      /// Remove a list of metadata objects from a user with a list of keys.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.BulkRemoveUserMetadataResponse> BulkRemoveUserMetadataAsync(global::Zitadel.Management.V1.BulkRemoveUserMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BulkRemoveUserMetadata, null, options, request);
      }
      /// <summary>
      /// Get User Profile (Human)
      ///
      /// Deprecated: use [user service v2 GetUserByID](apis/resources/user_service_v2/user-service-get-user-by-id.api.mdx) instead.
      ///
      /// Get basic information like first_name and last_name of a user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetHumanProfileResponse GetHumanProfile(global::Zitadel.Management.V1.GetHumanProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHumanProfile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get User Profile (Human)
      ///
      /// Deprecated: use [user service v2 GetUserByID](apis/resources/user_service_v2/user-service-get-user-by-id.api.mdx) instead.
      ///
      /// Get basic information like first_name and last_name of a user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetHumanProfileResponse GetHumanProfile(global::Zitadel.Management.V1.GetHumanProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetHumanProfile, null, options, request);
      }
      /// <summary>
      /// Get User Profile (Human)
      ///
      /// Deprecated: use [user service v2 GetUserByID](apis/resources/user_service_v2/user-service-get-user-by-id.api.mdx) instead.
      ///
      /// Get basic information like first_name and last_name of a user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetHumanProfileResponse> GetHumanProfileAsync(global::Zitadel.Management.V1.GetHumanProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHumanProfileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get User Profile (Human)
      ///
      /// Deprecated: use [user service v2 GetUserByID](apis/resources/user_service_v2/user-service-get-user-by-id.api.mdx) instead.
      ///
      /// Get basic information like first_name and last_name of a user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetHumanProfileResponse> GetHumanProfileAsync(global::Zitadel.Management.V1.GetHumanProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetHumanProfile, null, options, request);
      }
      /// <summary>
      /// Update User Profile (Human)
      ///
      /// Deprecated: use [user service v2 UpdateHumanUser](apis/resources/user_service_v2/user-service-update-human-user.api.mdx) instead.
      ///
      /// Update the profile information from a user. The profile includes basic information like first_name and last_name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateHumanProfileResponse UpdateHumanProfile(global::Zitadel.Management.V1.UpdateHumanProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateHumanProfile(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update User Profile (Human)
      ///
      /// Deprecated: use [user service v2 UpdateHumanUser](apis/resources/user_service_v2/user-service-update-human-user.api.mdx) instead.
      ///
      /// Update the profile information from a user. The profile includes basic information like first_name and last_name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateHumanProfileResponse UpdateHumanProfile(global::Zitadel.Management.V1.UpdateHumanProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateHumanProfile, null, options, request);
      }
      /// <summary>
      /// Update User Profile (Human)
      ///
      /// Deprecated: use [user service v2 UpdateHumanUser](apis/resources/user_service_v2/user-service-update-human-user.api.mdx) instead.
      ///
      /// Update the profile information from a user. The profile includes basic information like first_name and last_name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateHumanProfileResponse> UpdateHumanProfileAsync(global::Zitadel.Management.V1.UpdateHumanProfileRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateHumanProfileAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update User Profile (Human)
      ///
      /// Deprecated: use [user service v2 UpdateHumanUser](apis/resources/user_service_v2/user-service-update-human-user.api.mdx) instead.
      ///
      /// Update the profile information from a user. The profile includes basic information like first_name and last_name.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateHumanProfileResponse> UpdateHumanProfileAsync(global::Zitadel.Management.V1.UpdateHumanProfileRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateHumanProfile, null, options, request);
      }
      /// <summary>
      /// Get User Email (Human)
      ///
      /// Deprecated: use [user service v2 GetUserByID](apis/resources/user_service_v2/user-service-get-user-by-id.api.mdx) instead.
      ///
      /// Get the email address and the verification state of the address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetHumanEmailResponse GetHumanEmail(global::Zitadel.Management.V1.GetHumanEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHumanEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get User Email (Human)
      ///
      /// Deprecated: use [user service v2 GetUserByID](apis/resources/user_service_v2/user-service-get-user-by-id.api.mdx) instead.
      ///
      /// Get the email address and the verification state of the address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetHumanEmailResponse GetHumanEmail(global::Zitadel.Management.V1.GetHumanEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetHumanEmail, null, options, request);
      }
      /// <summary>
      /// Get User Email (Human)
      ///
      /// Deprecated: use [user service v2 GetUserByID](apis/resources/user_service_v2/user-service-get-user-by-id.api.mdx) instead.
      ///
      /// Get the email address and the verification state of the address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetHumanEmailResponse> GetHumanEmailAsync(global::Zitadel.Management.V1.GetHumanEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHumanEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get User Email (Human)
      ///
      /// Deprecated: use [user service v2 GetUserByID](apis/resources/user_service_v2/user-service-get-user-by-id.api.mdx) instead.
      ///
      /// Get the email address and the verification state of the address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetHumanEmailResponse> GetHumanEmailAsync(global::Zitadel.Management.V1.GetHumanEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetHumanEmail, null, options, request);
      }
      /// <summary>
      /// Update User Email (Human)
      ///
      /// Deprecated: use [user service v2 SetEmail](apis/resources/user_service_v2/user-service-set-email.api.mdx) instead.
      ///
      /// Change the email address of a user. If the state is set to not verified, the user will get a verification email.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateHumanEmailResponse UpdateHumanEmail(global::Zitadel.Management.V1.UpdateHumanEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateHumanEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update User Email (Human)
      ///
      /// Deprecated: use [user service v2 SetEmail](apis/resources/user_service_v2/user-service-set-email.api.mdx) instead.
      ///
      /// Change the email address of a user. If the state is set to not verified, the user will get a verification email.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateHumanEmailResponse UpdateHumanEmail(global::Zitadel.Management.V1.UpdateHumanEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateHumanEmail, null, options, request);
      }
      /// <summary>
      /// Update User Email (Human)
      ///
      /// Deprecated: use [user service v2 SetEmail](apis/resources/user_service_v2/user-service-set-email.api.mdx) instead.
      ///
      /// Change the email address of a user. If the state is set to not verified, the user will get a verification email.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateHumanEmailResponse> UpdateHumanEmailAsync(global::Zitadel.Management.V1.UpdateHumanEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateHumanEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update User Email (Human)
      ///
      /// Deprecated: use [user service v2 SetEmail](apis/resources/user_service_v2/user-service-set-email.api.mdx) instead.
      ///
      /// Change the email address of a user. If the state is set to not verified, the user will get a verification email.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateHumanEmailResponse> UpdateHumanEmailAsync(global::Zitadel.Management.V1.UpdateHumanEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateHumanEmail, null, options, request);
      }
      /// <summary>
      /// Resend User Initialization Email
      ///
      /// Deprecated: not used anymore in user state so will be removed.
      ///
      /// A newly created user will get an initialization email to verify the email address and set a password. Resend the email with this request to the user's email address, or a newly added address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResendHumanInitializationResponse ResendHumanInitialization(global::Zitadel.Management.V1.ResendHumanInitializationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendHumanInitialization(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resend User Initialization Email
      ///
      /// Deprecated: not used anymore in user state so will be removed.
      ///
      /// A newly created user will get an initialization email to verify the email address and set a password. Resend the email with this request to the user's email address, or a newly added address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResendHumanInitializationResponse ResendHumanInitialization(global::Zitadel.Management.V1.ResendHumanInitializationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResendHumanInitialization, null, options, request);
      }
      /// <summary>
      /// Resend User Initialization Email
      ///
      /// Deprecated: not used anymore in user state so will be removed.
      ///
      /// A newly created user will get an initialization email to verify the email address and set a password. Resend the email with this request to the user's email address, or a newly added address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResendHumanInitializationResponse> ResendHumanInitializationAsync(global::Zitadel.Management.V1.ResendHumanInitializationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendHumanInitializationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resend User Initialization Email
      ///
      /// Deprecated: not used anymore in user state so will be removed.
      ///
      /// A newly created user will get an initialization email to verify the email address and set a password. Resend the email with this request to the user's email address, or a newly added address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResendHumanInitializationResponse> ResendHumanInitializationAsync(global::Zitadel.Management.V1.ResendHumanInitializationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResendHumanInitialization, null, options, request);
      }
      /// <summary>
      /// Resend User Email Verification
      ///
      /// Deprecated: use [user service v2 ResendEmailCode](apis/resources/user_service_v2/user-service-resend-email-code.api.mdx) instead.
      ///
      /// Resend the email verification notification to the given email address of the user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResendHumanEmailVerificationResponse ResendHumanEmailVerification(global::Zitadel.Management.V1.ResendHumanEmailVerificationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendHumanEmailVerification(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resend User Email Verification
      ///
      /// Deprecated: use [user service v2 ResendEmailCode](apis/resources/user_service_v2/user-service-resend-email-code.api.mdx) instead.
      ///
      /// Resend the email verification notification to the given email address of the user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResendHumanEmailVerificationResponse ResendHumanEmailVerification(global::Zitadel.Management.V1.ResendHumanEmailVerificationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResendHumanEmailVerification, null, options, request);
      }
      /// <summary>
      /// Resend User Email Verification
      ///
      /// Deprecated: use [user service v2 ResendEmailCode](apis/resources/user_service_v2/user-service-resend-email-code.api.mdx) instead.
      ///
      /// Resend the email verification notification to the given email address of the user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResendHumanEmailVerificationResponse> ResendHumanEmailVerificationAsync(global::Zitadel.Management.V1.ResendHumanEmailVerificationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendHumanEmailVerificationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resend User Email Verification
      ///
      /// Deprecated: use [user service v2 ResendEmailCode](apis/resources/user_service_v2/user-service-resend-email-code.api.mdx) instead.
      ///
      /// Resend the email verification notification to the given email address of the user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResendHumanEmailVerificationResponse> ResendHumanEmailVerificationAsync(global::Zitadel.Management.V1.ResendHumanEmailVerificationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResendHumanEmailVerification, null, options, request);
      }
      /// <summary>
      /// Get User Phone (Human)
      ///
      /// Deprecated: use [user service v2 GetUserByID](apis/resources/user_service_v2/user-service-get-user-by-id.api.mdx) instead.
      ///
      /// Get the phone number and the verification state of the number. The phone number is only for informational purposes and to send messages, not for Authentication (2FA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetHumanPhoneResponse GetHumanPhone(global::Zitadel.Management.V1.GetHumanPhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHumanPhone(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get User Phone (Human)
      ///
      /// Deprecated: use [user service v2 GetUserByID](apis/resources/user_service_v2/user-service-get-user-by-id.api.mdx) instead.
      ///
      /// Get the phone number and the verification state of the number. The phone number is only for informational purposes and to send messages, not for Authentication (2FA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetHumanPhoneResponse GetHumanPhone(global::Zitadel.Management.V1.GetHumanPhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetHumanPhone, null, options, request);
      }
      /// <summary>
      /// Get User Phone (Human)
      ///
      /// Deprecated: use [user service v2 GetUserByID](apis/resources/user_service_v2/user-service-get-user-by-id.api.mdx) instead.
      ///
      /// Get the phone number and the verification state of the number. The phone number is only for informational purposes and to send messages, not for Authentication (2FA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetHumanPhoneResponse> GetHumanPhoneAsync(global::Zitadel.Management.V1.GetHumanPhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetHumanPhoneAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get User Phone (Human)
      ///
      /// Deprecated: use [user service v2 GetUserByID](apis/resources/user_service_v2/user-service-get-user-by-id.api.mdx) instead.
      ///
      /// Get the phone number and the verification state of the number. The phone number is only for informational purposes and to send messages, not for Authentication (2FA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetHumanPhoneResponse> GetHumanPhoneAsync(global::Zitadel.Management.V1.GetHumanPhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetHumanPhone, null, options, request);
      }
      /// <summary>
      /// Update User Phone (Human)
      ///
      /// Deprecated: use [user service v2 UpdateUser](apis/resources/user_service_v2/user-service-update-user.api.mdx) instead.
      ///
      /// Change the phone number of a user. If the state is set to not verified, the user will get an SMS to verify (if a notification provider is configured). The phone number is only for informational purposes and to send messages, not for Authentication (2FA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateHumanPhoneResponse UpdateHumanPhone(global::Zitadel.Management.V1.UpdateHumanPhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateHumanPhone(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update User Phone (Human)
      ///
      /// Deprecated: use [user service v2 UpdateUser](apis/resources/user_service_v2/user-service-update-user.api.mdx) instead.
      ///
      /// Change the phone number of a user. If the state is set to not verified, the user will get an SMS to verify (if a notification provider is configured). The phone number is only for informational purposes and to send messages, not for Authentication (2FA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateHumanPhoneResponse UpdateHumanPhone(global::Zitadel.Management.V1.UpdateHumanPhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateHumanPhone, null, options, request);
      }
      /// <summary>
      /// Update User Phone (Human)
      ///
      /// Deprecated: use [user service v2 UpdateUser](apis/resources/user_service_v2/user-service-update-user.api.mdx) instead.
      ///
      /// Change the phone number of a user. If the state is set to not verified, the user will get an SMS to verify (if a notification provider is configured). The phone number is only for informational purposes and to send messages, not for Authentication (2FA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateHumanPhoneResponse> UpdateHumanPhoneAsync(global::Zitadel.Management.V1.UpdateHumanPhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateHumanPhoneAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update User Phone (Human)
      ///
      /// Deprecated: use [user service v2 UpdateUser](apis/resources/user_service_v2/user-service-update-user.api.mdx) instead.
      ///
      /// Change the phone number of a user. If the state is set to not verified, the user will get an SMS to verify (if a notification provider is configured). The phone number is only for informational purposes and to send messages, not for Authentication (2FA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateHumanPhoneResponse> UpdateHumanPhoneAsync(global::Zitadel.Management.V1.UpdateHumanPhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateHumanPhone, null, options, request);
      }
      /// <summary>
      /// Remove User Phone (Human)
      ///
      /// Deprecated: use user service v2 [user service v2 SetPhone](apis/resources/user_service_v2/user-service-set-phone.api.mdx) instead.
      ///
      /// Remove the configured phone number of a user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveHumanPhoneResponse RemoveHumanPhone(global::Zitadel.Management.V1.RemoveHumanPhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveHumanPhone(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove User Phone (Human)
      ///
      /// Deprecated: use user service v2 [user service v2 SetPhone](apis/resources/user_service_v2/user-service-set-phone.api.mdx) instead.
      ///
      /// Remove the configured phone number of a user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveHumanPhoneResponse RemoveHumanPhone(global::Zitadel.Management.V1.RemoveHumanPhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveHumanPhone, null, options, request);
      }
      /// <summary>
      /// Remove User Phone (Human)
      ///
      /// Deprecated: use user service v2 [user service v2 SetPhone](apis/resources/user_service_v2/user-service-set-phone.api.mdx) instead.
      ///
      /// Remove the configured phone number of a user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveHumanPhoneResponse> RemoveHumanPhoneAsync(global::Zitadel.Management.V1.RemoveHumanPhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveHumanPhoneAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove User Phone (Human)
      ///
      /// Deprecated: use user service v2 [user service v2 SetPhone](apis/resources/user_service_v2/user-service-set-phone.api.mdx) instead.
      ///
      /// Remove the configured phone number of a user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveHumanPhoneResponse> RemoveHumanPhoneAsync(global::Zitadel.Management.V1.RemoveHumanPhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveHumanPhone, null, options, request);
      }
      /// <summary>
      /// Resend User Phone Verification
      ///
      /// Deprecated: use user service v2 [user service v2 ResendPhoneCode](apis/resources/user_service_v2/user-service-resend-phone-code.api.mdx) instead.
      ///
      /// Resend the notification for the verification of the phone number, to the number stored on the user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResendHumanPhoneVerificationResponse ResendHumanPhoneVerification(global::Zitadel.Management.V1.ResendHumanPhoneVerificationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendHumanPhoneVerification(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resend User Phone Verification
      ///
      /// Deprecated: use user service v2 [user service v2 ResendPhoneCode](apis/resources/user_service_v2/user-service-resend-phone-code.api.mdx) instead.
      ///
      /// Resend the notification for the verification of the phone number, to the number stored on the user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResendHumanPhoneVerificationResponse ResendHumanPhoneVerification(global::Zitadel.Management.V1.ResendHumanPhoneVerificationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResendHumanPhoneVerification, null, options, request);
      }
      /// <summary>
      /// Resend User Phone Verification
      ///
      /// Deprecated: use user service v2 [user service v2 ResendPhoneCode](apis/resources/user_service_v2/user-service-resend-phone-code.api.mdx) instead.
      ///
      /// Resend the notification for the verification of the phone number, to the number stored on the user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResendHumanPhoneVerificationResponse> ResendHumanPhoneVerificationAsync(global::Zitadel.Management.V1.ResendHumanPhoneVerificationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendHumanPhoneVerificationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resend User Phone Verification
      ///
      /// Deprecated: use user service v2 [user service v2 ResendPhoneCode](apis/resources/user_service_v2/user-service-resend-phone-code.api.mdx) instead.
      ///
      /// Resend the notification for the verification of the phone number, to the number stored on the user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResendHumanPhoneVerificationResponse> ResendHumanPhoneVerificationAsync(global::Zitadel.Management.V1.ResendHumanPhoneVerificationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResendHumanPhoneVerification, null, options, request);
      }
      /// <summary>
      /// Delete User Avatar (Human)
      ///
      /// Removes the avatar that is currently set on the user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveHumanAvatarResponse RemoveHumanAvatar(global::Zitadel.Management.V1.RemoveHumanAvatarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveHumanAvatar(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete User Avatar (Human)
      ///
      /// Removes the avatar that is currently set on the user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveHumanAvatarResponse RemoveHumanAvatar(global::Zitadel.Management.V1.RemoveHumanAvatarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveHumanAvatar, null, options, request);
      }
      /// <summary>
      /// Delete User Avatar (Human)
      ///
      /// Removes the avatar that is currently set on the user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveHumanAvatarResponse> RemoveHumanAvatarAsync(global::Zitadel.Management.V1.RemoveHumanAvatarRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveHumanAvatarAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete User Avatar (Human)
      ///
      /// Removes the avatar that is currently set on the user.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveHumanAvatarResponse> RemoveHumanAvatarAsync(global::Zitadel.Management.V1.RemoveHumanAvatarRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveHumanAvatar, null, options, request);
      }
      /// <summary>
      /// Set Human Initial Password
      ///
      /// Deprecated: use [user service v2 SetPassword](apis/resources/user_service_v2/user-service-set-password.api.mdx) instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetHumanInitialPasswordResponse SetHumanInitialPassword(global::Zitadel.Management.V1.SetHumanInitialPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetHumanInitialPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set Human Initial Password
      ///
      /// Deprecated: use [user service v2 SetPassword](apis/resources/user_service_v2/user-service-set-password.api.mdx) instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetHumanInitialPasswordResponse SetHumanInitialPassword(global::Zitadel.Management.V1.SetHumanInitialPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetHumanInitialPassword, null, options, request);
      }
      /// <summary>
      /// Set Human Initial Password
      ///
      /// Deprecated: use [user service v2 SetPassword](apis/resources/user_service_v2/user-service-set-password.api.mdx) instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetHumanInitialPasswordResponse> SetHumanInitialPasswordAsync(global::Zitadel.Management.V1.SetHumanInitialPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetHumanInitialPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set Human Initial Password
      ///
      /// Deprecated: use [user service v2 SetPassword](apis/resources/user_service_v2/user-service-set-password.api.mdx) instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetHumanInitialPasswordResponse> SetHumanInitialPasswordAsync(global::Zitadel.Management.V1.SetHumanInitialPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetHumanInitialPassword, null, options, request);
      }
      /// <summary>
      /// Set User Password
      ///
      /// Deprecated: use [user service v2 SetPassword](apis/resources/user_service_v2/user-service-set-password.api.mdx) instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetHumanPasswordResponse SetHumanPassword(global::Zitadel.Management.V1.SetHumanPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetHumanPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set User Password
      ///
      /// Deprecated: use [user service v2 SetPassword](apis/resources/user_service_v2/user-service-set-password.api.mdx) instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetHumanPasswordResponse SetHumanPassword(global::Zitadel.Management.V1.SetHumanPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetHumanPassword, null, options, request);
      }
      /// <summary>
      /// Set User Password
      ///
      /// Deprecated: use [user service v2 SetPassword](apis/resources/user_service_v2/user-service-set-password.api.mdx) instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetHumanPasswordResponse> SetHumanPasswordAsync(global::Zitadel.Management.V1.SetHumanPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetHumanPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set User Password
      ///
      /// Deprecated: use [user service v2 SetPassword](apis/resources/user_service_v2/user-service-set-password.api.mdx) instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetHumanPasswordResponse> SetHumanPasswordAsync(global::Zitadel.Management.V1.SetHumanPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetHumanPassword, null, options, request);
      }
      /// <summary>
      /// Send Reset Password Notification
      ///
      /// Deprecated: use [user service v2 PasswordReset](apis/resources/user_service_v2/user-service-password-reset.api.mdx) instead.
      ///
      /// The user will receive an email with a link to change the password.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SendHumanResetPasswordNotificationResponse SendHumanResetPasswordNotification(global::Zitadel.Management.V1.SendHumanResetPasswordNotificationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendHumanResetPasswordNotification(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Send Reset Password Notification
      ///
      /// Deprecated: use [user service v2 PasswordReset](apis/resources/user_service_v2/user-service-password-reset.api.mdx) instead.
      ///
      /// The user will receive an email with a link to change the password.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SendHumanResetPasswordNotificationResponse SendHumanResetPasswordNotification(global::Zitadel.Management.V1.SendHumanResetPasswordNotificationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendHumanResetPasswordNotification, null, options, request);
      }
      /// <summary>
      /// Send Reset Password Notification
      ///
      /// Deprecated: use [user service v2 PasswordReset](apis/resources/user_service_v2/user-service-password-reset.api.mdx) instead.
      ///
      /// The user will receive an email with a link to change the password.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SendHumanResetPasswordNotificationResponse> SendHumanResetPasswordNotificationAsync(global::Zitadel.Management.V1.SendHumanResetPasswordNotificationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendHumanResetPasswordNotificationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Send Reset Password Notification
      ///
      /// Deprecated: use [user service v2 PasswordReset](apis/resources/user_service_v2/user-service-password-reset.api.mdx) instead.
      ///
      /// The user will receive an email with a link to change the password.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SendHumanResetPasswordNotificationResponse> SendHumanResetPasswordNotificationAsync(global::Zitadel.Management.V1.SendHumanResetPasswordNotificationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendHumanResetPasswordNotification, null, options, request);
      }
      /// <summary>
      /// Get User Authentication Factors (2FA/MFA)
      ///
      /// Deprecated: use [user service v2 ListAuthenticationMethodTypes](apis/resources/user_service_v2/user-service-list-authentication-method-types.api.mdx) instead.
      ///
      /// Get a list of authentication factors the user has set. Including Second Factors (2FA) and Multi-Factors (MFA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListHumanAuthFactorsResponse ListHumanAuthFactors(global::Zitadel.Management.V1.ListHumanAuthFactorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListHumanAuthFactors(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get User Authentication Factors (2FA/MFA)
      ///
      /// Deprecated: use [user service v2 ListAuthenticationMethodTypes](apis/resources/user_service_v2/user-service-list-authentication-method-types.api.mdx) instead.
      ///
      /// Get a list of authentication factors the user has set. Including Second Factors (2FA) and Multi-Factors (MFA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListHumanAuthFactorsResponse ListHumanAuthFactors(global::Zitadel.Management.V1.ListHumanAuthFactorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListHumanAuthFactors, null, options, request);
      }
      /// <summary>
      /// Get User Authentication Factors (2FA/MFA)
      ///
      /// Deprecated: use [user service v2 ListAuthenticationMethodTypes](apis/resources/user_service_v2/user-service-list-authentication-method-types.api.mdx) instead.
      ///
      /// Get a list of authentication factors the user has set. Including Second Factors (2FA) and Multi-Factors (MFA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListHumanAuthFactorsResponse> ListHumanAuthFactorsAsync(global::Zitadel.Management.V1.ListHumanAuthFactorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListHumanAuthFactorsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get User Authentication Factors (2FA/MFA)
      ///
      /// Deprecated: use [user service v2 ListAuthenticationMethodTypes](apis/resources/user_service_v2/user-service-list-authentication-method-types.api.mdx) instead.
      ///
      /// Get a list of authentication factors the user has set. Including Second Factors (2FA) and Multi-Factors (MFA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListHumanAuthFactorsResponse> ListHumanAuthFactorsAsync(global::Zitadel.Management.V1.ListHumanAuthFactorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListHumanAuthFactors, null, options, request);
      }
      /// <summary>
      /// Remove Multi-Factor OTP
      ///
      /// Deprecated: use [user service v2 RemoveTOTP](apis/resources/user_service_v2/user-service-remove-totp.api.mdx) instead.
      ///
      /// Remove the configured One-Time Password (OTP) as a factor from the user. OTP is an authentication app, like Authy or Google/Microsoft Authenticator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPResponse RemoveHumanAuthFactorOTP(global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveHumanAuthFactorOTP(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Multi-Factor OTP
      ///
      /// Deprecated: use [user service v2 RemoveTOTP](apis/resources/user_service_v2/user-service-remove-totp.api.mdx) instead.
      ///
      /// Remove the configured One-Time Password (OTP) as a factor from the user. OTP is an authentication app, like Authy or Google/Microsoft Authenticator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPResponse RemoveHumanAuthFactorOTP(global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveHumanAuthFactorOTP, null, options, request);
      }
      /// <summary>
      /// Remove Multi-Factor OTP
      ///
      /// Deprecated: use [user service v2 RemoveTOTP](apis/resources/user_service_v2/user-service-remove-totp.api.mdx) instead.
      ///
      /// Remove the configured One-Time Password (OTP) as a factor from the user. OTP is an authentication app, like Authy or Google/Microsoft Authenticator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPResponse> RemoveHumanAuthFactorOTPAsync(global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveHumanAuthFactorOTPAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Multi-Factor OTP
      ///
      /// Deprecated: use [user service v2 RemoveTOTP](apis/resources/user_service_v2/user-service-remove-totp.api.mdx) instead.
      ///
      /// Remove the configured One-Time Password (OTP) as a factor from the user. OTP is an authentication app, like Authy or Google/Microsoft Authenticator.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPResponse> RemoveHumanAuthFactorOTPAsync(global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveHumanAuthFactorOTP, null, options, request);
      }
      /// <summary>
      /// Remove Multi-Factor U2F
      ///
      /// Deprecated: use [user service v2 RemoveU2F](apis/resources/user_service_v2/user-service-remove-u-2-f.api.mdx) instead.
      ///
      /// Remove the configured Universal Second Factor (U2F) as a factor from the user. U2F is a device-dependent factor like FingerPrint, Windows-Hello, etc.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FResponse RemoveHumanAuthFactorU2F(global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveHumanAuthFactorU2F(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Multi-Factor U2F
      ///
      /// Deprecated: use [user service v2 RemoveU2F](apis/resources/user_service_v2/user-service-remove-u-2-f.api.mdx) instead.
      ///
      /// Remove the configured Universal Second Factor (U2F) as a factor from the user. U2F is a device-dependent factor like FingerPrint, Windows-Hello, etc.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FResponse RemoveHumanAuthFactorU2F(global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveHumanAuthFactorU2F, null, options, request);
      }
      /// <summary>
      /// Remove Multi-Factor U2F
      ///
      /// Deprecated: use [user service v2 RemoveU2F](apis/resources/user_service_v2/user-service-remove-u-2-f.api.mdx) instead.
      ///
      /// Remove the configured Universal Second Factor (U2F) as a factor from the user. U2F is a device-dependent factor like FingerPrint, Windows-Hello, etc.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FResponse> RemoveHumanAuthFactorU2FAsync(global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveHumanAuthFactorU2FAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Multi-Factor U2F
      ///
      /// Deprecated: use [user service v2 RemoveU2F](apis/resources/user_service_v2/user-service-remove-u-2-f.api.mdx) instead.
      ///
      /// Remove the configured Universal Second Factor (U2F) as a factor from the user. U2F is a device-dependent factor like FingerPrint, Windows-Hello, etc.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FResponse> RemoveHumanAuthFactorU2FAsync(global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveHumanAuthFactorU2F, null, options, request);
      }
      /// <summary>
      /// Remove Multi-Factor OTP SMS
      ///
      /// Deprecated: use [user service v2 RemoveOTPSMS](apis/resources/user_service_v2/user-service-remove-otpsms.api.mdx) instead.
      ///
      /// Remove the configured One-Time Password (OTP) SMS as a factor from the user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSResponse RemoveHumanAuthFactorOTPSMS(global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveHumanAuthFactorOTPSMS(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Multi-Factor OTP SMS
      ///
      /// Deprecated: use [user service v2 RemoveOTPSMS](apis/resources/user_service_v2/user-service-remove-otpsms.api.mdx) instead.
      ///
      /// Remove the configured One-Time Password (OTP) SMS as a factor from the user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSResponse RemoveHumanAuthFactorOTPSMS(global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveHumanAuthFactorOTPSMS, null, options, request);
      }
      /// <summary>
      /// Remove Multi-Factor OTP SMS
      ///
      /// Deprecated: use [user service v2 RemoveOTPSMS](apis/resources/user_service_v2/user-service-remove-otpsms.api.mdx) instead.
      ///
      /// Remove the configured One-Time Password (OTP) SMS as a factor from the user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSResponse> RemoveHumanAuthFactorOTPSMSAsync(global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveHumanAuthFactorOTPSMSAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Multi-Factor OTP SMS
      ///
      /// Deprecated: use [user service v2 RemoveOTPSMS](apis/resources/user_service_v2/user-service-remove-otpsms.api.mdx) instead.
      ///
      /// Remove the configured One-Time Password (OTP) SMS as a factor from the user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSResponse> RemoveHumanAuthFactorOTPSMSAsync(global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveHumanAuthFactorOTPSMS, null, options, request);
      }
      /// <summary>
      /// Remove Multi-Factor OTP Email
      ///
      /// Deprecated: use [user service v2 RemoveOTPEmail](apis/resources/user_service_v2/user-service-remove-otp-email.api.mdx) instead.
      ///
      /// Remove the configured One-Time Password (OTP) Email as a factor from the user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailResponse RemoveHumanAuthFactorOTPEmail(global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveHumanAuthFactorOTPEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Multi-Factor OTP Email
      ///
      /// Deprecated: use [user service v2 RemoveOTPEmail](apis/resources/user_service_v2/user-service-remove-otp-email.api.mdx) instead.
      ///
      /// Remove the configured One-Time Password (OTP) Email as a factor from the user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailResponse RemoveHumanAuthFactorOTPEmail(global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveHumanAuthFactorOTPEmail, null, options, request);
      }
      /// <summary>
      /// Remove Multi-Factor OTP Email
      ///
      /// Deprecated: use [user service v2 RemoveOTPEmail](apis/resources/user_service_v2/user-service-remove-otp-email.api.mdx) instead.
      ///
      /// Remove the configured One-Time Password (OTP) Email as a factor from the user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailResponse> RemoveHumanAuthFactorOTPEmailAsync(global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveHumanAuthFactorOTPEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Multi-Factor OTP Email
      ///
      /// Deprecated: use [user service v2 RemoveOTPEmail](apis/resources/user_service_v2/user-service-remove-otp-email.api.mdx) instead.
      ///
      /// Remove the configured One-Time Password (OTP) Email as a factor from the user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailResponse> RemoveHumanAuthFactorOTPEmailAsync(global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveHumanAuthFactorOTPEmail, null, options, request);
      }
      /// <summary>
      /// Search Passwordless/Passkey authentication
      ///
      /// Deprecated: use [user service v2 ListPasskeys](apis/resources/user_service_v2/user-service-list-passkeys.api.mdx) instead.
      ///
      /// Get a list of configured passwordless/passkey authentication methods from the user. Passwordless/passkey is a device-dependent authentication like FingerScan, WindowsHello or a Hardware Token.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListHumanPasswordlessResponse ListHumanPasswordless(global::Zitadel.Management.V1.ListHumanPasswordlessRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListHumanPasswordless(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Passwordless/Passkey authentication
      ///
      /// Deprecated: use [user service v2 ListPasskeys](apis/resources/user_service_v2/user-service-list-passkeys.api.mdx) instead.
      ///
      /// Get a list of configured passwordless/passkey authentication methods from the user. Passwordless/passkey is a device-dependent authentication like FingerScan, WindowsHello or a Hardware Token.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListHumanPasswordlessResponse ListHumanPasswordless(global::Zitadel.Management.V1.ListHumanPasswordlessRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListHumanPasswordless, null, options, request);
      }
      /// <summary>
      /// Search Passwordless/Passkey authentication
      ///
      /// Deprecated: use [user service v2 ListPasskeys](apis/resources/user_service_v2/user-service-list-passkeys.api.mdx) instead.
      ///
      /// Get a list of configured passwordless/passkey authentication methods from the user. Passwordless/passkey is a device-dependent authentication like FingerScan, WindowsHello or a Hardware Token.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListHumanPasswordlessResponse> ListHumanPasswordlessAsync(global::Zitadel.Management.V1.ListHumanPasswordlessRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListHumanPasswordlessAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Passwordless/Passkey authentication
      ///
      /// Deprecated: use [user service v2 ListPasskeys](apis/resources/user_service_v2/user-service-list-passkeys.api.mdx) instead.
      ///
      /// Get a list of configured passwordless/passkey authentication methods from the user. Passwordless/passkey is a device-dependent authentication like FingerScan, WindowsHello or a Hardware Token.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListHumanPasswordlessResponse> ListHumanPasswordlessAsync(global::Zitadel.Management.V1.ListHumanPasswordlessRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListHumanPasswordless, null, options, request);
      }
      /// <summary>
      /// Add Passwordless/Passkey Registration Link
      ///
      /// Deprecated: use [user service v2 RegisterPasskey](apis/resources/user_service_v2/user-service-register-passkey.api.mdx) instead.
      ///
      /// Adds a new passwordless/passkey authenticator link to the user and returns it in the response. The link enables the user to register a new device if current passwordless/passkey devices are all platform authenticators. e.g. User has already registered Windows Hello and wants to register FaceID on the iPhone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddPasswordlessRegistrationResponse AddPasswordlessRegistration(global::Zitadel.Management.V1.AddPasswordlessRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddPasswordlessRegistration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add Passwordless/Passkey Registration Link
      ///
      /// Deprecated: use [user service v2 RegisterPasskey](apis/resources/user_service_v2/user-service-register-passkey.api.mdx) instead.
      ///
      /// Adds a new passwordless/passkey authenticator link to the user and returns it in the response. The link enables the user to register a new device if current passwordless/passkey devices are all platform authenticators. e.g. User has already registered Windows Hello and wants to register FaceID on the iPhone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddPasswordlessRegistrationResponse AddPasswordlessRegistration(global::Zitadel.Management.V1.AddPasswordlessRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddPasswordlessRegistration, null, options, request);
      }
      /// <summary>
      /// Add Passwordless/Passkey Registration Link
      ///
      /// Deprecated: use [user service v2 RegisterPasskey](apis/resources/user_service_v2/user-service-register-passkey.api.mdx) instead.
      ///
      /// Adds a new passwordless/passkey authenticator link to the user and returns it in the response. The link enables the user to register a new device if current passwordless/passkey devices are all platform authenticators. e.g. User has already registered Windows Hello and wants to register FaceID on the iPhone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddPasswordlessRegistrationResponse> AddPasswordlessRegistrationAsync(global::Zitadel.Management.V1.AddPasswordlessRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddPasswordlessRegistrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add Passwordless/Passkey Registration Link
      ///
      /// Deprecated: use [user service v2 RegisterPasskey](apis/resources/user_service_v2/user-service-register-passkey.api.mdx) instead.
      ///
      /// Adds a new passwordless/passkey authenticator link to the user and returns it in the response. The link enables the user to register a new device if current passwordless/passkey devices are all platform authenticators. e.g. User has already registered Windows Hello and wants to register FaceID on the iPhone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddPasswordlessRegistrationResponse> AddPasswordlessRegistrationAsync(global::Zitadel.Management.V1.AddPasswordlessRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddPasswordlessRegistration, null, options, request);
      }
      /// <summary>
      /// Send Passwordless/Passkey Registration Link
      ///
      /// Deprecated: use [user service v2 RegisterPasskey](apis/resources/user_service_v2/user-service-register-passkey.api.mdx) instead.
      ///
      /// Adds a new passwordless/passkey authenticator link to the user and sends it to the user per email. The link enables the user to register a new device if current passwordless/passkey devices are all platform authenticators. e.g. User has already registered Windows Hello and wants to register FaceID on the iPhone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SendPasswordlessRegistrationResponse SendPasswordlessRegistration(global::Zitadel.Management.V1.SendPasswordlessRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendPasswordlessRegistration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Send Passwordless/Passkey Registration Link
      ///
      /// Deprecated: use [user service v2 RegisterPasskey](apis/resources/user_service_v2/user-service-register-passkey.api.mdx) instead.
      ///
      /// Adds a new passwordless/passkey authenticator link to the user and sends it to the user per email. The link enables the user to register a new device if current passwordless/passkey devices are all platform authenticators. e.g. User has already registered Windows Hello and wants to register FaceID on the iPhone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SendPasswordlessRegistrationResponse SendPasswordlessRegistration(global::Zitadel.Management.V1.SendPasswordlessRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SendPasswordlessRegistration, null, options, request);
      }
      /// <summary>
      /// Send Passwordless/Passkey Registration Link
      ///
      /// Deprecated: use [user service v2 RegisterPasskey](apis/resources/user_service_v2/user-service-register-passkey.api.mdx) instead.
      ///
      /// Adds a new passwordless/passkey authenticator link to the user and sends it to the user per email. The link enables the user to register a new device if current passwordless/passkey devices are all platform authenticators. e.g. User has already registered Windows Hello and wants to register FaceID on the iPhone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SendPasswordlessRegistrationResponse> SendPasswordlessRegistrationAsync(global::Zitadel.Management.V1.SendPasswordlessRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SendPasswordlessRegistrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Send Passwordless/Passkey Registration Link
      ///
      /// Deprecated: use [user service v2 RegisterPasskey](apis/resources/user_service_v2/user-service-register-passkey.api.mdx) instead.
      ///
      /// Adds a new passwordless/passkey authenticator link to the user and sends it to the user per email. The link enables the user to register a new device if current passwordless/passkey devices are all platform authenticators. e.g. User has already registered Windows Hello and wants to register FaceID on the iPhone.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SendPasswordlessRegistrationResponse> SendPasswordlessRegistrationAsync(global::Zitadel.Management.V1.SendPasswordlessRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SendPasswordlessRegistration, null, options, request);
      }
      /// <summary>
      /// Delete Passwordless/Passkey
      ///
      /// Deprecated: use [user service v2 RemovePasskey](apis/resources/user_service_v2/user-service-remove-passkey.api.mdx) instead.
      ///
      /// Remove a configured passwordless/passkey authentication method from the user. (e.g FaceID, FingerScane, WindowsHello, etc.).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveHumanPasswordlessResponse RemoveHumanPasswordless(global::Zitadel.Management.V1.RemoveHumanPasswordlessRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveHumanPasswordless(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete Passwordless/Passkey
      ///
      /// Deprecated: use [user service v2 RemovePasskey](apis/resources/user_service_v2/user-service-remove-passkey.api.mdx) instead.
      ///
      /// Remove a configured passwordless/passkey authentication method from the user. (e.g FaceID, FingerScane, WindowsHello, etc.).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveHumanPasswordlessResponse RemoveHumanPasswordless(global::Zitadel.Management.V1.RemoveHumanPasswordlessRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveHumanPasswordless, null, options, request);
      }
      /// <summary>
      /// Delete Passwordless/Passkey
      ///
      /// Deprecated: use [user service v2 RemovePasskey](apis/resources/user_service_v2/user-service-remove-passkey.api.mdx) instead.
      ///
      /// Remove a configured passwordless/passkey authentication method from the user. (e.g FaceID, FingerScane, WindowsHello, etc.).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveHumanPasswordlessResponse> RemoveHumanPasswordlessAsync(global::Zitadel.Management.V1.RemoveHumanPasswordlessRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveHumanPasswordlessAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete Passwordless/Passkey
      ///
      /// Deprecated: use [user service v2 RemovePasskey](apis/resources/user_service_v2/user-service-remove-passkey.api.mdx) instead.
      ///
      /// Remove a configured passwordless/passkey authentication method from the user. (e.g FaceID, FingerScane, WindowsHello, etc.).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveHumanPasswordlessResponse> RemoveHumanPasswordlessAsync(global::Zitadel.Management.V1.RemoveHumanPasswordlessRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveHumanPasswordless, null, options, request);
      }
      /// <summary>
      /// Update Machine User
      ///
      /// Deprecated: use [user service v2 UpdateUser](apis/resources/user_service_v2/user-service-update-user.api.mdx) instead.
      ///
      /// Change a service account/machine user. It is used for accounts with non-interactive authentication possibilities.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateMachineResponse UpdateMachine(global::Zitadel.Management.V1.UpdateMachineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMachine(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update Machine User
      ///
      /// Deprecated: use [user service v2 UpdateUser](apis/resources/user_service_v2/user-service-update-user.api.mdx) instead.
      ///
      /// Change a service account/machine user. It is used for accounts with non-interactive authentication possibilities.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateMachineResponse UpdateMachine(global::Zitadel.Management.V1.UpdateMachineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateMachine, null, options, request);
      }
      /// <summary>
      /// Update Machine User
      ///
      /// Deprecated: use [user service v2 UpdateUser](apis/resources/user_service_v2/user-service-update-user.api.mdx) instead.
      ///
      /// Change a service account/machine user. It is used for accounts with non-interactive authentication possibilities.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateMachineResponse> UpdateMachineAsync(global::Zitadel.Management.V1.UpdateMachineRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMachineAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update Machine User
      ///
      /// Deprecated: use [user service v2 UpdateUser](apis/resources/user_service_v2/user-service-update-user.api.mdx) instead.
      ///
      /// Change a service account/machine user. It is used for accounts with non-interactive authentication possibilities.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateMachineResponse> UpdateMachineAsync(global::Zitadel.Management.V1.UpdateMachineRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateMachine, null, options, request);
      }
      /// <summary>
      /// Create Secret for Machine User
      ///
      /// Deprecated: use [user service v2 AddSecret](apis/resources/user_service_v2/user-service-add-secret.api.mdx) instead.
      ///
      /// Create a new secret for a machine user/service account. It is used to authenticate the user (client credential grant).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GenerateMachineSecretResponse GenerateMachineSecret(global::Zitadel.Management.V1.GenerateMachineSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateMachineSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create Secret for Machine User
      ///
      /// Deprecated: use [user service v2 AddSecret](apis/resources/user_service_v2/user-service-add-secret.api.mdx) instead.
      ///
      /// Create a new secret for a machine user/service account. It is used to authenticate the user (client credential grant).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GenerateMachineSecretResponse GenerateMachineSecret(global::Zitadel.Management.V1.GenerateMachineSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GenerateMachineSecret, null, options, request);
      }
      /// <summary>
      /// Create Secret for Machine User
      ///
      /// Deprecated: use [user service v2 AddSecret](apis/resources/user_service_v2/user-service-add-secret.api.mdx) instead.
      ///
      /// Create a new secret for a machine user/service account. It is used to authenticate the user (client credential grant).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GenerateMachineSecretResponse> GenerateMachineSecretAsync(global::Zitadel.Management.V1.GenerateMachineSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateMachineSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create Secret for Machine User
      ///
      /// Deprecated: use [user service v2 AddSecret](apis/resources/user_service_v2/user-service-add-secret.api.mdx) instead.
      ///
      /// Create a new secret for a machine user/service account. It is used to authenticate the user (client credential grant).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GenerateMachineSecretResponse> GenerateMachineSecretAsync(global::Zitadel.Management.V1.GenerateMachineSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GenerateMachineSecret, null, options, request);
      }
      /// <summary>
      /// Delete Secret of Machine User
      ///
      /// Deprecated: use [user service v2 RemoveSecret](apis/resources/user_service_v2/user-service-remove-secret.api.mdx) instead.
      ///
      /// Delete a secret of a machine user/service account. The user will not be able to authenticate with the secret afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveMachineSecretResponse RemoveMachineSecret(global::Zitadel.Management.V1.RemoveMachineSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveMachineSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete Secret of Machine User
      ///
      /// Deprecated: use [user service v2 RemoveSecret](apis/resources/user_service_v2/user-service-remove-secret.api.mdx) instead.
      ///
      /// Delete a secret of a machine user/service account. The user will not be able to authenticate with the secret afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveMachineSecretResponse RemoveMachineSecret(global::Zitadel.Management.V1.RemoveMachineSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveMachineSecret, null, options, request);
      }
      /// <summary>
      /// Delete Secret of Machine User
      ///
      /// Deprecated: use [user service v2 RemoveSecret](apis/resources/user_service_v2/user-service-remove-secret.api.mdx) instead.
      ///
      /// Delete a secret of a machine user/service account. The user will not be able to authenticate with the secret afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveMachineSecretResponse> RemoveMachineSecretAsync(global::Zitadel.Management.V1.RemoveMachineSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveMachineSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete Secret of Machine User
      ///
      /// Deprecated: use [user service v2 RemoveSecret](apis/resources/user_service_v2/user-service-remove-secret.api.mdx) instead.
      ///
      /// Delete a secret of a machine user/service account. The user will not be able to authenticate with the secret afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveMachineSecretResponse> RemoveMachineSecretAsync(global::Zitadel.Management.V1.RemoveMachineSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveMachineSecret, null, options, request);
      }
      /// <summary>
      /// Get Machine user Key By ID
      ///
      /// Deprecated: use [user service v2 ListUsers](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Get a specific Key of a machine user by its id. Machine keys are used to authenticate with jwt profile authentication.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetMachineKeyByIDsResponse GetMachineKeyByIDs(global::Zitadel.Management.V1.GetMachineKeyByIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMachineKeyByIDs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Machine user Key By ID
      ///
      /// Deprecated: use [user service v2 ListUsers](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Get a specific Key of a machine user by its id. Machine keys are used to authenticate with jwt profile authentication.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetMachineKeyByIDsResponse GetMachineKeyByIDs(global::Zitadel.Management.V1.GetMachineKeyByIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMachineKeyByIDs, null, options, request);
      }
      /// <summary>
      /// Get Machine user Key By ID
      ///
      /// Deprecated: use [user service v2 ListUsers](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Get a specific Key of a machine user by its id. Machine keys are used to authenticate with jwt profile authentication.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetMachineKeyByIDsResponse> GetMachineKeyByIDsAsync(global::Zitadel.Management.V1.GetMachineKeyByIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMachineKeyByIDsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Machine user Key By ID
      ///
      /// Deprecated: use [user service v2 ListUsers](apis/resources/user_service_v2/user-service-list-users.api.mdx) instead.
      ///
      /// Get a specific Key of a machine user by its id. Machine keys are used to authenticate with jwt profile authentication.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetMachineKeyByIDsResponse> GetMachineKeyByIDsAsync(global::Zitadel.Management.V1.GetMachineKeyByIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMachineKeyByIDs, null, options, request);
      }
      /// <summary>
      /// List Machine Keys
      ///
      /// Deprecated: use [user service v2 ListKeys](apis/resources/user_service_v2/user-service-list-keys.api.mdx) instead.
      ///
      /// Get the list of keys of a machine user. Machine keys are used to authenticate with jwt profile authentication.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListMachineKeysResponse ListMachineKeys(global::Zitadel.Management.V1.ListMachineKeysRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMachineKeys(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Machine Keys
      ///
      /// Deprecated: use [user service v2 ListKeys](apis/resources/user_service_v2/user-service-list-keys.api.mdx) instead.
      ///
      /// Get the list of keys of a machine user. Machine keys are used to authenticate with jwt profile authentication.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListMachineKeysResponse ListMachineKeys(global::Zitadel.Management.V1.ListMachineKeysRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListMachineKeys, null, options, request);
      }
      /// <summary>
      /// List Machine Keys
      ///
      /// Deprecated: use [user service v2 ListKeys](apis/resources/user_service_v2/user-service-list-keys.api.mdx) instead.
      ///
      /// Get the list of keys of a machine user. Machine keys are used to authenticate with jwt profile authentication.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListMachineKeysResponse> ListMachineKeysAsync(global::Zitadel.Management.V1.ListMachineKeysRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListMachineKeysAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Machine Keys
      ///
      /// Deprecated: use [user service v2 ListKeys](apis/resources/user_service_v2/user-service-list-keys.api.mdx) instead.
      ///
      /// Get the list of keys of a machine user. Machine keys are used to authenticate with jwt profile authentication.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListMachineKeysResponse> ListMachineKeysAsync(global::Zitadel.Management.V1.ListMachineKeysRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListMachineKeys, null, options, request);
      }
      /// <summary>
      /// Create Key for machine user
      ///
      /// Deprecated: use [user service v2 AddKey](apis/resources/user_service_v2/user-service-add-key.api.mdx) instead.
      ///
      /// If a public key is not supplied, a new key is generated and will be returned in the response.
      /// Make sure to store the returned key.
      /// If an RSA public key is supplied, the private key is omitted from the response.
      /// Machine keys are used to authenticate with jwt profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddMachineKeyResponse AddMachineKey(global::Zitadel.Management.V1.AddMachineKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddMachineKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create Key for machine user
      ///
      /// Deprecated: use [user service v2 AddKey](apis/resources/user_service_v2/user-service-add-key.api.mdx) instead.
      ///
      /// If a public key is not supplied, a new key is generated and will be returned in the response.
      /// Make sure to store the returned key.
      /// If an RSA public key is supplied, the private key is omitted from the response.
      /// Machine keys are used to authenticate with jwt profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddMachineKeyResponse AddMachineKey(global::Zitadel.Management.V1.AddMachineKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddMachineKey, null, options, request);
      }
      /// <summary>
      /// Create Key for machine user
      ///
      /// Deprecated: use [user service v2 AddKey](apis/resources/user_service_v2/user-service-add-key.api.mdx) instead.
      ///
      /// If a public key is not supplied, a new key is generated and will be returned in the response.
      /// Make sure to store the returned key.
      /// If an RSA public key is supplied, the private key is omitted from the response.
      /// Machine keys are used to authenticate with jwt profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddMachineKeyResponse> AddMachineKeyAsync(global::Zitadel.Management.V1.AddMachineKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddMachineKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create Key for machine user
      ///
      /// Deprecated: use [user service v2 AddKey](apis/resources/user_service_v2/user-service-add-key.api.mdx) instead.
      ///
      /// If a public key is not supplied, a new key is generated and will be returned in the response.
      /// Make sure to store the returned key.
      /// If an RSA public key is supplied, the private key is omitted from the response.
      /// Machine keys are used to authenticate with jwt profile.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddMachineKeyResponse> AddMachineKeyAsync(global::Zitadel.Management.V1.AddMachineKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddMachineKey, null, options, request);
      }
      /// <summary>
      /// Delete Key for machine user
      ///
      /// Deprecated: use [user service v2 RemoveKey](apis/resources/user_service_v2/user-service-remove-key.api.mdx) instead.
      ///
      /// Delete a specific key from a user.
      /// The user will not be able to authenticate with that key afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveMachineKeyResponse RemoveMachineKey(global::Zitadel.Management.V1.RemoveMachineKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveMachineKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete Key for machine user
      ///
      /// Deprecated: use [user service v2 RemoveKey](apis/resources/user_service_v2/user-service-remove-key.api.mdx) instead.
      ///
      /// Delete a specific key from a user.
      /// The user will not be able to authenticate with that key afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveMachineKeyResponse RemoveMachineKey(global::Zitadel.Management.V1.RemoveMachineKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveMachineKey, null, options, request);
      }
      /// <summary>
      /// Delete Key for machine user
      ///
      /// Deprecated: use [user service v2 RemoveKey](apis/resources/user_service_v2/user-service-remove-key.api.mdx) instead.
      ///
      /// Delete a specific key from a user.
      /// The user will not be able to authenticate with that key afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveMachineKeyResponse> RemoveMachineKeyAsync(global::Zitadel.Management.V1.RemoveMachineKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveMachineKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete Key for machine user
      ///
      /// Deprecated: use [user service v2 RemoveKey](apis/resources/user_service_v2/user-service-remove-key.api.mdx) instead.
      ///
      /// Delete a specific key from a user.
      /// The user will not be able to authenticate with that key afterward.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveMachineKeyResponse> RemoveMachineKeyAsync(global::Zitadel.Management.V1.RemoveMachineKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveMachineKey, null, options, request);
      }
      /// <summary>
      /// Get Personal-Access-Token (PAT) by ID
      ///
      /// Deprecated: use [user service v2 ListPersonalAccessTokens](apis/resources/user_service_v2/user-service-list-personal-access-tokens.api.mdx) instead.
      ///
      /// Returns the PAT for a user, currently only available for machine users/service accounts. PATs are ready-to-use tokens and can be sent directly in the authentication header.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsResponse GetPersonalAccessTokenByIDs(global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPersonalAccessTokenByIDs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Personal-Access-Token (PAT) by ID
      ///
      /// Deprecated: use [user service v2 ListPersonalAccessTokens](apis/resources/user_service_v2/user-service-list-personal-access-tokens.api.mdx) instead.
      ///
      /// Returns the PAT for a user, currently only available for machine users/service accounts. PATs are ready-to-use tokens and can be sent directly in the authentication header.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsResponse GetPersonalAccessTokenByIDs(global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPersonalAccessTokenByIDs, null, options, request);
      }
      /// <summary>
      /// Get Personal-Access-Token (PAT) by ID
      ///
      /// Deprecated: use [user service v2 ListPersonalAccessTokens](apis/resources/user_service_v2/user-service-list-personal-access-tokens.api.mdx) instead.
      ///
      /// Returns the PAT for a user, currently only available for machine users/service accounts. PATs are ready-to-use tokens and can be sent directly in the authentication header.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsResponse> GetPersonalAccessTokenByIDsAsync(global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPersonalAccessTokenByIDsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Personal-Access-Token (PAT) by ID
      ///
      /// Deprecated: use [user service v2 ListPersonalAccessTokens](apis/resources/user_service_v2/user-service-list-personal-access-tokens.api.mdx) instead.
      ///
      /// Returns the PAT for a user, currently only available for machine users/service accounts. PATs are ready-to-use tokens and can be sent directly in the authentication header.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsResponse> GetPersonalAccessTokenByIDsAsync(global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPersonalAccessTokenByIDs, null, options, request);
      }
      /// <summary>
      /// List Personal-Access-Tokens (PATs)
      ///
      /// Deprecated: use [user service v2 ListPersonalAccessTokens](apis/resources/user_service_v2/user-service-list-personal-access-tokens.api.mdx) instead.
      ///
      /// Returns a list of PATs for a user, currently only available for machine users/service accounts. PATs are ready-to-use tokens and can be sent directly in the authentication header.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListPersonalAccessTokensResponse ListPersonalAccessTokens(global::Zitadel.Management.V1.ListPersonalAccessTokensRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPersonalAccessTokens(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Personal-Access-Tokens (PATs)
      ///
      /// Deprecated: use [user service v2 ListPersonalAccessTokens](apis/resources/user_service_v2/user-service-list-personal-access-tokens.api.mdx) instead.
      ///
      /// Returns a list of PATs for a user, currently only available for machine users/service accounts. PATs are ready-to-use tokens and can be sent directly in the authentication header.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListPersonalAccessTokensResponse ListPersonalAccessTokens(global::Zitadel.Management.V1.ListPersonalAccessTokensRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListPersonalAccessTokens, null, options, request);
      }
      /// <summary>
      /// List Personal-Access-Tokens (PATs)
      ///
      /// Deprecated: use [user service v2 ListPersonalAccessTokens](apis/resources/user_service_v2/user-service-list-personal-access-tokens.api.mdx) instead.
      ///
      /// Returns a list of PATs for a user, currently only available for machine users/service accounts. PATs are ready-to-use tokens and can be sent directly in the authentication header.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListPersonalAccessTokensResponse> ListPersonalAccessTokensAsync(global::Zitadel.Management.V1.ListPersonalAccessTokensRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPersonalAccessTokensAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Personal-Access-Tokens (PATs)
      ///
      /// Deprecated: use [user service v2 ListPersonalAccessTokens](apis/resources/user_service_v2/user-service-list-personal-access-tokens.api.mdx) instead.
      ///
      /// Returns a list of PATs for a user, currently only available for machine users/service accounts. PATs are ready-to-use tokens and can be sent directly in the authentication header.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListPersonalAccessTokensResponse> ListPersonalAccessTokensAsync(global::Zitadel.Management.V1.ListPersonalAccessTokensRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListPersonalAccessTokens, null, options, request);
      }
      /// <summary>
      /// Create a Personal-Access-Token (PAT)
      ///
      /// Deprecated: use [user service v2 AddPersonalAccessToken](apis/resources/user_service_v2/user-service-add-personal-access-token.api.mdx) instead.
      ///
      /// Generates a new PAT for the user. Currently only available for machine users.
      /// The token will be returned in the response, make sure to store it.
      /// PATs are ready-to-use tokens and can be sent directly in the authentication header.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddPersonalAccessTokenResponse AddPersonalAccessToken(global::Zitadel.Management.V1.AddPersonalAccessTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddPersonalAccessToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a Personal-Access-Token (PAT)
      ///
      /// Deprecated: use [user service v2 AddPersonalAccessToken](apis/resources/user_service_v2/user-service-add-personal-access-token.api.mdx) instead.
      ///
      /// Generates a new PAT for the user. Currently only available for machine users.
      /// The token will be returned in the response, make sure to store it.
      /// PATs are ready-to-use tokens and can be sent directly in the authentication header.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddPersonalAccessTokenResponse AddPersonalAccessToken(global::Zitadel.Management.V1.AddPersonalAccessTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddPersonalAccessToken, null, options, request);
      }
      /// <summary>
      /// Create a Personal-Access-Token (PAT)
      ///
      /// Deprecated: use [user service v2 AddPersonalAccessToken](apis/resources/user_service_v2/user-service-add-personal-access-token.api.mdx) instead.
      ///
      /// Generates a new PAT for the user. Currently only available for machine users.
      /// The token will be returned in the response, make sure to store it.
      /// PATs are ready-to-use tokens and can be sent directly in the authentication header.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddPersonalAccessTokenResponse> AddPersonalAccessTokenAsync(global::Zitadel.Management.V1.AddPersonalAccessTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddPersonalAccessTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a Personal-Access-Token (PAT)
      ///
      /// Deprecated: use [user service v2 AddPersonalAccessToken](apis/resources/user_service_v2/user-service-add-personal-access-token.api.mdx) instead.
      ///
      /// Generates a new PAT for the user. Currently only available for machine users.
      /// The token will be returned in the response, make sure to store it.
      /// PATs are ready-to-use tokens and can be sent directly in the authentication header.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddPersonalAccessTokenResponse> AddPersonalAccessTokenAsync(global::Zitadel.Management.V1.AddPersonalAccessTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddPersonalAccessToken, null, options, request);
      }
      /// <summary>
      /// Remove a Personal-Access-Token (PAT) by ID
      ///
      /// Deprecated: use [user service v2 RemovePersonalAccessToken](apis/resources/user_service_v2/user-service-remove-personal-access-token.api.mdx) instead.
      ///
      /// Delete a PAT from a user. Afterward, the user will not be able to authenticate with that token anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemovePersonalAccessTokenResponse RemovePersonalAccessToken(global::Zitadel.Management.V1.RemovePersonalAccessTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemovePersonalAccessToken(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove a Personal-Access-Token (PAT) by ID
      ///
      /// Deprecated: use [user service v2 RemovePersonalAccessToken](apis/resources/user_service_v2/user-service-remove-personal-access-token.api.mdx) instead.
      ///
      /// Delete a PAT from a user. Afterward, the user will not be able to authenticate with that token anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemovePersonalAccessTokenResponse RemovePersonalAccessToken(global::Zitadel.Management.V1.RemovePersonalAccessTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemovePersonalAccessToken, null, options, request);
      }
      /// <summary>
      /// Remove a Personal-Access-Token (PAT) by ID
      ///
      /// Deprecated: use [user service v2 RemovePersonalAccessToken](apis/resources/user_service_v2/user-service-remove-personal-access-token.api.mdx) instead.
      ///
      /// Delete a PAT from a user. Afterward, the user will not be able to authenticate with that token anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemovePersonalAccessTokenResponse> RemovePersonalAccessTokenAsync(global::Zitadel.Management.V1.RemovePersonalAccessTokenRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemovePersonalAccessTokenAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove a Personal-Access-Token (PAT) by ID
      ///
      /// Deprecated: use [user service v2 RemovePersonalAccessToken](apis/resources/user_service_v2/user-service-remove-personal-access-token.api.mdx) instead.
      ///
      /// Delete a PAT from a user. Afterward, the user will not be able to authenticate with that token anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemovePersonalAccessTokenResponse> RemovePersonalAccessTokenAsync(global::Zitadel.Management.V1.RemovePersonalAccessTokenRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemovePersonalAccessToken, null, options, request);
      }
      /// <summary>
      /// List Social Logins
      ///
      /// Deprecated: use [user service v2 ListLinkedIDPs](apis/resources/user_service_v2/user-service-list-idp-links.api.mdx) instead.
      ///
      /// Returns a list of all linked identity providers/social logins of the user. (e. Google, Microsoft, AzureAD, etc.).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListHumanLinkedIDPsResponse ListHumanLinkedIDPs(global::Zitadel.Management.V1.ListHumanLinkedIDPsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListHumanLinkedIDPs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Social Logins
      ///
      /// Deprecated: use [user service v2 ListLinkedIDPs](apis/resources/user_service_v2/user-service-list-idp-links.api.mdx) instead.
      ///
      /// Returns a list of all linked identity providers/social logins of the user. (e. Google, Microsoft, AzureAD, etc.).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListHumanLinkedIDPsResponse ListHumanLinkedIDPs(global::Zitadel.Management.V1.ListHumanLinkedIDPsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListHumanLinkedIDPs, null, options, request);
      }
      /// <summary>
      /// List Social Logins
      ///
      /// Deprecated: use [user service v2 ListLinkedIDPs](apis/resources/user_service_v2/user-service-list-idp-links.api.mdx) instead.
      ///
      /// Returns a list of all linked identity providers/social logins of the user. (e. Google, Microsoft, AzureAD, etc.).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListHumanLinkedIDPsResponse> ListHumanLinkedIDPsAsync(global::Zitadel.Management.V1.ListHumanLinkedIDPsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListHumanLinkedIDPsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Social Logins
      ///
      /// Deprecated: use [user service v2 ListLinkedIDPs](apis/resources/user_service_v2/user-service-list-idp-links.api.mdx) instead.
      ///
      /// Returns a list of all linked identity providers/social logins of the user. (e. Google, Microsoft, AzureAD, etc.).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListHumanLinkedIDPsResponse> ListHumanLinkedIDPsAsync(global::Zitadel.Management.V1.ListHumanLinkedIDPsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListHumanLinkedIDPs, null, options, request);
      }
      /// <summary>
      /// Remove Social Login
      ///
      /// Deprecated: use [user service v2 RemoveIDPLink](apis/resources/user_service_v2/user-service-remove-idp-link.api.mdx) instead.
      ///
      /// Remove a configured social logins/identity providers of the user (e.g. Google, Microsoft, AzureAD, etc.). The user will not be able to log in with the given provider afterward. Make sure the user does have other possibilities to authenticate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveHumanLinkedIDPResponse RemoveHumanLinkedIDP(global::Zitadel.Management.V1.RemoveHumanLinkedIDPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveHumanLinkedIDP(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Social Login
      ///
      /// Deprecated: use [user service v2 RemoveIDPLink](apis/resources/user_service_v2/user-service-remove-idp-link.api.mdx) instead.
      ///
      /// Remove a configured social logins/identity providers of the user (e.g. Google, Microsoft, AzureAD, etc.). The user will not be able to log in with the given provider afterward. Make sure the user does have other possibilities to authenticate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveHumanLinkedIDPResponse RemoveHumanLinkedIDP(global::Zitadel.Management.V1.RemoveHumanLinkedIDPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveHumanLinkedIDP, null, options, request);
      }
      /// <summary>
      /// Remove Social Login
      ///
      /// Deprecated: use [user service v2 RemoveIDPLink](apis/resources/user_service_v2/user-service-remove-idp-link.api.mdx) instead.
      ///
      /// Remove a configured social logins/identity providers of the user (e.g. Google, Microsoft, AzureAD, etc.). The user will not be able to log in with the given provider afterward. Make sure the user does have other possibilities to authenticate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveHumanLinkedIDPResponse> RemoveHumanLinkedIDPAsync(global::Zitadel.Management.V1.RemoveHumanLinkedIDPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveHumanLinkedIDPAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Social Login
      ///
      /// Deprecated: use [user service v2 RemoveIDPLink](apis/resources/user_service_v2/user-service-remove-idp-link.api.mdx) instead.
      ///
      /// Remove a configured social logins/identity providers of the user (e.g. Google, Microsoft, AzureAD, etc.). The user will not be able to log in with the given provider afterward. Make sure the user does have other possibilities to authenticate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveHumanLinkedIDPResponse> RemoveHumanLinkedIDPAsync(global::Zitadel.Management.V1.RemoveHumanLinkedIDPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveHumanLinkedIDP, null, options, request);
      }
      /// <summary>
      /// List ZITADEL Permissions
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Show all the permissions the user has in ZITADEL (ZITADEL Manager).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListUserMembershipsResponse ListUserMemberships(global::Zitadel.Management.V1.ListUserMembershipsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUserMemberships(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List ZITADEL Permissions
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Show all the permissions the user has in ZITADEL (ZITADEL Manager).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListUserMembershipsResponse ListUserMemberships(global::Zitadel.Management.V1.ListUserMembershipsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListUserMemberships, null, options, request);
      }
      /// <summary>
      /// List ZITADEL Permissions
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Show all the permissions the user has in ZITADEL (ZITADEL Manager).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListUserMembershipsResponse> ListUserMembershipsAsync(global::Zitadel.Management.V1.ListUserMembershipsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUserMembershipsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List ZITADEL Permissions
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Show all the permissions the user has in ZITADEL (ZITADEL Manager).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListUserMembershipsResponse> ListUserMembershipsAsync(global::Zitadel.Management.V1.ListUserMembershipsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListUserMemberships, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetMyOrgResponse GetMyOrg(global::Zitadel.Management.V1.GetMyOrgRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMyOrg(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetMyOrgResponse GetMyOrg(global::Zitadel.Management.V1.GetMyOrgRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMyOrg, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetMyOrgResponse> GetMyOrgAsync(global::Zitadel.Management.V1.GetMyOrgRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMyOrgAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetMyOrgResponse> GetMyOrgAsync(global::Zitadel.Management.V1.GetMyOrgRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMyOrg, null, options, request);
      }
      /// <summary>
      /// Get Organization By Domain
      ///
      /// Deprecated: use [organization v2 service ListOrganizations](apis/resources/org_service_v2/organization-service-list-organizations.api.mdx) instead.
      ///
      /// Search an organization by the domain, overall organizations. The domain must match exactly.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetOrgByDomainGlobalResponse GetOrgByDomainGlobal(global::Zitadel.Management.V1.GetOrgByDomainGlobalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrgByDomainGlobal(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Organization By Domain
      ///
      /// Deprecated: use [organization v2 service ListOrganizations](apis/resources/org_service_v2/organization-service-list-organizations.api.mdx) instead.
      ///
      /// Search an organization by the domain, overall organizations. The domain must match exactly.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetOrgByDomainGlobalResponse GetOrgByDomainGlobal(global::Zitadel.Management.V1.GetOrgByDomainGlobalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrgByDomainGlobal, null, options, request);
      }
      /// <summary>
      /// Get Organization By Domain
      ///
      /// Deprecated: use [organization v2 service ListOrganizations](apis/resources/org_service_v2/organization-service-list-organizations.api.mdx) instead.
      ///
      /// Search an organization by the domain, overall organizations. The domain must match exactly.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetOrgByDomainGlobalResponse> GetOrgByDomainGlobalAsync(global::Zitadel.Management.V1.GetOrgByDomainGlobalRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrgByDomainGlobalAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Organization By Domain
      ///
      /// Deprecated: use [organization v2 service ListOrganizations](apis/resources/org_service_v2/organization-service-list-organizations.api.mdx) instead.
      ///
      /// Search an organization by the domain, overall organizations. The domain must match exactly.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetOrgByDomainGlobalResponse> GetOrgByDomainGlobalAsync(global::Zitadel.Management.V1.GetOrgByDomainGlobalRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrgByDomainGlobal, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListOrgChangesResponse ListOrgChanges(global::Zitadel.Management.V1.ListOrgChangesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrgChanges(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListOrgChangesResponse ListOrgChanges(global::Zitadel.Management.V1.ListOrgChangesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListOrgChanges, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListOrgChangesResponse> ListOrgChangesAsync(global::Zitadel.Management.V1.ListOrgChangesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrgChangesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListOrgChangesResponse> ListOrgChangesAsync(global::Zitadel.Management.V1.ListOrgChangesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListOrgChanges, null, options, request);
      }
      /// <summary>
      /// Create Organization
      ///
      /// Deprecated: use [organization service v2 CreateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-create-organization.api.mdx) instead
      ///
      /// Create a new organization. Based on the given name a domain will be generated to be able to identify users within an organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddOrgResponse AddOrg(global::Zitadel.Management.V1.AddOrgRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOrg(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create Organization
      ///
      /// Deprecated: use [organization service v2 CreateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-create-organization.api.mdx) instead
      ///
      /// Create a new organization. Based on the given name a domain will be generated to be able to identify users within an organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddOrgResponse AddOrg(global::Zitadel.Management.V1.AddOrgRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddOrg, null, options, request);
      }
      /// <summary>
      /// Create Organization
      ///
      /// Deprecated: use [organization service v2 CreateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-create-organization.api.mdx) instead
      ///
      /// Create a new organization. Based on the given name a domain will be generated to be able to identify users within an organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddOrgResponse> AddOrgAsync(global::Zitadel.Management.V1.AddOrgRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOrgAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create Organization
      ///
      /// Deprecated: use [organization service v2 CreateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-create-organization.api.mdx) instead
      ///
      /// Create a new organization. Based on the given name a domain will be generated to be able to identify users within an organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddOrgResponse> AddOrgAsync(global::Zitadel.Management.V1.AddOrgRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddOrg, null, options, request);
      }
      /// <summary>
      /// Update Organization
      ///
      /// Deprecated: use [organization service v2 UpdateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-update-organization.api.mdx) instead.
      ///
      /// Change the name of the organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateOrgResponse UpdateOrg(global::Zitadel.Management.V1.UpdateOrgRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrg(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update Organization
      ///
      /// Deprecated: use [organization service v2 UpdateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-update-organization.api.mdx) instead.
      ///
      /// Change the name of the organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateOrgResponse UpdateOrg(global::Zitadel.Management.V1.UpdateOrgRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateOrg, null, options, request);
      }
      /// <summary>
      /// Update Organization
      ///
      /// Deprecated: use [organization service v2 UpdateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-update-organization.api.mdx) instead.
      ///
      /// Change the name of the organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateOrgResponse> UpdateOrgAsync(global::Zitadel.Management.V1.UpdateOrgRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrgAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update Organization
      ///
      /// Deprecated: use [organization service v2 UpdateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-update-organization.api.mdx) instead.
      ///
      /// Change the name of the organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateOrgResponse> UpdateOrgAsync(global::Zitadel.Management.V1.UpdateOrgRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateOrg, null, options, request);
      }
      /// <summary>
      /// Deactivate Organization
      ///
      /// Deprecated: use [organization service v2 DeactivateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-deactivate-organization.api.mdx) instead.
      ///
      /// Sets the state of my organization to deactivated. Users of this organization will not be able to log in.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeactivateOrgResponse DeactivateOrg(global::Zitadel.Management.V1.DeactivateOrgRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateOrg(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivate Organization
      ///
      /// Deprecated: use [organization service v2 DeactivateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-deactivate-organization.api.mdx) instead.
      ///
      /// Sets the state of my organization to deactivated. Users of this organization will not be able to log in.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeactivateOrgResponse DeactivateOrg(global::Zitadel.Management.V1.DeactivateOrgRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeactivateOrg, null, options, request);
      }
      /// <summary>
      /// Deactivate Organization
      ///
      /// Deprecated: use [organization service v2 DeactivateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-deactivate-organization.api.mdx) instead.
      ///
      /// Sets the state of my organization to deactivated. Users of this organization will not be able to log in.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeactivateOrgResponse> DeactivateOrgAsync(global::Zitadel.Management.V1.DeactivateOrgRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateOrgAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivate Organization
      ///
      /// Deprecated: use [organization service v2 DeactivateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-deactivate-organization.api.mdx) instead.
      ///
      /// Sets the state of my organization to deactivated. Users of this organization will not be able to log in.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeactivateOrgResponse> DeactivateOrgAsync(global::Zitadel.Management.V1.DeactivateOrgRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeactivateOrg, null, options, request);
      }
      /// <summary>
      /// Reactivate Organization
      ///
      /// Deprecated: use [organization service v2 ActivateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-activate-organization.api.mdx) instead.
      ///
      /// Set the state of my organization to active. The state of the organization has to be deactivated to perform the request. Users of this organization will be able to log in again.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ReactivateOrgResponse ReactivateOrg(global::Zitadel.Management.V1.ReactivateOrgRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateOrg(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reactivate Organization
      ///
      /// Deprecated: use [organization service v2 ActivateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-activate-organization.api.mdx) instead.
      ///
      /// Set the state of my organization to active. The state of the organization has to be deactivated to perform the request. Users of this organization will be able to log in again.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ReactivateOrgResponse ReactivateOrg(global::Zitadel.Management.V1.ReactivateOrgRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReactivateOrg, null, options, request);
      }
      /// <summary>
      /// Reactivate Organization
      ///
      /// Deprecated: use [organization service v2 ActivateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-activate-organization.api.mdx) instead.
      ///
      /// Set the state of my organization to active. The state of the organization has to be deactivated to perform the request. Users of this organization will be able to log in again.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ReactivateOrgResponse> ReactivateOrgAsync(global::Zitadel.Management.V1.ReactivateOrgRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateOrgAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reactivate Organization
      ///
      /// Deprecated: use [organization service v2 ActivateOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-activate-organization.api.mdx) instead.
      ///
      /// Set the state of my organization to active. The state of the organization has to be deactivated to perform the request. Users of this organization will be able to log in again.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ReactivateOrgResponse> ReactivateOrgAsync(global::Zitadel.Management.V1.ReactivateOrgRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReactivateOrg, null, options, request);
      }
      /// <summary>
      /// Delete Organization
      ///
      /// Deprecated: use [organization service v2 DeleteOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization.api.mdx) instead.
      ///
      /// Deletes my organization and all its resources (Users, Projects, Grants to and from the org). Users of this organization will not be able to log in.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveOrgResponse RemoveOrg(global::Zitadel.Management.V1.RemoveOrgRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOrg(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete Organization
      ///
      /// Deprecated: use [organization service v2 DeleteOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization.api.mdx) instead.
      ///
      /// Deletes my organization and all its resources (Users, Projects, Grants to and from the org). Users of this organization will not be able to log in.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveOrgResponse RemoveOrg(global::Zitadel.Management.V1.RemoveOrgRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveOrg, null, options, request);
      }
      /// <summary>
      /// Delete Organization
      ///
      /// Deprecated: use [organization service v2 DeleteOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization.api.mdx) instead.
      ///
      /// Deletes my organization and all its resources (Users, Projects, Grants to and from the org). Users of this organization will not be able to log in.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveOrgResponse> RemoveOrgAsync(global::Zitadel.Management.V1.RemoveOrgRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOrgAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete Organization
      ///
      /// Deprecated: use [organization service v2 DeleteOrganization](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization.api.mdx) instead.
      ///
      /// Deletes my organization and all its resources (Users, Projects, Grants to and from the org). Users of this organization will not be able to log in.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveOrgResponse> RemoveOrgAsync(global::Zitadel.Management.V1.RemoveOrgRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveOrg, null, options, request);
      }
      /// <summary>
      /// Set Organization Metadata
      ///
      /// Deprecated: use [organization service v2 SetOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-set-organization-metadata.api.mdx) instead.
      ///
      /// This endpoint either adds or updates a metadata value for the requested key. Make sure the value is base64 encoded.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetOrgMetadataResponse SetOrgMetadata(global::Zitadel.Management.V1.SetOrgMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetOrgMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set Organization Metadata
      ///
      /// Deprecated: use [organization service v2 SetOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-set-organization-metadata.api.mdx) instead.
      ///
      /// This endpoint either adds or updates a metadata value for the requested key. Make sure the value is base64 encoded.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetOrgMetadataResponse SetOrgMetadata(global::Zitadel.Management.V1.SetOrgMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetOrgMetadata, null, options, request);
      }
      /// <summary>
      /// Set Organization Metadata
      ///
      /// Deprecated: use [organization service v2 SetOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-set-organization-metadata.api.mdx) instead.
      ///
      /// This endpoint either adds or updates a metadata value for the requested key. Make sure the value is base64 encoded.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetOrgMetadataResponse> SetOrgMetadataAsync(global::Zitadel.Management.V1.SetOrgMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetOrgMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set Organization Metadata
      ///
      /// Deprecated: use [organization service v2 SetOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-set-organization-metadata.api.mdx) instead.
      ///
      /// This endpoint either adds or updates a metadata value for the requested key. Make sure the value is base64 encoded.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetOrgMetadataResponse> SetOrgMetadataAsync(global::Zitadel.Management.V1.SetOrgMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetOrgMetadata, null, options, request);
      }
      /// <summary>
      /// Bulk Set Organization Metadata
      ///
      /// Deprecated: use [organization service v2 SetOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-set-organization-metadata.api.mdx) instead.
      ///
      /// This endpoint sets a list of metadata to the organization. Make sure the values are base64 encoded.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.BulkSetOrgMetadataResponse BulkSetOrgMetadata(global::Zitadel.Management.V1.BulkSetOrgMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkSetOrgMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bulk Set Organization Metadata
      ///
      /// Deprecated: use [organization service v2 SetOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-set-organization-metadata.api.mdx) instead.
      ///
      /// This endpoint sets a list of metadata to the organization. Make sure the values are base64 encoded.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.BulkSetOrgMetadataResponse BulkSetOrgMetadata(global::Zitadel.Management.V1.BulkSetOrgMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BulkSetOrgMetadata, null, options, request);
      }
      /// <summary>
      /// Bulk Set Organization Metadata
      ///
      /// Deprecated: use [organization service v2 SetOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-set-organization-metadata.api.mdx) instead.
      ///
      /// This endpoint sets a list of metadata to the organization. Make sure the values are base64 encoded.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.BulkSetOrgMetadataResponse> BulkSetOrgMetadataAsync(global::Zitadel.Management.V1.BulkSetOrgMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkSetOrgMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bulk Set Organization Metadata
      ///
      /// Deprecated: use [organization service v2 SetOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-set-organization-metadata.api.mdx) instead.
      ///
      /// This endpoint sets a list of metadata to the organization. Make sure the values are base64 encoded.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.BulkSetOrgMetadataResponse> BulkSetOrgMetadataAsync(global::Zitadel.Management.V1.BulkSetOrgMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BulkSetOrgMetadata, null, options, request);
      }
      /// <summary>
      /// Search Organization Metadata
      ///
      /// Deprecated: use [organization service v2 ListOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-list-organization-metadata.api.mdx) instead.
      ///
      /// Get the metadata of an organization filtered by your query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListOrgMetadataResponse ListOrgMetadata(global::Zitadel.Management.V1.ListOrgMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrgMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Organization Metadata
      ///
      /// Deprecated: use [organization service v2 ListOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-list-organization-metadata.api.mdx) instead.
      ///
      /// Get the metadata of an organization filtered by your query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListOrgMetadataResponse ListOrgMetadata(global::Zitadel.Management.V1.ListOrgMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListOrgMetadata, null, options, request);
      }
      /// <summary>
      /// Search Organization Metadata
      ///
      /// Deprecated: use [organization service v2 ListOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-list-organization-metadata.api.mdx) instead.
      ///
      /// Get the metadata of an organization filtered by your query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListOrgMetadataResponse> ListOrgMetadataAsync(global::Zitadel.Management.V1.ListOrgMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrgMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Organization Metadata
      ///
      /// Deprecated: use [organization service v2 ListOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-list-organization-metadata.api.mdx) instead.
      ///
      /// Get the metadata of an organization filtered by your query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListOrgMetadataResponse> ListOrgMetadataAsync(global::Zitadel.Management.V1.ListOrgMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListOrgMetadata, null, options, request);
      }
      /// <summary>
      /// Get Organization Metadata By Key
      ///
      /// Deprecated: use [organization service v2 ListOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-list-organization-metadata.api.mdx) instead.
      ///
      /// Get a metadata object from an organization by a specific key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetOrgMetadataResponse GetOrgMetadata(global::Zitadel.Management.V1.GetOrgMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrgMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Organization Metadata By Key
      ///
      /// Deprecated: use [organization service v2 ListOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-list-organization-metadata.api.mdx) instead.
      ///
      /// Get a metadata object from an organization by a specific key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetOrgMetadataResponse GetOrgMetadata(global::Zitadel.Management.V1.GetOrgMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrgMetadata, null, options, request);
      }
      /// <summary>
      /// Get Organization Metadata By Key
      ///
      /// Deprecated: use [organization service v2 ListOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-list-organization-metadata.api.mdx) instead.
      ///
      /// Get a metadata object from an organization by a specific key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetOrgMetadataResponse> GetOrgMetadataAsync(global::Zitadel.Management.V1.GetOrgMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrgMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Organization Metadata By Key
      ///
      /// Deprecated: use [organization service v2 ListOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-list-organization-metadata.api.mdx) instead.
      ///
      /// Get a metadata object from an organization by a specific key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetOrgMetadataResponse> GetOrgMetadataAsync(global::Zitadel.Management.V1.GetOrgMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrgMetadata, null, options, request);
      }
      /// <summary>
      /// Delete Organization Metadata By Key
      ///
      /// Deprecated: use [organization service v2 DeleteOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization-metadata.api.mdx) instead.
      ///
      /// Remove a metadata object from an organization with a specific key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveOrgMetadataResponse RemoveOrgMetadata(global::Zitadel.Management.V1.RemoveOrgMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOrgMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete Organization Metadata By Key
      ///
      /// Deprecated: use [organization service v2 DeleteOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization-metadata.api.mdx) instead.
      ///
      /// Remove a metadata object from an organization with a specific key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveOrgMetadataResponse RemoveOrgMetadata(global::Zitadel.Management.V1.RemoveOrgMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveOrgMetadata, null, options, request);
      }
      /// <summary>
      /// Delete Organization Metadata By Key
      ///
      /// Deprecated: use [organization service v2 DeleteOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization-metadata.api.mdx) instead.
      ///
      /// Remove a metadata object from an organization with a specific key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveOrgMetadataResponse> RemoveOrgMetadataAsync(global::Zitadel.Management.V1.RemoveOrgMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOrgMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete Organization Metadata By Key
      ///
      /// Deprecated: use [organization service v2 DeleteOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization-metadata.api.mdx) instead.
      ///
      /// Remove a metadata object from an organization with a specific key.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveOrgMetadataResponse> RemoveOrgMetadataAsync(global::Zitadel.Management.V1.RemoveOrgMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveOrgMetadata, null, options, request);
      }
      /// <summary>
      /// Bulk Delete Metadata
      ///
      /// Deprecated: use [organization service v2 DeleteOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization-metadata.api.mdx) instead.
      ///
      /// Remove a list of metadata objects from an organization with a list of keys.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.BulkRemoveOrgMetadataResponse BulkRemoveOrgMetadata(global::Zitadel.Management.V1.BulkRemoveOrgMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkRemoveOrgMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bulk Delete Metadata
      ///
      /// Deprecated: use [organization service v2 DeleteOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization-metadata.api.mdx) instead.
      ///
      /// Remove a list of metadata objects from an organization with a list of keys.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.BulkRemoveOrgMetadataResponse BulkRemoveOrgMetadata(global::Zitadel.Management.V1.BulkRemoveOrgMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BulkRemoveOrgMetadata, null, options, request);
      }
      /// <summary>
      /// Bulk Delete Metadata
      ///
      /// Deprecated: use [organization service v2 DeleteOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization-metadata.api.mdx) instead.
      ///
      /// Remove a list of metadata objects from an organization with a list of keys.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.BulkRemoveOrgMetadataResponse> BulkRemoveOrgMetadataAsync(global::Zitadel.Management.V1.BulkRemoveOrgMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkRemoveOrgMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bulk Delete Metadata
      ///
      /// Deprecated: use [organization service v2 DeleteOrganizationMetadata](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization-metadata.api.mdx) instead.
      ///
      /// Remove a list of metadata objects from an organization with a list of keys.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.BulkRemoveOrgMetadataResponse> BulkRemoveOrgMetadataAsync(global::Zitadel.Management.V1.BulkRemoveOrgMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BulkRemoveOrgMetadata, null, options, request);
      }
      /// <summary>
      /// Add Domain
      ///
      /// Deprecated: use [organization service v2 AddOrganizationDomain](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-add-organization-domain.api.mdx) instead.
      ///
      /// Add a new domain to an organization. The domains are used to identify to which organization a user belongs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddOrgDomainResponse AddOrgDomain(global::Zitadel.Management.V1.AddOrgDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOrgDomain(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add Domain
      ///
      /// Deprecated: use [organization service v2 AddOrganizationDomain](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-add-organization-domain.api.mdx) instead.
      ///
      /// Add a new domain to an organization. The domains are used to identify to which organization a user belongs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddOrgDomainResponse AddOrgDomain(global::Zitadel.Management.V1.AddOrgDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddOrgDomain, null, options, request);
      }
      /// <summary>
      /// Add Domain
      ///
      /// Deprecated: use [organization service v2 AddOrganizationDomain](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-add-organization-domain.api.mdx) instead.
      ///
      /// Add a new domain to an organization. The domains are used to identify to which organization a user belongs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddOrgDomainResponse> AddOrgDomainAsync(global::Zitadel.Management.V1.AddOrgDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOrgDomainAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add Domain
      ///
      /// Deprecated: use [organization service v2 AddOrganizationDomain](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-add-organization-domain.api.mdx) instead.
      ///
      /// Add a new domain to an organization. The domains are used to identify to which organization a user belongs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddOrgDomainResponse> AddOrgDomainAsync(global::Zitadel.Management.V1.AddOrgDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddOrgDomain, null, options, request);
      }
      /// <summary>
      /// Search Domains
      ///
      /// Deprecated: use [organization service v2 ListOrganizationDomains](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-list-organization-domains.api.mdx) instead.
      ///
      /// Returns the list of registered domains of an organization. The domains are used to identify to which organization a user belongs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListOrgDomainsResponse ListOrgDomains(global::Zitadel.Management.V1.ListOrgDomainsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrgDomains(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Domains
      ///
      /// Deprecated: use [organization service v2 ListOrganizationDomains](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-list-organization-domains.api.mdx) instead.
      ///
      /// Returns the list of registered domains of an organization. The domains are used to identify to which organization a user belongs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListOrgDomainsResponse ListOrgDomains(global::Zitadel.Management.V1.ListOrgDomainsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListOrgDomains, null, options, request);
      }
      /// <summary>
      /// Search Domains
      ///
      /// Deprecated: use [organization service v2 ListOrganizationDomains](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-list-organization-domains.api.mdx) instead.
      ///
      /// Returns the list of registered domains of an organization. The domains are used to identify to which organization a user belongs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListOrgDomainsResponse> ListOrgDomainsAsync(global::Zitadel.Management.V1.ListOrgDomainsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrgDomainsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Domains
      ///
      /// Deprecated: use [organization service v2 ListOrganizationDomains](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-list-organization-domains.api.mdx) instead.
      ///
      /// Returns the list of registered domains of an organization. The domains are used to identify to which organization a user belongs.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListOrgDomainsResponse> ListOrgDomainsAsync(global::Zitadel.Management.V1.ListOrgDomainsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListOrgDomains, null, options, request);
      }
      /// <summary>
      /// Remove Domain
      ///
      /// Deprecated: use [organization service v2 DeleteOrganizationDomain](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization-domain.api.mdx) instead.
      ///
      /// Delete a new domain from an organization. The domains are used to identify to which organization a user belongs. If the uses use the domain for login, this will not be possible afterwards. They have to use another domain instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveOrgDomainResponse RemoveOrgDomain(global::Zitadel.Management.V1.RemoveOrgDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOrgDomain(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Domain
      ///
      /// Deprecated: use [organization service v2 DeleteOrganizationDomain](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization-domain.api.mdx) instead.
      ///
      /// Delete a new domain from an organization. The domains are used to identify to which organization a user belongs. If the uses use the domain for login, this will not be possible afterwards. They have to use another domain instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveOrgDomainResponse RemoveOrgDomain(global::Zitadel.Management.V1.RemoveOrgDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveOrgDomain, null, options, request);
      }
      /// <summary>
      /// Remove Domain
      ///
      /// Deprecated: use [organization service v2 DeleteOrganizationDomain](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization-domain.api.mdx) instead.
      ///
      /// Delete a new domain from an organization. The domains are used to identify to which organization a user belongs. If the uses use the domain for login, this will not be possible afterwards. They have to use another domain instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveOrgDomainResponse> RemoveOrgDomainAsync(global::Zitadel.Management.V1.RemoveOrgDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOrgDomainAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Domain
      ///
      /// Deprecated: use [organization service v2 DeleteOrganizationDomain](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-delete-organization-domain.api.mdx) instead.
      ///
      /// Delete a new domain from an organization. The domains are used to identify to which organization a user belongs. If the uses use the domain for login, this will not be possible afterwards. They have to use another domain instead.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveOrgDomainResponse> RemoveOrgDomainAsync(global::Zitadel.Management.V1.RemoveOrgDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveOrgDomain, null, options, request);
      }
      /// <summary>
      /// Generate Domain Verification
      ///
      /// Deprecated: use [organization service v2 GenerateOrganizationDomainValidation](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-generate-organization-domain-validation.api.mdx) instead.
      ///
      /// Generate a new file to be able to verify your domain with DNS or HTTP challenge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GenerateOrgDomainValidationResponse GenerateOrgDomainValidation(global::Zitadel.Management.V1.GenerateOrgDomainValidationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateOrgDomainValidation(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generate Domain Verification
      ///
      /// Deprecated: use [organization service v2 GenerateOrganizationDomainValidation](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-generate-organization-domain-validation.api.mdx) instead.
      ///
      /// Generate a new file to be able to verify your domain with DNS or HTTP challenge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GenerateOrgDomainValidationResponse GenerateOrgDomainValidation(global::Zitadel.Management.V1.GenerateOrgDomainValidationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GenerateOrgDomainValidation, null, options, request);
      }
      /// <summary>
      /// Generate Domain Verification
      ///
      /// Deprecated: use [organization service v2 GenerateOrganizationDomainValidation](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-generate-organization-domain-validation.api.mdx) instead.
      ///
      /// Generate a new file to be able to verify your domain with DNS or HTTP challenge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GenerateOrgDomainValidationResponse> GenerateOrgDomainValidationAsync(global::Zitadel.Management.V1.GenerateOrgDomainValidationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GenerateOrgDomainValidationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generate Domain Verification
      ///
      /// Deprecated: use [organization service v2 GenerateOrganizationDomainValidation](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-generate-organization-domain-validation.api.mdx) instead.
      ///
      /// Generate a new file to be able to verify your domain with DNS or HTTP challenge.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GenerateOrgDomainValidationResponse> GenerateOrgDomainValidationAsync(global::Zitadel.Management.V1.GenerateOrgDomainValidationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GenerateOrgDomainValidation, null, options, request);
      }
      /// <summary>
      /// Verify Domain
      ///
      /// Deprecated: use [organization service v2 VerifyOrganizationDomain](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-verify-organization-domain.api.mdx) instead.
      ///
      /// Make sure you have added the required verification to your domain, depending on the method you have chosen (HTTP or DNS challenge). ZITADEL will check it and set the domain as verified if it was successful. A verify domain has to be unique.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ValidateOrgDomainResponse ValidateOrgDomain(global::Zitadel.Management.V1.ValidateOrgDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidateOrgDomain(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify Domain
      ///
      /// Deprecated: use [organization service v2 VerifyOrganizationDomain](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-verify-organization-domain.api.mdx) instead.
      ///
      /// Make sure you have added the required verification to your domain, depending on the method you have chosen (HTTP or DNS challenge). ZITADEL will check it and set the domain as verified if it was successful. A verify domain has to be unique.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ValidateOrgDomainResponse ValidateOrgDomain(global::Zitadel.Management.V1.ValidateOrgDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ValidateOrgDomain, null, options, request);
      }
      /// <summary>
      /// Verify Domain
      ///
      /// Deprecated: use [organization service v2 VerifyOrganizationDomain](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-verify-organization-domain.api.mdx) instead.
      ///
      /// Make sure you have added the required verification to your domain, depending on the method you have chosen (HTTP or DNS challenge). ZITADEL will check it and set the domain as verified if it was successful. A verify domain has to be unique.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ValidateOrgDomainResponse> ValidateOrgDomainAsync(global::Zitadel.Management.V1.ValidateOrgDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ValidateOrgDomainAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify Domain
      ///
      /// Deprecated: use [organization service v2 VerifyOrganizationDomain](apis/resources/org_service_v2beta/zitadel-org-v-2-beta-organization-service-verify-organization-domain.api.mdx) instead.
      ///
      /// Make sure you have added the required verification to your domain, depending on the method you have chosen (HTTP or DNS challenge). ZITADEL will check it and set the domain as verified if it was successful. A verify domain has to be unique.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ValidateOrgDomainResponse> ValidateOrgDomainAsync(global::Zitadel.Management.V1.ValidateOrgDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ValidateOrgDomain, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetPrimaryOrgDomainResponse SetPrimaryOrgDomain(global::Zitadel.Management.V1.SetPrimaryOrgDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetPrimaryOrgDomain(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetPrimaryOrgDomainResponse SetPrimaryOrgDomain(global::Zitadel.Management.V1.SetPrimaryOrgDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetPrimaryOrgDomain, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetPrimaryOrgDomainResponse> SetPrimaryOrgDomainAsync(global::Zitadel.Management.V1.SetPrimaryOrgDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetPrimaryOrgDomainAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetPrimaryOrgDomainResponse> SetPrimaryOrgDomainAsync(global::Zitadel.Management.V1.SetPrimaryOrgDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetPrimaryOrgDomain, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListOrgMemberRolesResponse ListOrgMemberRoles(global::Zitadel.Management.V1.ListOrgMemberRolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrgMemberRoles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListOrgMemberRolesResponse ListOrgMemberRoles(global::Zitadel.Management.V1.ListOrgMemberRolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListOrgMemberRoles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListOrgMemberRolesResponse> ListOrgMemberRolesAsync(global::Zitadel.Management.V1.ListOrgMemberRolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrgMemberRolesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListOrgMemberRolesResponse> ListOrgMemberRolesAsync(global::Zitadel.Management.V1.ListOrgMemberRolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListOrgMemberRoles, null, options, request);
      }
      /// <summary>
      /// List Organization Members
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the organization level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListOrgMembersResponse ListOrgMembers(global::Zitadel.Management.V1.ListOrgMembersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrgMembers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Organization Members
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the organization level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListOrgMembersResponse ListOrgMembers(global::Zitadel.Management.V1.ListOrgMembersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListOrgMembers, null, options, request);
      }
      /// <summary>
      /// List Organization Members
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the organization level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListOrgMembersResponse> ListOrgMembersAsync(global::Zitadel.Management.V1.ListOrgMembersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrgMembersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Organization Members
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the organization level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListOrgMembersResponse> ListOrgMembersAsync(global::Zitadel.Management.V1.ListOrgMembersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListOrgMembers, null, options, request);
      }
      /// <summary>
      /// Add Organization Member
      ///
      /// Deprecated: use [CreateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-create-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request adds a new user to the members list on the organization level with one or multiple roles.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddOrgMemberResponse AddOrgMember(global::Zitadel.Management.V1.AddOrgMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOrgMember(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add Organization Member
      ///
      /// Deprecated: use [CreateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-create-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request adds a new user to the members list on the organization level with one or multiple roles.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddOrgMemberResponse AddOrgMember(global::Zitadel.Management.V1.AddOrgMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddOrgMember, null, options, request);
      }
      /// <summary>
      /// Add Organization Member
      ///
      /// Deprecated: use [CreateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-create-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request adds a new user to the members list on the organization level with one or multiple roles.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddOrgMemberResponse> AddOrgMemberAsync(global::Zitadel.Management.V1.AddOrgMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOrgMemberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add Organization Member
      ///
      /// Deprecated: use [CreateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-create-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request adds a new user to the members list on the organization level with one or multiple roles.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddOrgMemberResponse> AddOrgMemberAsync(global::Zitadel.Management.V1.AddOrgMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddOrgMember, null, options, request);
      }
      /// <summary>
      /// Update Organization Member
      ///
      /// Deprecated: use [UpdateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-update-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateOrgMemberResponse UpdateOrgMember(global::Zitadel.Management.V1.UpdateOrgMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrgMember(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update Organization Member
      ///
      /// Deprecated: use [UpdateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-update-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateOrgMemberResponse UpdateOrgMember(global::Zitadel.Management.V1.UpdateOrgMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateOrgMember, null, options, request);
      }
      /// <summary>
      /// Update Organization Member
      ///
      /// Deprecated: use [UpdateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-update-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateOrgMemberResponse> UpdateOrgMemberAsync(global::Zitadel.Management.V1.UpdateOrgMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrgMemberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update Organization Member
      ///
      /// Deprecated: use [UpdateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-update-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateOrgMemberResponse> UpdateOrgMemberAsync(global::Zitadel.Management.V1.UpdateOrgMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateOrgMember, null, options, request);
      }
      /// <summary>
      /// Remove Organization Member
      ///
      /// Deprecated: use [DeleteAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-delete-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on an instance level. The user can still have roles on another level (iam, project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveOrgMemberResponse RemoveOrgMember(global::Zitadel.Management.V1.RemoveOrgMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOrgMember(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Organization Member
      ///
      /// Deprecated: use [DeleteAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-delete-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on an instance level. The user can still have roles on another level (iam, project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveOrgMemberResponse RemoveOrgMember(global::Zitadel.Management.V1.RemoveOrgMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveOrgMember, null, options, request);
      }
      /// <summary>
      /// Remove Organization Member
      ///
      /// Deprecated: use [DeleteAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-delete-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on an instance level. The user can still have roles on another level (iam, project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveOrgMemberResponse> RemoveOrgMemberAsync(global::Zitadel.Management.V1.RemoveOrgMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOrgMemberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Organization Member
      ///
      /// Deprecated: use [DeleteAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-delete-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on an instance level. The user can still have roles on another level (iam, project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveOrgMemberResponse> RemoveOrgMemberAsync(global::Zitadel.Management.V1.RemoveOrgMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveOrgMember, null, options, request);
      }
      /// <summary>
      /// Get Project By ID
      ///
      /// Deprecated: use [project v2 service GetProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-get-project.api.mdx) instead.
      ///
      /// Returns a project owned by the organization (no granted projects). A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetProjectByIDResponse GetProjectByID(global::Zitadel.Management.V1.GetProjectByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProjectByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Project By ID
      ///
      /// Deprecated: use [project v2 service GetProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-get-project.api.mdx) instead.
      ///
      /// Returns a project owned by the organization (no granted projects). A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetProjectByIDResponse GetProjectByID(global::Zitadel.Management.V1.GetProjectByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProjectByID, null, options, request);
      }
      /// <summary>
      /// Get Project By ID
      ///
      /// Deprecated: use [project v2 service GetProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-get-project.api.mdx) instead.
      ///
      /// Returns a project owned by the organization (no granted projects). A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetProjectByIDResponse> GetProjectByIDAsync(global::Zitadel.Management.V1.GetProjectByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProjectByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Project By ID
      ///
      /// Deprecated: use [project v2 service GetProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-get-project.api.mdx) instead.
      ///
      /// Returns a project owned by the organization (no granted projects). A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetProjectByIDResponse> GetProjectByIDAsync(global::Zitadel.Management.V1.GetProjectByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProjectByID, null, options, request);
      }
      /// <summary>
      /// Get Granted Project By ID
      ///
      /// Deprecated: use [project v2 service ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a project owned by another organization and granted to my organization. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetGrantedProjectByIDResponse GetGrantedProjectByID(global::Zitadel.Management.V1.GetGrantedProjectByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGrantedProjectByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Granted Project By ID
      ///
      /// Deprecated: use [project v2 service ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a project owned by another organization and granted to my organization. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetGrantedProjectByIDResponse GetGrantedProjectByID(global::Zitadel.Management.V1.GetGrantedProjectByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetGrantedProjectByID, null, options, request);
      }
      /// <summary>
      /// Get Granted Project By ID
      ///
      /// Deprecated: use [project v2 service ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a project owned by another organization and granted to my organization. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetGrantedProjectByIDResponse> GetGrantedProjectByIDAsync(global::Zitadel.Management.V1.GetGrantedProjectByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetGrantedProjectByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Granted Project By ID
      ///
      /// Deprecated: use [project v2 service ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a project owned by another organization and granted to my organization. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetGrantedProjectByIDResponse> GetGrantedProjectByIDAsync(global::Zitadel.Management.V1.GetGrantedProjectByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetGrantedProjectByID, null, options, request);
      }
      /// <summary>
      /// Search Project
      ///
      /// Deprecated: use [project v2 service ListProjects](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-projects.api.mdx) instead.
      ///
      /// Lists projects my organization is the owner of (no granted projects). A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProjectsResponse ListProjects(global::Zitadel.Management.V1.ListProjectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjects(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Project
      ///
      /// Deprecated: use [project v2 service ListProjects](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-projects.api.mdx) instead.
      ///
      /// Lists projects my organization is the owner of (no granted projects). A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProjectsResponse ListProjects(global::Zitadel.Management.V1.ListProjectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProjects, null, options, request);
      }
      /// <summary>
      /// Search Project
      ///
      /// Deprecated: use [project v2 service ListProjects](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-projects.api.mdx) instead.
      ///
      /// Lists projects my organization is the owner of (no granted projects). A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProjectsResponse> ListProjectsAsync(global::Zitadel.Management.V1.ListProjectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Project
      ///
      /// Deprecated: use [project v2 service ListProjects](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-projects.api.mdx) instead.
      ///
      /// Lists projects my organization is the owner of (no granted projects). A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProjectsResponse> ListProjectsAsync(global::Zitadel.Management.V1.ListProjectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProjects, null, options, request);
      }
      /// <summary>
      /// Search Granted Project
      ///
      /// Deprecated: use [project v2 service ListProjects](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-projects.api.mdx) instead.
      ///
      /// Lists projects my organization got granted from another organization. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListGrantedProjectsResponse ListGrantedProjects(global::Zitadel.Management.V1.ListGrantedProjectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListGrantedProjects(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Granted Project
      ///
      /// Deprecated: use [project v2 service ListProjects](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-projects.api.mdx) instead.
      ///
      /// Lists projects my organization got granted from another organization. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListGrantedProjectsResponse ListGrantedProjects(global::Zitadel.Management.V1.ListGrantedProjectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListGrantedProjects, null, options, request);
      }
      /// <summary>
      /// Search Granted Project
      ///
      /// Deprecated: use [project v2 service ListProjects](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-projects.api.mdx) instead.
      ///
      /// Lists projects my organization got granted from another organization. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListGrantedProjectsResponse> ListGrantedProjectsAsync(global::Zitadel.Management.V1.ListGrantedProjectsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListGrantedProjectsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Granted Project
      ///
      /// Deprecated: use [project v2 service ListProjects](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-projects.api.mdx) instead.
      ///
      /// Lists projects my organization got granted from another organization. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListGrantedProjectsResponse> ListGrantedProjectsAsync(global::Zitadel.Management.V1.ListGrantedProjectsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListGrantedProjects, null, options, request);
      }
      /// <summary>
      /// Search Granted Project Roles
      ///
      /// Deprecated: use [project v2 service ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Lists the roles a granted projects has. These are the roles, that have been granted by the owner organization to my organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListGrantedProjectRolesResponse ListGrantedProjectRoles(global::Zitadel.Management.V1.ListGrantedProjectRolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListGrantedProjectRoles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Granted Project Roles
      ///
      /// Deprecated: use [project v2 service ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Lists the roles a granted projects has. These are the roles, that have been granted by the owner organization to my organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListGrantedProjectRolesResponse ListGrantedProjectRoles(global::Zitadel.Management.V1.ListGrantedProjectRolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListGrantedProjectRoles, null, options, request);
      }
      /// <summary>
      /// Search Granted Project Roles
      ///
      /// Deprecated: use [project v2 service ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Lists the roles a granted projects has. These are the roles, that have been granted by the owner organization to my organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListGrantedProjectRolesResponse> ListGrantedProjectRolesAsync(global::Zitadel.Management.V1.ListGrantedProjectRolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListGrantedProjectRolesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Granted Project Roles
      ///
      /// Deprecated: use [project v2 service ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Lists the roles a granted projects has. These are the roles, that have been granted by the owner organization to my organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListGrantedProjectRolesResponse> ListGrantedProjectRolesAsync(global::Zitadel.Management.V1.ListGrantedProjectRolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListGrantedProjectRoles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProjectChangesResponse ListProjectChanges(global::Zitadel.Management.V1.ListProjectChangesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectChanges(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProjectChangesResponse ListProjectChanges(global::Zitadel.Management.V1.ListProjectChangesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProjectChanges, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProjectChangesResponse> ListProjectChangesAsync(global::Zitadel.Management.V1.ListProjectChangesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectChangesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProjectChangesResponse> ListProjectChangesAsync(global::Zitadel.Management.V1.ListProjectChangesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProjectChanges, null, options, request);
      }
      /// <summary>
      /// Create Project
      ///
      /// Deprecated: use [project v2 service CreateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-create-project.api.mdx) instead.
      ///
      /// Create a new project. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddProjectResponse AddProject(global::Zitadel.Management.V1.AddProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddProject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create Project
      ///
      /// Deprecated: use [project v2 service CreateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-create-project.api.mdx) instead.
      ///
      /// Create a new project. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddProjectResponse AddProject(global::Zitadel.Management.V1.AddProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddProject, null, options, request);
      }
      /// <summary>
      /// Create Project
      ///
      /// Deprecated: use [project v2 service CreateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-create-project.api.mdx) instead.
      ///
      /// Create a new project. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddProjectResponse> AddProjectAsync(global::Zitadel.Management.V1.AddProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddProjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create Project
      ///
      /// Deprecated: use [project v2 service CreateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-create-project.api.mdx) instead.
      ///
      /// Create a new project. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddProjectResponse> AddProjectAsync(global::Zitadel.Management.V1.AddProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddProject, null, options, request);
      }
      /// <summary>
      /// Update Project
      ///
      /// Deprecated: use [project v2 service UpdateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-update-project.api.mdx) instead.
      ///
      /// Update a project and its settings. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateProjectResponse UpdateProject(global::Zitadel.Management.V1.UpdateProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update Project
      ///
      /// Deprecated: use [project v2 service UpdateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-update-project.api.mdx) instead.
      ///
      /// Update a project and its settings. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateProjectResponse UpdateProject(global::Zitadel.Management.V1.UpdateProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateProject, null, options, request);
      }
      /// <summary>
      /// Update Project
      ///
      /// Deprecated: use [project v2 service UpdateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-update-project.api.mdx) instead.
      ///
      /// Update a project and its settings. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateProjectResponse> UpdateProjectAsync(global::Zitadel.Management.V1.UpdateProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update Project
      ///
      /// Deprecated: use [project v2 service UpdateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-update-project.api.mdx) instead.
      ///
      /// Update a project and its settings. A Project is a vessel for different applications sharing the same role context.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateProjectResponse> UpdateProjectAsync(global::Zitadel.Management.V1.UpdateProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateProject, null, options, request);
      }
      /// <summary>
      /// Deactivate Project
      ///
      /// Deprecated: use [project v2 service DeactivateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-deactivate-project.api.mdx) instead.
      ///
      /// Set the state of a project to deactivated. Request returns an error if the project is already deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeactivateProjectResponse DeactivateProject(global::Zitadel.Management.V1.DeactivateProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateProject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivate Project
      ///
      /// Deprecated: use [project v2 service DeactivateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-deactivate-project.api.mdx) instead.
      ///
      /// Set the state of a project to deactivated. Request returns an error if the project is already deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeactivateProjectResponse DeactivateProject(global::Zitadel.Management.V1.DeactivateProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeactivateProject, null, options, request);
      }
      /// <summary>
      /// Deactivate Project
      ///
      /// Deprecated: use [project v2 service DeactivateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-deactivate-project.api.mdx) instead.
      ///
      /// Set the state of a project to deactivated. Request returns an error if the project is already deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeactivateProjectResponse> DeactivateProjectAsync(global::Zitadel.Management.V1.DeactivateProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateProjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivate Project
      ///
      /// Deprecated: use [project v2 service DeactivateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-deactivate-project.api.mdx) instead.
      ///
      /// Set the state of a project to deactivated. Request returns an error if the project is already deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeactivateProjectResponse> DeactivateProjectAsync(global::Zitadel.Management.V1.DeactivateProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeactivateProject, null, options, request);
      }
      /// <summary>
      /// Reactivate Project
      ///
      /// Deprecated: use [project v2 service ActivateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-activate-project.api.mdx) instead.
      ///
      /// Set the state of a project to active. Request returns an error if the project is not deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ReactivateProjectResponse ReactivateProject(global::Zitadel.Management.V1.ReactivateProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateProject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reactivate Project
      ///
      /// Deprecated: use [project v2 service ActivateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-activate-project.api.mdx) instead.
      ///
      /// Set the state of a project to active. Request returns an error if the project is not deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ReactivateProjectResponse ReactivateProject(global::Zitadel.Management.V1.ReactivateProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReactivateProject, null, options, request);
      }
      /// <summary>
      /// Reactivate Project
      ///
      /// Deprecated: use [project v2 service ActivateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-activate-project.api.mdx) instead.
      ///
      /// Set the state of a project to active. Request returns an error if the project is not deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ReactivateProjectResponse> ReactivateProjectAsync(global::Zitadel.Management.V1.ReactivateProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateProjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reactivate Project
      ///
      /// Deprecated: use [project v2 service ActivateProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-activate-project.api.mdx) instead.
      ///
      /// Set the state of a project to active. Request returns an error if the project is not deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ReactivateProjectResponse> ReactivateProjectAsync(global::Zitadel.Management.V1.ReactivateProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReactivateProject, null, options, request);
      }
      /// <summary>
      /// Remove Project
      ///
      /// Deprecated: use [project v2 service DeleteProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-delete-project.api.mdx) instead.
      ///
      /// Set the state of a project to active. Request returns an error if the project is not deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveProjectResponse RemoveProject(global::Zitadel.Management.V1.RemoveProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveProject(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Project
      ///
      /// Deprecated: use [project v2 service DeleteProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-delete-project.api.mdx) instead.
      ///
      /// Set the state of a project to active. Request returns an error if the project is not deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveProjectResponse RemoveProject(global::Zitadel.Management.V1.RemoveProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveProject, null, options, request);
      }
      /// <summary>
      /// Remove Project
      ///
      /// Deprecated: use [project v2 service DeleteProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-delete-project.api.mdx) instead.
      ///
      /// Set the state of a project to active. Request returns an error if the project is not deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveProjectResponse> RemoveProjectAsync(global::Zitadel.Management.V1.RemoveProjectRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveProjectAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Project
      ///
      /// Deprecated: use [project v2 service DeleteProject](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-delete-project.api.mdx) instead.
      ///
      /// Set the state of a project to active. Request returns an error if the project is not deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveProjectResponse> RemoveProjectAsync(global::Zitadel.Management.V1.RemoveProjectRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveProject, null, options, request);
      }
      /// <summary>
      /// Search Project Roles
      ///
      /// Deprecated: use [project v2 service ListProjectRoles](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-roles.api.mdx) instead.
      ///
      /// Returns all roles of a project matching the search query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProjectRolesResponse ListProjectRoles(global::Zitadel.Management.V1.ListProjectRolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectRoles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Project Roles
      ///
      /// Deprecated: use [project v2 service ListProjectRoles](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-roles.api.mdx) instead.
      ///
      /// Returns all roles of a project matching the search query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProjectRolesResponse ListProjectRoles(global::Zitadel.Management.V1.ListProjectRolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProjectRoles, null, options, request);
      }
      /// <summary>
      /// Search Project Roles
      ///
      /// Deprecated: use [project v2 service ListProjectRoles](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-roles.api.mdx) instead.
      ///
      /// Returns all roles of a project matching the search query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProjectRolesResponse> ListProjectRolesAsync(global::Zitadel.Management.V1.ListProjectRolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectRolesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Project Roles
      ///
      /// Deprecated: use [project v2 service ListProjectRoles](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-roles.api.mdx) instead.
      ///
      /// Returns all roles of a project matching the search query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProjectRolesResponse> ListProjectRolesAsync(global::Zitadel.Management.V1.ListProjectRolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProjectRoles, null, options, request);
      }
      /// <summary>
      /// Add Project Role
      ///
      /// Deprecated: use [project v2 service AddProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-add-project-role.api.mdx) instead.
      ///
      /// Add a new project role to a project. The key must be unique within the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddProjectRoleResponse AddProjectRole(global::Zitadel.Management.V1.AddProjectRoleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddProjectRole(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add Project Role
      ///
      /// Deprecated: use [project v2 service AddProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-add-project-role.api.mdx) instead.
      ///
      /// Add a new project role to a project. The key must be unique within the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddProjectRoleResponse AddProjectRole(global::Zitadel.Management.V1.AddProjectRoleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddProjectRole, null, options, request);
      }
      /// <summary>
      /// Add Project Role
      ///
      /// Deprecated: use [project v2 service AddProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-add-project-role.api.mdx) instead.
      ///
      /// Add a new project role to a project. The key must be unique within the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddProjectRoleResponse> AddProjectRoleAsync(global::Zitadel.Management.V1.AddProjectRoleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddProjectRoleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add Project Role
      ///
      /// Deprecated: use [project v2 service AddProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-add-project-role.api.mdx) instead.
      ///
      /// Add a new project role to a project. The key must be unique within the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddProjectRoleResponse> AddProjectRoleAsync(global::Zitadel.Management.V1.AddProjectRoleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddProjectRole, null, options, request);
      }
      /// <summary>
      /// Bulk Add Project Role
      ///
      /// Deprecated: use [project v2 service AddProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-add-project-role.api.mdx) instead.
      ///
      /// Add a list of roles to a project. The keys must be unique within the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.BulkAddProjectRolesResponse BulkAddProjectRoles(global::Zitadel.Management.V1.BulkAddProjectRolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkAddProjectRoles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bulk Add Project Role
      ///
      /// Deprecated: use [project v2 service AddProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-add-project-role.api.mdx) instead.
      ///
      /// Add a list of roles to a project. The keys must be unique within the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.BulkAddProjectRolesResponse BulkAddProjectRoles(global::Zitadel.Management.V1.BulkAddProjectRolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BulkAddProjectRoles, null, options, request);
      }
      /// <summary>
      /// Bulk Add Project Role
      ///
      /// Deprecated: use [project v2 service AddProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-add-project-role.api.mdx) instead.
      ///
      /// Add a list of roles to a project. The keys must be unique within the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.BulkAddProjectRolesResponse> BulkAddProjectRolesAsync(global::Zitadel.Management.V1.BulkAddProjectRolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkAddProjectRolesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bulk Add Project Role
      ///
      /// Deprecated: use [project v2 service AddProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-add-project-role.api.mdx) instead.
      ///
      /// Add a list of roles to a project. The keys must be unique within the project.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.BulkAddProjectRolesResponse> BulkAddProjectRolesAsync(global::Zitadel.Management.V1.BulkAddProjectRolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BulkAddProjectRoles, null, options, request);
      }
      /// <summary>
      /// Change Project Role
      ///
      /// Deprecated: use [project v2 service UpdateProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-update-project-role.api.mdx) instead.
      ///
      /// Change a project role. The key is not editable. If a key should change, remove the role and create a new one.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateProjectRoleResponse UpdateProjectRole(global::Zitadel.Management.V1.UpdateProjectRoleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProjectRole(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change Project Role
      ///
      /// Deprecated: use [project v2 service UpdateProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-update-project-role.api.mdx) instead.
      ///
      /// Change a project role. The key is not editable. If a key should change, remove the role and create a new one.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateProjectRoleResponse UpdateProjectRole(global::Zitadel.Management.V1.UpdateProjectRoleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateProjectRole, null, options, request);
      }
      /// <summary>
      /// Change Project Role
      ///
      /// Deprecated: use [project v2 service UpdateProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-update-project-role.api.mdx) instead.
      ///
      /// Change a project role. The key is not editable. If a key should change, remove the role and create a new one.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateProjectRoleResponse> UpdateProjectRoleAsync(global::Zitadel.Management.V1.UpdateProjectRoleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProjectRoleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change Project Role
      ///
      /// Deprecated: use [project v2 service UpdateProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-update-project-role.api.mdx) instead.
      ///
      /// Change a project role. The key is not editable. If a key should change, remove the role and create a new one.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateProjectRoleResponse> UpdateProjectRoleAsync(global::Zitadel.Management.V1.UpdateProjectRoleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateProjectRole, null, options, request);
      }
      /// <summary>
      /// Remove Project Role
      ///
      /// Deprecated: use [project v2 service RemoveProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-remove-project-role.api.mdx) instead.
      ///
      /// Removes the role from the project and on every resource it has a dependency. This includes project grants and user grants.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveProjectRoleResponse RemoveProjectRole(global::Zitadel.Management.V1.RemoveProjectRoleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveProjectRole(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Project Role
      ///
      /// Deprecated: use [project v2 service RemoveProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-remove-project-role.api.mdx) instead.
      ///
      /// Removes the role from the project and on every resource it has a dependency. This includes project grants and user grants.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveProjectRoleResponse RemoveProjectRole(global::Zitadel.Management.V1.RemoveProjectRoleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveProjectRole, null, options, request);
      }
      /// <summary>
      /// Remove Project Role
      ///
      /// Deprecated: use [project v2 service RemoveProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-remove-project-role.api.mdx) instead.
      ///
      /// Removes the role from the project and on every resource it has a dependency. This includes project grants and user grants.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveProjectRoleResponse> RemoveProjectRoleAsync(global::Zitadel.Management.V1.RemoveProjectRoleRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveProjectRoleAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Project Role
      ///
      /// Deprecated: use [project v2 service RemoveProjectRole](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-remove-project-role.api.mdx) instead.
      ///
      /// Removes the role from the project and on every resource it has a dependency. This includes project grants and user grants.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveProjectRoleResponse> RemoveProjectRoleAsync(global::Zitadel.Management.V1.RemoveProjectRoleRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveProjectRole, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProjectMemberRolesResponse ListProjectMemberRoles(global::Zitadel.Management.V1.ListProjectMemberRolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectMemberRoles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProjectMemberRolesResponse ListProjectMemberRoles(global::Zitadel.Management.V1.ListProjectMemberRolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProjectMemberRoles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProjectMemberRolesResponse> ListProjectMemberRolesAsync(global::Zitadel.Management.V1.ListProjectMemberRolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectMemberRolesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProjectMemberRolesResponse> ListProjectMemberRolesAsync(global::Zitadel.Management.V1.ListProjectMemberRolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProjectMemberRoles, null, options, request);
      }
      /// <summary>
      /// List Project Members
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the project level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProjectMembersResponse ListProjectMembers(global::Zitadel.Management.V1.ListProjectMembersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectMembers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Project Members
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the project level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProjectMembersResponse ListProjectMembers(global::Zitadel.Management.V1.ListProjectMembersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProjectMembers, null, options, request);
      }
      /// <summary>
      /// List Project Members
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the project level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProjectMembersResponse> ListProjectMembersAsync(global::Zitadel.Management.V1.ListProjectMembersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectMembersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Project Members
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the project level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProjectMembersResponse> ListProjectMembersAsync(global::Zitadel.Management.V1.ListProjectMembersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProjectMembers, null, options, request);
      }
      /// <summary>
      /// Add Project Member
      ///
      /// Deprecated: use [CreateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-create-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request adds a new user to the members list on the project level with one or multiple roles.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddProjectMemberResponse AddProjectMember(global::Zitadel.Management.V1.AddProjectMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddProjectMember(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add Project Member
      ///
      /// Deprecated: use [CreateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-create-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request adds a new user to the members list on the project level with one or multiple roles.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddProjectMemberResponse AddProjectMember(global::Zitadel.Management.V1.AddProjectMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddProjectMember, null, options, request);
      }
      /// <summary>
      /// Add Project Member
      ///
      /// Deprecated: use [CreateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-create-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request adds a new user to the members list on the project level with one or multiple roles.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddProjectMemberResponse> AddProjectMemberAsync(global::Zitadel.Management.V1.AddProjectMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddProjectMemberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add Project Member
      ///
      /// Deprecated: use [CreateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-create-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request adds a new user to the members list on the project level with one or multiple roles.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddProjectMemberResponse> AddProjectMemberAsync(global::Zitadel.Management.V1.AddProjectMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddProjectMember, null, options, request);
      }
      /// <summary>
      /// Update Project Member
      ///
      /// Deprecated: use [UpdateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-update-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateProjectMemberResponse UpdateProjectMember(global::Zitadel.Management.V1.UpdateProjectMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProjectMember(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update Project Member
      ///
      /// Deprecated: use [UpdateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-update-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateProjectMemberResponse UpdateProjectMember(global::Zitadel.Management.V1.UpdateProjectMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateProjectMember, null, options, request);
      }
      /// <summary>
      /// Update Project Member
      ///
      /// Deprecated: use [UpdateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-update-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateProjectMemberResponse> UpdateProjectMemberAsync(global::Zitadel.Management.V1.UpdateProjectMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProjectMemberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update Project Member
      ///
      /// Deprecated: use [UpdateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-update-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateProjectMemberResponse> UpdateProjectMemberAsync(global::Zitadel.Management.V1.UpdateProjectMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateProjectMember, null, options, request);
      }
      /// <summary>
      /// Remove Project Member
      ///
      /// Deprecated: use [DeleteAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-delete-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on an project level. The user can still have roles on another level (iam, organization).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveProjectMemberResponse RemoveProjectMember(global::Zitadel.Management.V1.RemoveProjectMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveProjectMember(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Project Member
      ///
      /// Deprecated: use [DeleteAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-delete-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on an project level. The user can still have roles on another level (iam, organization).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveProjectMemberResponse RemoveProjectMember(global::Zitadel.Management.V1.RemoveProjectMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveProjectMember, null, options, request);
      }
      /// <summary>
      /// Remove Project Member
      ///
      /// Deprecated: use [DeleteAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-delete-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on an project level. The user can still have roles on another level (iam, organization).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveProjectMemberResponse> RemoveProjectMemberAsync(global::Zitadel.Management.V1.RemoveProjectMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveProjectMemberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Project Member
      ///
      /// Deprecated: use [DeleteAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-delete-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on an project level. The user can still have roles on another level (iam, organization).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveProjectMemberResponse> RemoveProjectMemberAsync(global::Zitadel.Management.V1.RemoveProjectMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveProjectMember, null, options, request);
      }
      /// <summary>
      /// Get Application By ID
      ///
      /// Deprecated: Use [GetApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-get-application.api.mdx) instead to fetch an app
      ///
      /// Get an application of any type (OIDC, API, SAML).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetAppByIDResponse GetAppByID(global::Zitadel.Management.V1.GetAppByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAppByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Application By ID
      ///
      /// Deprecated: Use [GetApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-get-application.api.mdx) instead to fetch an app
      ///
      /// Get an application of any type (OIDC, API, SAML).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetAppByIDResponse GetAppByID(global::Zitadel.Management.V1.GetAppByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAppByID, null, options, request);
      }
      /// <summary>
      /// Get Application By ID
      ///
      /// Deprecated: Use [GetApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-get-application.api.mdx) instead to fetch an app
      ///
      /// Get an application of any type (OIDC, API, SAML).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetAppByIDResponse> GetAppByIDAsync(global::Zitadel.Management.V1.GetAppByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAppByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Application By ID
      ///
      /// Deprecated: Use [GetApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-get-application.api.mdx) instead to fetch an app
      ///
      /// Get an application of any type (OIDC, API, SAML).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetAppByIDResponse> GetAppByIDAsync(global::Zitadel.Management.V1.GetAppByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAppByID, null, options, request);
      }
      /// <summary>
      /// Search Applications
      ///
      /// Deprecated: Use [ListApplications](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-list-applications.api.mdx) instead to list applications
      ///
      /// Returns all applications within a project, that match the query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListAppsResponse ListApps(global::Zitadel.Management.V1.ListAppsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListApps(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Applications
      ///
      /// Deprecated: Use [ListApplications](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-list-applications.api.mdx) instead to list applications
      ///
      /// Returns all applications within a project, that match the query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListAppsResponse ListApps(global::Zitadel.Management.V1.ListAppsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListApps, null, options, request);
      }
      /// <summary>
      /// Search Applications
      ///
      /// Deprecated: Use [ListApplications](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-list-applications.api.mdx) instead to list applications
      ///
      /// Returns all applications within a project, that match the query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListAppsResponse> ListAppsAsync(global::Zitadel.Management.V1.ListAppsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAppsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Applications
      ///
      /// Deprecated: Use [ListApplications](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-list-applications.api.mdx) instead to list applications
      ///
      /// Returns all applications within a project, that match the query.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListAppsResponse> ListAppsAsync(global::Zitadel.Management.V1.ListAppsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListApps, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListAppChangesResponse ListAppChanges(global::Zitadel.Management.V1.ListAppChangesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAppChanges(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListAppChangesResponse ListAppChanges(global::Zitadel.Management.V1.ListAppChangesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAppChanges, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListAppChangesResponse> ListAppChangesAsync(global::Zitadel.Management.V1.ListAppChangesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAppChangesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListAppChangesResponse> ListAppChangesAsync(global::Zitadel.Management.V1.ListAppChangesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAppChanges, null, options, request);
      }
      /// <summary>
      /// Create Application (OIDC)
      ///
      /// Deprecated: Use [CreateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application.api.mdx) instead to create an OIDC application.
      ///
      /// Create a new OIDC client. The client id will be generated and returned in the response. Depending on the chosen configuration also a secret will be returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddOIDCAppResponse AddOIDCApp(global::Zitadel.Management.V1.AddOIDCAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOIDCApp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create Application (OIDC)
      ///
      /// Deprecated: Use [CreateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application.api.mdx) instead to create an OIDC application.
      ///
      /// Create a new OIDC client. The client id will be generated and returned in the response. Depending on the chosen configuration also a secret will be returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddOIDCAppResponse AddOIDCApp(global::Zitadel.Management.V1.AddOIDCAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddOIDCApp, null, options, request);
      }
      /// <summary>
      /// Create Application (OIDC)
      ///
      /// Deprecated: Use [CreateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application.api.mdx) instead to create an OIDC application.
      ///
      /// Create a new OIDC client. The client id will be generated and returned in the response. Depending on the chosen configuration also a secret will be returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddOIDCAppResponse> AddOIDCAppAsync(global::Zitadel.Management.V1.AddOIDCAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOIDCAppAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create Application (OIDC)
      ///
      /// Deprecated: Use [CreateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application.api.mdx) instead to create an OIDC application.
      ///
      /// Create a new OIDC client. The client id will be generated and returned in the response. Depending on the chosen configuration also a secret will be returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddOIDCAppResponse> AddOIDCAppAsync(global::Zitadel.Management.V1.AddOIDCAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddOIDCApp, null, options, request);
      }
      /// <summary>
      /// Create Application (SAML)
      ///
      /// Deprecated: Use [CreateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application.api.mdx) instead to create a SAML application.
      ///
      /// Create a new SAML client. Returns an entity ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddSAMLAppResponse AddSAMLApp(global::Zitadel.Management.V1.AddSAMLAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSAMLApp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create Application (SAML)
      ///
      /// Deprecated: Use [CreateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application.api.mdx) instead to create a SAML application.
      ///
      /// Create a new SAML client. Returns an entity ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddSAMLAppResponse AddSAMLApp(global::Zitadel.Management.V1.AddSAMLAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddSAMLApp, null, options, request);
      }
      /// <summary>
      /// Create Application (SAML)
      ///
      /// Deprecated: Use [CreateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application.api.mdx) instead to create a SAML application.
      ///
      /// Create a new SAML client. Returns an entity ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddSAMLAppResponse> AddSAMLAppAsync(global::Zitadel.Management.V1.AddSAMLAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSAMLAppAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create Application (SAML)
      ///
      /// Deprecated: Use [CreateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application.api.mdx) instead to create a SAML application.
      ///
      /// Create a new SAML client. Returns an entity ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddSAMLAppResponse> AddSAMLAppAsync(global::Zitadel.Management.V1.AddSAMLAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddSAMLApp, null, options, request);
      }
      /// <summary>
      /// Create Application (API)
      ///
      /// Deprecated: Use [CreateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application.api.mdx) instead to create an API application
      ///
      /// Create a new API client. The client id will be generated and returned in the response.
      /// Depending on the chosen configuration also a secret will be generated and returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddAPIAppResponse AddAPIApp(global::Zitadel.Management.V1.AddAPIAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddAPIApp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create Application (API)
      ///
      /// Deprecated: Use [CreateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application.api.mdx) instead to create an API application
      ///
      /// Create a new API client. The client id will be generated and returned in the response.
      /// Depending on the chosen configuration also a secret will be generated and returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddAPIAppResponse AddAPIApp(global::Zitadel.Management.V1.AddAPIAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddAPIApp, null, options, request);
      }
      /// <summary>
      /// Create Application (API)
      ///
      /// Deprecated: Use [CreateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application.api.mdx) instead to create an API application
      ///
      /// Create a new API client. The client id will be generated and returned in the response.
      /// Depending on the chosen configuration also a secret will be generated and returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddAPIAppResponse> AddAPIAppAsync(global::Zitadel.Management.V1.AddAPIAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddAPIAppAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create Application (API)
      ///
      /// Deprecated: Use [CreateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application.api.mdx) instead to create an API application
      ///
      /// Create a new API client. The client id will be generated and returned in the response.
      /// Depending on the chosen configuration also a secret will be generated and returned.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddAPIAppResponse> AddAPIAppAsync(global::Zitadel.Management.V1.AddAPIAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddAPIApp, null, options, request);
      }
      /// <summary>
      /// Update Application
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the generic params of an app.
      ///
      /// Update the basic information of an application. This doesn't include information that are dependent on the application type (OIDC, API, SAML)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateAppResponse UpdateApp(global::Zitadel.Management.V1.UpdateAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateApp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update Application
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the generic params of an app.
      ///
      /// Update the basic information of an application. This doesn't include information that are dependent on the application type (OIDC, API, SAML)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateAppResponse UpdateApp(global::Zitadel.Management.V1.UpdateAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateApp, null, options, request);
      }
      /// <summary>
      /// Update Application
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the generic params of an app.
      ///
      /// Update the basic information of an application. This doesn't include information that are dependent on the application type (OIDC, API, SAML)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateAppResponse> UpdateAppAsync(global::Zitadel.Management.V1.UpdateAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAppAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update Application
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the generic params of an app.
      ///
      /// Update the basic information of an application. This doesn't include information that are dependent on the application type (OIDC, API, SAML)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateAppResponse> UpdateAppAsync(global::Zitadel.Management.V1.UpdateAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateApp, null, options, request);
      }
      /// <summary>
      /// Update OIDC Application Config
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the config of an OIDC app.
      ///
      /// Update the OIDC specific configuration of an application.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateOIDCAppConfigResponse UpdateOIDCAppConfig(global::Zitadel.Management.V1.UpdateOIDCAppConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOIDCAppConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update OIDC Application Config
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the config of an OIDC app.
      ///
      /// Update the OIDC specific configuration of an application.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateOIDCAppConfigResponse UpdateOIDCAppConfig(global::Zitadel.Management.V1.UpdateOIDCAppConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateOIDCAppConfig, null, options, request);
      }
      /// <summary>
      /// Update OIDC Application Config
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the config of an OIDC app.
      ///
      /// Update the OIDC specific configuration of an application.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateOIDCAppConfigResponse> UpdateOIDCAppConfigAsync(global::Zitadel.Management.V1.UpdateOIDCAppConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOIDCAppConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update OIDC Application Config
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the config of an OIDC app.
      ///
      /// Update the OIDC specific configuration of an application.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateOIDCAppConfigResponse> UpdateOIDCAppConfigAsync(global::Zitadel.Management.V1.UpdateOIDCAppConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateOIDCAppConfig, null, options, request);
      }
      /// <summary>
      /// Update SAML Application Config
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the config of a SAML app.
      ///
      /// Update the SAML specific configuration of an application.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateSAMLAppConfigResponse UpdateSAMLAppConfig(global::Zitadel.Management.V1.UpdateSAMLAppConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSAMLAppConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update SAML Application Config
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the config of a SAML app.
      ///
      /// Update the SAML specific configuration of an application.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateSAMLAppConfigResponse UpdateSAMLAppConfig(global::Zitadel.Management.V1.UpdateSAMLAppConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSAMLAppConfig, null, options, request);
      }
      /// <summary>
      /// Update SAML Application Config
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the config of a SAML app.
      ///
      /// Update the SAML specific configuration of an application.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateSAMLAppConfigResponse> UpdateSAMLAppConfigAsync(global::Zitadel.Management.V1.UpdateSAMLAppConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSAMLAppConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update SAML Application Config
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the config of a SAML app.
      ///
      /// Update the SAML specific configuration of an application.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateSAMLAppConfigResponse> UpdateSAMLAppConfigAsync(global::Zitadel.Management.V1.UpdateSAMLAppConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSAMLAppConfig, null, options, request);
      }
      /// <summary>
      /// Update API Application Config
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the config of an API app.
      ///
      /// Update the OIDC-specific configuration of an application.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateAPIAppConfigResponse UpdateAPIAppConfig(global::Zitadel.Management.V1.UpdateAPIAppConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAPIAppConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update API Application Config
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the config of an API app.
      ///
      /// Update the OIDC-specific configuration of an application.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateAPIAppConfigResponse UpdateAPIAppConfig(global::Zitadel.Management.V1.UpdateAPIAppConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAPIAppConfig, null, options, request);
      }
      /// <summary>
      /// Update API Application Config
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the config of an API app.
      ///
      /// Update the OIDC-specific configuration of an application.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateAPIAppConfigResponse> UpdateAPIAppConfigAsync(global::Zitadel.Management.V1.UpdateAPIAppConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAPIAppConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update API Application Config
      ///
      /// Deprecated: Use [PatchApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-update-application.api.mdx) instead to update the config of an API app.
      ///
      /// Update the OIDC-specific configuration of an application.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateAPIAppConfigResponse> UpdateAPIAppConfigAsync(global::Zitadel.Management.V1.UpdateAPIAppConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAPIAppConfig, null, options, request);
      }
      /// <summary>
      /// Deactivate Application
      ///
      /// Deprecated: Use [DeactivateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-deactivate-application.api.mdx) instead to deactivate an app.
      ///
      /// Set the state of an application to deactivated. It is not possible to request tokens for deactivated apps. Request returns an error if the application is already deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeactivateAppResponse DeactivateApp(global::Zitadel.Management.V1.DeactivateAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateApp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivate Application
      ///
      /// Deprecated: Use [DeactivateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-deactivate-application.api.mdx) instead to deactivate an app.
      ///
      /// Set the state of an application to deactivated. It is not possible to request tokens for deactivated apps. Request returns an error if the application is already deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeactivateAppResponse DeactivateApp(global::Zitadel.Management.V1.DeactivateAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeactivateApp, null, options, request);
      }
      /// <summary>
      /// Deactivate Application
      ///
      /// Deprecated: Use [DeactivateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-deactivate-application.api.mdx) instead to deactivate an app.
      ///
      /// Set the state of an application to deactivated. It is not possible to request tokens for deactivated apps. Request returns an error if the application is already deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeactivateAppResponse> DeactivateAppAsync(global::Zitadel.Management.V1.DeactivateAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateAppAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivate Application
      ///
      /// Deprecated: Use [DeactivateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-deactivate-application.api.mdx) instead to deactivate an app.
      ///
      /// Set the state of an application to deactivated. It is not possible to request tokens for deactivated apps. Request returns an error if the application is already deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeactivateAppResponse> DeactivateAppAsync(global::Zitadel.Management.V1.DeactivateAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeactivateApp, null, options, request);
      }
      /// <summary>
      /// Reactivate Application
      ///
      /// Deprecated: Use [ReactivateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-reactivate-application.api.mdx) instead to reactivate an app.
      ///
      /// Set the state of an application to active. Request returns an error if the application is not deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ReactivateAppResponse ReactivateApp(global::Zitadel.Management.V1.ReactivateAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateApp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reactivate Application
      ///
      /// Deprecated: Use [ReactivateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-reactivate-application.api.mdx) instead to reactivate an app.
      ///
      /// Set the state of an application to active. Request returns an error if the application is not deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ReactivateAppResponse ReactivateApp(global::Zitadel.Management.V1.ReactivateAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReactivateApp, null, options, request);
      }
      /// <summary>
      /// Reactivate Application
      ///
      /// Deprecated: Use [ReactivateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-reactivate-application.api.mdx) instead to reactivate an app.
      ///
      /// Set the state of an application to active. Request returns an error if the application is not deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ReactivateAppResponse> ReactivateAppAsync(global::Zitadel.Management.V1.ReactivateAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateAppAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reactivate Application
      ///
      /// Deprecated: Use [ReactivateApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-reactivate-application.api.mdx) instead to reactivate an app.
      ///
      /// Set the state of an application to active. Request returns an error if the application is not deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ReactivateAppResponse> ReactivateAppAsync(global::Zitadel.Management.V1.ReactivateAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReactivateApp, null, options, request);
      }
      /// <summary>
      /// Remove Application
      ///
      /// Deprecated: Use [DeleteApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-delete-application.api.mdx) instead to delete an app.
      ///
      /// Remove an application. It is not possible to request tokens for removed apps. Request returns an error if the application is already deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveAppResponse RemoveApp(global::Zitadel.Management.V1.RemoveAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveApp(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Application
      ///
      /// Deprecated: Use [DeleteApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-delete-application.api.mdx) instead to delete an app.
      ///
      /// Remove an application. It is not possible to request tokens for removed apps. Request returns an error if the application is already deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveAppResponse RemoveApp(global::Zitadel.Management.V1.RemoveAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveApp, null, options, request);
      }
      /// <summary>
      /// Remove Application
      ///
      /// Deprecated: Use [DeleteApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-delete-application.api.mdx) instead to delete an app.
      ///
      /// Remove an application. It is not possible to request tokens for removed apps. Request returns an error if the application is already deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveAppResponse> RemoveAppAsync(global::Zitadel.Management.V1.RemoveAppRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveAppAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Application
      ///
      /// Deprecated: Use [DeleteApplication](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-delete-application.api.mdx) instead to delete an app.
      ///
      /// Remove an application. It is not possible to request tokens for removed apps. Request returns an error if the application is already deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveAppResponse> RemoveAppAsync(global::Zitadel.Management.V1.RemoveAppRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveApp, null, options, request);
      }
      /// <summary>
      /// Generate New OIDC Client Secret
      ///
      /// Deprecated: Use [RegenerateClientSecret](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-regenerate-client-secret.api.mdx) instead to regenerate an OIDC app client secret.
      ///
      /// Generates a new client secret for the OIDC application, make sure to save the response.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RegenerateOIDCClientSecretResponse RegenerateOIDCClientSecret(global::Zitadel.Management.V1.RegenerateOIDCClientSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegenerateOIDCClientSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generate New OIDC Client Secret
      ///
      /// Deprecated: Use [RegenerateClientSecret](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-regenerate-client-secret.api.mdx) instead to regenerate an OIDC app client secret.
      ///
      /// Generates a new client secret for the OIDC application, make sure to save the response.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RegenerateOIDCClientSecretResponse RegenerateOIDCClientSecret(global::Zitadel.Management.V1.RegenerateOIDCClientSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RegenerateOIDCClientSecret, null, options, request);
      }
      /// <summary>
      /// Generate New OIDC Client Secret
      ///
      /// Deprecated: Use [RegenerateClientSecret](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-regenerate-client-secret.api.mdx) instead to regenerate an OIDC app client secret.
      ///
      /// Generates a new client secret for the OIDC application, make sure to save the response.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RegenerateOIDCClientSecretResponse> RegenerateOIDCClientSecretAsync(global::Zitadel.Management.V1.RegenerateOIDCClientSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegenerateOIDCClientSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generate New OIDC Client Secret
      ///
      /// Deprecated: Use [RegenerateClientSecret](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-regenerate-client-secret.api.mdx) instead to regenerate an OIDC app client secret.
      ///
      /// Generates a new client secret for the OIDC application, make sure to save the response.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RegenerateOIDCClientSecretResponse> RegenerateOIDCClientSecretAsync(global::Zitadel.Management.V1.RegenerateOIDCClientSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RegenerateOIDCClientSecret, null, options, request);
      }
      /// <summary>
      /// Generate New API Client Secret
      ///
      /// Deprecated: Use [RegenerateClientSecret](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-regenerate-client-secret.api.mdx) instead to regenerate an API app client secret
      ///
      /// Generates a new client secret for the API application, make sure to save the response.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RegenerateAPIClientSecretResponse RegenerateAPIClientSecret(global::Zitadel.Management.V1.RegenerateAPIClientSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegenerateAPIClientSecret(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generate New API Client Secret
      ///
      /// Deprecated: Use [RegenerateClientSecret](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-regenerate-client-secret.api.mdx) instead to regenerate an API app client secret
      ///
      /// Generates a new client secret for the API application, make sure to save the response.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RegenerateAPIClientSecretResponse RegenerateAPIClientSecret(global::Zitadel.Management.V1.RegenerateAPIClientSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RegenerateAPIClientSecret, null, options, request);
      }
      /// <summary>
      /// Generate New API Client Secret
      ///
      /// Deprecated: Use [RegenerateClientSecret](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-regenerate-client-secret.api.mdx) instead to regenerate an API app client secret
      ///
      /// Generates a new client secret for the API application, make sure to save the response.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RegenerateAPIClientSecretResponse> RegenerateAPIClientSecretAsync(global::Zitadel.Management.V1.RegenerateAPIClientSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegenerateAPIClientSecretAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Generate New API Client Secret
      ///
      /// Deprecated: Use [RegenerateClientSecret](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-regenerate-client-secret.api.mdx) instead to regenerate an API app client secret
      ///
      /// Generates a new client secret for the API application, make sure to save the response.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RegenerateAPIClientSecretResponse> RegenerateAPIClientSecretAsync(global::Zitadel.Management.V1.RegenerateAPIClientSecretRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RegenerateAPIClientSecret, null, options, request);
      }
      /// <summary>
      /// Get Application Key By ID
      ///
      /// Deprecated: Use [GetApplicationKey](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-get-application-key.api.mdx) instead to get an application key.
      ///
      /// Returns an application key. Keys are used for authorizing API Applications.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetAppKeyResponse GetAppKey(global::Zitadel.Management.V1.GetAppKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAppKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Application Key By ID
      ///
      /// Deprecated: Use [GetApplicationKey](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-get-application-key.api.mdx) instead to get an application key.
      ///
      /// Returns an application key. Keys are used for authorizing API Applications.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetAppKeyResponse GetAppKey(global::Zitadel.Management.V1.GetAppKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAppKey, null, options, request);
      }
      /// <summary>
      /// Get Application Key By ID
      ///
      /// Deprecated: Use [GetApplicationKey](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-get-application-key.api.mdx) instead to get an application key.
      ///
      /// Returns an application key. Keys are used for authorizing API Applications.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetAppKeyResponse> GetAppKeyAsync(global::Zitadel.Management.V1.GetAppKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAppKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Application Key By ID
      ///
      /// Deprecated: Use [GetApplicationKey](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-get-application-key.api.mdx) instead to get an application key.
      ///
      /// Returns an application key. Keys are used for authorizing API Applications.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetAppKeyResponse> GetAppKeyAsync(global::Zitadel.Management.V1.GetAppKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAppKey, null, options, request);
      }
      /// <summary>
      /// List Application Keys
      ///
      /// Deprecated: Use [ListApplicationKeys](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-list-application-keys.api.mdx) instead to list application keys.
      ///
      /// Search application keys. Keys are used for authorizing API Applications.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListAppKeysResponse ListAppKeys(global::Zitadel.Management.V1.ListAppKeysRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAppKeys(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Application Keys
      ///
      /// Deprecated: Use [ListApplicationKeys](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-list-application-keys.api.mdx) instead to list application keys.
      ///
      /// Search application keys. Keys are used for authorizing API Applications.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListAppKeysResponse ListAppKeys(global::Zitadel.Management.V1.ListAppKeysRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAppKeys, null, options, request);
      }
      /// <summary>
      /// List Application Keys
      ///
      /// Deprecated: Use [ListApplicationKeys](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-list-application-keys.api.mdx) instead to list application keys.
      ///
      /// Search application keys. Keys are used for authorizing API Applications.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListAppKeysResponse> ListAppKeysAsync(global::Zitadel.Management.V1.ListAppKeysRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAppKeysAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Application Keys
      ///
      /// Deprecated: Use [ListApplicationKeys](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-list-application-keys.api.mdx) instead to list application keys.
      ///
      /// Search application keys. Keys are used for authorizing API Applications.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListAppKeysResponse> ListAppKeysAsync(global::Zitadel.Management.V1.ListAppKeysRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAppKeys, null, options, request);
      }
      /// <summary>
      /// Create Application Key
      ///
      /// Deprecated: Use [CreateApplicationKey](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application-key.api.mdx) instead to create an application key.
      ///
      /// Create a new application key, they are used for authorizing API Applications. Key details will be returned in the response, make sure to save it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddAppKeyResponse AddAppKey(global::Zitadel.Management.V1.AddAppKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddAppKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create Application Key
      ///
      /// Deprecated: Use [CreateApplicationKey](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application-key.api.mdx) instead to create an application key.
      ///
      /// Create a new application key, they are used for authorizing API Applications. Key details will be returned in the response, make sure to save it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddAppKeyResponse AddAppKey(global::Zitadel.Management.V1.AddAppKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddAppKey, null, options, request);
      }
      /// <summary>
      /// Create Application Key
      ///
      /// Deprecated: Use [CreateApplicationKey](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application-key.api.mdx) instead to create an application key.
      ///
      /// Create a new application key, they are used for authorizing API Applications. Key details will be returned in the response, make sure to save it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddAppKeyResponse> AddAppKeyAsync(global::Zitadel.Management.V1.AddAppKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddAppKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create Application Key
      ///
      /// Deprecated: Use [CreateApplicationKey](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-create-application-key.api.mdx) instead to create an application key.
      ///
      /// Create a new application key, they are used for authorizing API Applications. Key details will be returned in the response, make sure to save it.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddAppKeyResponse> AddAppKeyAsync(global::Zitadel.Management.V1.AddAppKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddAppKey, null, options, request);
      }
      /// <summary>
      /// Delete Application Key
      ///
      /// Deprecated: Use [DeleteApplicationKey](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-delete-application-key.api.mdx) instead to delete an application key.
      ///
      /// Remove an application key. The API application will not be able to authorize with the key anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveAppKeyResponse RemoveAppKey(global::Zitadel.Management.V1.RemoveAppKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveAppKey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete Application Key
      ///
      /// Deprecated: Use [DeleteApplicationKey](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-delete-application-key.api.mdx) instead to delete an application key.
      ///
      /// Remove an application key. The API application will not be able to authorize with the key anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveAppKeyResponse RemoveAppKey(global::Zitadel.Management.V1.RemoveAppKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveAppKey, null, options, request);
      }
      /// <summary>
      /// Delete Application Key
      ///
      /// Deprecated: Use [DeleteApplicationKey](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-delete-application-key.api.mdx) instead to delete an application key.
      ///
      /// Remove an application key. The API application will not be able to authorize with the key anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveAppKeyResponse> RemoveAppKeyAsync(global::Zitadel.Management.V1.RemoveAppKeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveAppKeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete Application Key
      ///
      /// Deprecated: Use [DeleteApplicationKey](/apis/resources/application_service_v2/zitadel-app-v-2-beta-app-service-delete-application-key.api.mdx) instead to delete an application key.
      ///
      /// Remove an application key. The API application will not be able to authorize with the key anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveAppKeyResponse> RemoveAppKeyAsync(global::Zitadel.Management.V1.RemoveAppKeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveAppKey, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProjectGrantChangesResponse ListProjectGrantChanges(global::Zitadel.Management.V1.ListProjectGrantChangesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectGrantChanges(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProjectGrantChangesResponse ListProjectGrantChanges(global::Zitadel.Management.V1.ListProjectGrantChangesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProjectGrantChanges, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProjectGrantChangesResponse> ListProjectGrantChangesAsync(global::Zitadel.Management.V1.ListProjectGrantChangesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectGrantChangesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProjectGrantChangesResponse> ListProjectGrantChangesAsync(global::Zitadel.Management.V1.ListProjectGrantChangesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProjectGrantChanges, null, options, request);
      }
      /// <summary>
      /// Project Grant By ID
      ///
      /// Deprecated: use [ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a project grant. A project grant is when the organization grants its project to another organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetProjectGrantByIDResponse GetProjectGrantByID(global::Zitadel.Management.V1.GetProjectGrantByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProjectGrantByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Project Grant By ID
      ///
      /// Deprecated: use [ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a project grant. A project grant is when the organization grants its project to another organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetProjectGrantByIDResponse GetProjectGrantByID(global::Zitadel.Management.V1.GetProjectGrantByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProjectGrantByID, null, options, request);
      }
      /// <summary>
      /// Project Grant By ID
      ///
      /// Deprecated: use [ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a project grant. A project grant is when the organization grants its project to another organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetProjectGrantByIDResponse> GetProjectGrantByIDAsync(global::Zitadel.Management.V1.GetProjectGrantByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProjectGrantByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Project Grant By ID
      ///
      /// Deprecated: use [ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a project grant. A project grant is when the organization grants its project to another organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetProjectGrantByIDResponse> GetProjectGrantByIDAsync(global::Zitadel.Management.V1.GetProjectGrantByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProjectGrantByID, null, options, request);
      }
      /// <summary>
      /// Search Project Grants from Project
      ///
      /// Deprecated: use [ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a list of project grants for a specific project. A project grant is when the organization grants its project to another organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProjectGrantsResponse ListProjectGrants(global::Zitadel.Management.V1.ListProjectGrantsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectGrants(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Project Grants from Project
      ///
      /// Deprecated: use [ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a list of project grants for a specific project. A project grant is when the organization grants its project to another organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProjectGrantsResponse ListProjectGrants(global::Zitadel.Management.V1.ListProjectGrantsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProjectGrants, null, options, request);
      }
      /// <summary>
      /// Search Project Grants from Project
      ///
      /// Deprecated: use [ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a list of project grants for a specific project. A project grant is when the organization grants its project to another organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProjectGrantsResponse> ListProjectGrantsAsync(global::Zitadel.Management.V1.ListProjectGrantsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectGrantsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Project Grants from Project
      ///
      /// Deprecated: use [ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a list of project grants for a specific project. A project grant is when the organization grants its project to another organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProjectGrantsResponse> ListProjectGrantsAsync(global::Zitadel.Management.V1.ListProjectGrantsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProjectGrants, null, options, request);
      }
      /// <summary>
      /// Search Project Grants
      ///
      /// Deprecated: use [ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a list of project grants. A project grant is when the organization grants its project to another organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListAllProjectGrantsResponse ListAllProjectGrants(global::Zitadel.Management.V1.ListAllProjectGrantsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAllProjectGrants(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Project Grants
      ///
      /// Deprecated: use [ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a list of project grants. A project grant is when the organization grants its project to another organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListAllProjectGrantsResponse ListAllProjectGrants(global::Zitadel.Management.V1.ListAllProjectGrantsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAllProjectGrants, null, options, request);
      }
      /// <summary>
      /// Search Project Grants
      ///
      /// Deprecated: use [ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a list of project grants. A project grant is when the organization grants its project to another organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListAllProjectGrantsResponse> ListAllProjectGrantsAsync(global::Zitadel.Management.V1.ListAllProjectGrantsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAllProjectGrantsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Project Grants
      ///
      /// Deprecated: use [ListProjectGrants](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-list-project-grants.api.mdx) instead.
      ///
      /// Returns a list of project grants. A project grant is when the organization grants its project to another organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListAllProjectGrantsResponse> ListAllProjectGrantsAsync(global::Zitadel.Management.V1.ListAllProjectGrantsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAllProjectGrants, null, options, request);
      }
      /// <summary>
      /// Add Project Grant
      ///
      /// Deprecated: use [CreateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-create-project-grant.api.mdx) instead.
      ///
      /// Grant a project to another organization. The project grant will allow the granted organization to access the project and manage the authorizations for its users. Project Grant will be listed in the granted project of the granted organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddProjectGrantResponse AddProjectGrant(global::Zitadel.Management.V1.AddProjectGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddProjectGrant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add Project Grant
      ///
      /// Deprecated: use [CreateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-create-project-grant.api.mdx) instead.
      ///
      /// Grant a project to another organization. The project grant will allow the granted organization to access the project and manage the authorizations for its users. Project Grant will be listed in the granted project of the granted organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddProjectGrantResponse AddProjectGrant(global::Zitadel.Management.V1.AddProjectGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddProjectGrant, null, options, request);
      }
      /// <summary>
      /// Add Project Grant
      ///
      /// Deprecated: use [CreateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-create-project-grant.api.mdx) instead.
      ///
      /// Grant a project to another organization. The project grant will allow the granted organization to access the project and manage the authorizations for its users. Project Grant will be listed in the granted project of the granted organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddProjectGrantResponse> AddProjectGrantAsync(global::Zitadel.Management.V1.AddProjectGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddProjectGrantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add Project Grant
      ///
      /// Deprecated: use [CreateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-create-project-grant.api.mdx) instead.
      ///
      /// Grant a project to another organization. The project grant will allow the granted organization to access the project and manage the authorizations for its users. Project Grant will be listed in the granted project of the granted organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddProjectGrantResponse> AddProjectGrantAsync(global::Zitadel.Management.V1.AddProjectGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddProjectGrant, null, options, request);
      }
      /// <summary>
      /// Change Project Grant
      ///
      /// Deprecated: use [UpdateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-update-project-grant.api.mdx) instead.
      ///
      /// Change the roles of the project that is granted to another organization. The project grant will allow the granted organization to access the project and manage the authorizations for its users. Project Grant will be listed in the granted project of the granted organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateProjectGrantResponse UpdateProjectGrant(global::Zitadel.Management.V1.UpdateProjectGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProjectGrant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change Project Grant
      ///
      /// Deprecated: use [UpdateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-update-project-grant.api.mdx) instead.
      ///
      /// Change the roles of the project that is granted to another organization. The project grant will allow the granted organization to access the project and manage the authorizations for its users. Project Grant will be listed in the granted project of the granted organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateProjectGrantResponse UpdateProjectGrant(global::Zitadel.Management.V1.UpdateProjectGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateProjectGrant, null, options, request);
      }
      /// <summary>
      /// Change Project Grant
      ///
      /// Deprecated: use [UpdateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-update-project-grant.api.mdx) instead.
      ///
      /// Change the roles of the project that is granted to another organization. The project grant will allow the granted organization to access the project and manage the authorizations for its users. Project Grant will be listed in the granted project of the granted organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateProjectGrantResponse> UpdateProjectGrantAsync(global::Zitadel.Management.V1.UpdateProjectGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProjectGrantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change Project Grant
      ///
      /// Deprecated: use [UpdateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-update-project-grant.api.mdx) instead.
      ///
      /// Change the roles of the project that is granted to another organization. The project grant will allow the granted organization to access the project and manage the authorizations for its users. Project Grant will be listed in the granted project of the granted organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateProjectGrantResponse> UpdateProjectGrantAsync(global::Zitadel.Management.V1.UpdateProjectGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateProjectGrant, null, options, request);
      }
      /// <summary>
      /// Deactivate Project Grant
      ///
      /// Deprecated: use [DeactivateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-deactivate-project-grant.api.mdx) instead.
      ///
      /// Set the state of the project grant to deactivated. The grant has to be active to be able to deactivate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeactivateProjectGrantResponse DeactivateProjectGrant(global::Zitadel.Management.V1.DeactivateProjectGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateProjectGrant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivate Project Grant
      ///
      /// Deprecated: use [DeactivateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-deactivate-project-grant.api.mdx) instead.
      ///
      /// Set the state of the project grant to deactivated. The grant has to be active to be able to deactivate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeactivateProjectGrantResponse DeactivateProjectGrant(global::Zitadel.Management.V1.DeactivateProjectGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeactivateProjectGrant, null, options, request);
      }
      /// <summary>
      /// Deactivate Project Grant
      ///
      /// Deprecated: use [DeactivateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-deactivate-project-grant.api.mdx) instead.
      ///
      /// Set the state of the project grant to deactivated. The grant has to be active to be able to deactivate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeactivateProjectGrantResponse> DeactivateProjectGrantAsync(global::Zitadel.Management.V1.DeactivateProjectGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateProjectGrantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivate Project Grant
      ///
      /// Deprecated: use [DeactivateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-deactivate-project-grant.api.mdx) instead.
      ///
      /// Set the state of the project grant to deactivated. The grant has to be active to be able to deactivate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeactivateProjectGrantResponse> DeactivateProjectGrantAsync(global::Zitadel.Management.V1.DeactivateProjectGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeactivateProjectGrant, null, options, request);
      }
      /// <summary>
      /// Reactivate Project Grant
      ///
      /// Deprecated: use [ActivateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-activate-project-grant.api.mdx) instead.
      ///
      /// Set the state of the project grant to active. The grant has to be deactivated to be able to reactivate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ReactivateProjectGrantResponse ReactivateProjectGrant(global::Zitadel.Management.V1.ReactivateProjectGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateProjectGrant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reactivate Project Grant
      ///
      /// Deprecated: use [ActivateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-activate-project-grant.api.mdx) instead.
      ///
      /// Set the state of the project grant to active. The grant has to be deactivated to be able to reactivate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ReactivateProjectGrantResponse ReactivateProjectGrant(global::Zitadel.Management.V1.ReactivateProjectGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReactivateProjectGrant, null, options, request);
      }
      /// <summary>
      /// Reactivate Project Grant
      ///
      /// Deprecated: use [ActivateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-activate-project-grant.api.mdx) instead.
      ///
      /// Set the state of the project grant to active. The grant has to be deactivated to be able to reactivate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ReactivateProjectGrantResponse> ReactivateProjectGrantAsync(global::Zitadel.Management.V1.ReactivateProjectGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateProjectGrantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reactivate Project Grant
      ///
      /// Deprecated: use [ActivateProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-activate-project-grant.api.mdx) instead.
      ///
      /// Set the state of the project grant to active. The grant has to be deactivated to be able to reactivate.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ReactivateProjectGrantResponse> ReactivateProjectGrantAsync(global::Zitadel.Management.V1.ReactivateProjectGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReactivateProjectGrant, null, options, request);
      }
      /// <summary>
      /// Remove Project Grant
      ///
      /// Deprecated: use [DeleteProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-delete-project-grant.api.mdx) instead.
      ///
      /// Remove a project grant. All user grants for this project grant will also be removed. A user will not have access to the project afterward (if permissions are checked).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveProjectGrantResponse RemoveProjectGrant(global::Zitadel.Management.V1.RemoveProjectGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveProjectGrant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Project Grant
      ///
      /// Deprecated: use [DeleteProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-delete-project-grant.api.mdx) instead.
      ///
      /// Remove a project grant. All user grants for this project grant will also be removed. A user will not have access to the project afterward (if permissions are checked).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveProjectGrantResponse RemoveProjectGrant(global::Zitadel.Management.V1.RemoveProjectGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveProjectGrant, null, options, request);
      }
      /// <summary>
      /// Remove Project Grant
      ///
      /// Deprecated: use [DeleteProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-delete-project-grant.api.mdx) instead.
      ///
      /// Remove a project grant. All user grants for this project grant will also be removed. A user will not have access to the project afterward (if permissions are checked).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveProjectGrantResponse> RemoveProjectGrantAsync(global::Zitadel.Management.V1.RemoveProjectGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveProjectGrantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Project Grant
      ///
      /// Deprecated: use [DeleteProjectGrant](apis/resources/project_service_v2/zitadel-project-v-2-beta-project-service-delete-project-grant.api.mdx) instead.
      ///
      /// Remove a project grant. All user grants for this project grant will also be removed. A user will not have access to the project afterward (if permissions are checked).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveProjectGrantResponse> RemoveProjectGrantAsync(global::Zitadel.Management.V1.RemoveProjectGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveProjectGrant, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProjectGrantMemberRolesResponse ListProjectGrantMemberRoles(global::Zitadel.Management.V1.ListProjectGrantMemberRolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectGrantMemberRoles(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProjectGrantMemberRolesResponse ListProjectGrantMemberRoles(global::Zitadel.Management.V1.ListProjectGrantMemberRolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProjectGrantMemberRoles, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProjectGrantMemberRolesResponse> ListProjectGrantMemberRolesAsync(global::Zitadel.Management.V1.ListProjectGrantMemberRolesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectGrantMemberRolesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProjectGrantMemberRolesResponse> ListProjectGrantMemberRolesAsync(global::Zitadel.Management.V1.ListProjectGrantMemberRolesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProjectGrantMemberRoles, null, options, request);
      }
      /// <summary>
      /// List Project Grant Members
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the project grant level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProjectGrantMembersResponse ListProjectGrantMembers(global::Zitadel.Management.V1.ListProjectGrantMembersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectGrantMembers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Project Grant Members
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the project grant level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProjectGrantMembersResponse ListProjectGrantMembers(global::Zitadel.Management.V1.ListProjectGrantMembersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProjectGrantMembers, null, options, request);
      }
      /// <summary>
      /// List Project Grant Members
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the project grant level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProjectGrantMembersResponse> ListProjectGrantMembersAsync(global::Zitadel.Management.V1.ListProjectGrantMembersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProjectGrantMembersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Project Grant Members
      ///
      /// Deprecated: use [ListAdministrators](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-list-administrators.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the project grant level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProjectGrantMembersResponse> ListProjectGrantMembersAsync(global::Zitadel.Management.V1.ListProjectGrantMembersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProjectGrantMembers, null, options, request);
      }
      /// <summary>
      /// Add Project Grant Member
      ///
      /// Deprecated: use [CreateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-create-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the project grant level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddProjectGrantMemberResponse AddProjectGrantMember(global::Zitadel.Management.V1.AddProjectGrantMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddProjectGrantMember(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add Project Grant Member
      ///
      /// Deprecated: use [CreateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-create-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the project grant level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddProjectGrantMemberResponse AddProjectGrantMember(global::Zitadel.Management.V1.AddProjectGrantMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddProjectGrantMember, null, options, request);
      }
      /// <summary>
      /// Add Project Grant Member
      ///
      /// Deprecated: use [CreateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-create-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the project grant level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddProjectGrantMemberResponse> AddProjectGrantMemberAsync(global::Zitadel.Management.V1.AddProjectGrantMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddProjectGrantMemberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add Project Grant Member
      ///
      /// Deprecated: use [CreateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-create-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request returns all users with memberships on the project grant level, matching the search queries. The search queries will be AND linked.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddProjectGrantMemberResponse> AddProjectGrantMemberAsync(global::Zitadel.Management.V1.AddProjectGrantMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddProjectGrantMember, null, options, request);
      }
      /// <summary>
      /// Update Project Grant Member
      ///
      /// Deprecated: use [UpdateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-update-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateProjectGrantMemberResponse UpdateProjectGrantMember(global::Zitadel.Management.V1.UpdateProjectGrantMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProjectGrantMember(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update Project Grant Member
      ///
      /// Deprecated: use [UpdateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-update-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateProjectGrantMemberResponse UpdateProjectGrantMember(global::Zitadel.Management.V1.UpdateProjectGrantMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateProjectGrantMember, null, options, request);
      }
      /// <summary>
      /// Update Project Grant Member
      ///
      /// Deprecated: use [UpdateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-update-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateProjectGrantMemberResponse> UpdateProjectGrantMemberAsync(global::Zitadel.Management.V1.UpdateProjectGrantMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateProjectGrantMemberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update Project Grant Member
      ///
      /// Deprecated: use [UpdateAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-update-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request changes the roles of an existing member. The whole roles list will be updated. Make sure to include roles that you don't want to change (remove).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateProjectGrantMemberResponse> UpdateProjectGrantMemberAsync(global::Zitadel.Management.V1.UpdateProjectGrantMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateProjectGrantMember, null, options, request);
      }
      /// <summary>
      /// Remove Project Grant Member
      ///
      /// Deprecated: use [DeleteAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-delete-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on a project grant level. The user can still have roles on another level (iam, organization, project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveProjectGrantMemberResponse RemoveProjectGrantMember(global::Zitadel.Management.V1.RemoveProjectGrantMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveProjectGrantMember(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Project Grant Member
      ///
      /// Deprecated: use [DeleteAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-delete-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on a project grant level. The user can still have roles on another level (iam, organization, project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveProjectGrantMemberResponse RemoveProjectGrantMember(global::Zitadel.Management.V1.RemoveProjectGrantMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveProjectGrantMember, null, options, request);
      }
      /// <summary>
      /// Remove Project Grant Member
      ///
      /// Deprecated: use [DeleteAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-delete-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on a project grant level. The user can still have roles on another level (iam, organization, project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveProjectGrantMemberResponse> RemoveProjectGrantMemberAsync(global::Zitadel.Management.V1.RemoveProjectGrantMemberRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveProjectGrantMemberAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Project Grant Member
      ///
      /// Deprecated: use [DeleteAdministrator](apis/resources/internal_permission_service_v2/zitadel-internal-permission-v-2-beta-internal-permission-service-delete-administrator.api.mdx) instead.
      ///
      /// Members are users with permission to administrate ZITADEL on different levels. This request removes a user from the members list on a project grant level. The user can still have roles on another level (iam, organization, project).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveProjectGrantMemberResponse> RemoveProjectGrantMemberAsync(global::Zitadel.Management.V1.RemoveProjectGrantMemberRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveProjectGrantMember, null, options, request);
      }
      /// <summary>
      /// Get User Grant By ID
      ///
      /// Deprecated: [List authorizations](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-list-authorizations.api.mdx) and filter by its ID.
      ///
      /// Returns a user grant per ID. A user grant is a role a user has for a specific project and organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetUserGrantByIDResponse GetUserGrantByID(global::Zitadel.Management.V1.GetUserGrantByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserGrantByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get User Grant By ID
      ///
      /// Deprecated: [List authorizations](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-list-authorizations.api.mdx) and filter by its ID.
      ///
      /// Returns a user grant per ID. A user grant is a role a user has for a specific project and organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetUserGrantByIDResponse GetUserGrantByID(global::Zitadel.Management.V1.GetUserGrantByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserGrantByID, null, options, request);
      }
      /// <summary>
      /// Get User Grant By ID
      ///
      /// Deprecated: [List authorizations](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-list-authorizations.api.mdx) and filter by its ID.
      ///
      /// Returns a user grant per ID. A user grant is a role a user has for a specific project and organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetUserGrantByIDResponse> GetUserGrantByIDAsync(global::Zitadel.Management.V1.GetUserGrantByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserGrantByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get User Grant By ID
      ///
      /// Deprecated: [List authorizations](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-list-authorizations.api.mdx) and filter by its ID.
      ///
      /// Returns a user grant per ID. A user grant is a role a user has for a specific project and organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetUserGrantByIDResponse> GetUserGrantByIDAsync(global::Zitadel.Management.V1.GetUserGrantByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserGrantByID, null, options, request);
      }
      /// <summary>
      /// Search User Grants
      ///
      /// Deprecated: [List authorizations](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-list-authorizations.api.mdx) and pass the user ID filter to search for a users grants on owned or granted projects.
      ///
      /// Returns a list of user grants that match the search queries. User grants are the roles users have for a specific project and organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListUserGrantResponse ListUserGrants(global::Zitadel.Management.V1.ListUserGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUserGrants(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search User Grants
      ///
      /// Deprecated: [List authorizations](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-list-authorizations.api.mdx) and pass the user ID filter to search for a users grants on owned or granted projects.
      ///
      /// Returns a list of user grants that match the search queries. User grants are the roles users have for a specific project and organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListUserGrantResponse ListUserGrants(global::Zitadel.Management.V1.ListUserGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListUserGrants, null, options, request);
      }
      /// <summary>
      /// Search User Grants
      ///
      /// Deprecated: [List authorizations](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-list-authorizations.api.mdx) and pass the user ID filter to search for a users grants on owned or granted projects.
      ///
      /// Returns a list of user grants that match the search queries. User grants are the roles users have for a specific project and organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListUserGrantResponse> ListUserGrantsAsync(global::Zitadel.Management.V1.ListUserGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUserGrantsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search User Grants
      ///
      /// Deprecated: [List authorizations](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-list-authorizations.api.mdx) and pass the user ID filter to search for a users grants on owned or granted projects.
      ///
      /// Returns a list of user grants that match the search queries. User grants are the roles users have for a specific project and organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListUserGrantResponse> ListUserGrantsAsync(global::Zitadel.Management.V1.ListUserGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListUserGrants, null, options, request);
      }
      /// <summary>
      /// Add User Grant
      ///
      /// Deprecated: [Add an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-create-authorization.api.mdx) to grant a user access to an owned or granted project.
      ///
      /// Add a user grant for a specific user. User grants are the roles users have for a specific project and organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddUserGrantResponse AddUserGrant(global::Zitadel.Management.V1.AddUserGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddUserGrant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add User Grant
      ///
      /// Deprecated: [Add an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-create-authorization.api.mdx) to grant a user access to an owned or granted project.
      ///
      /// Add a user grant for a specific user. User grants are the roles users have for a specific project and organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddUserGrantResponse AddUserGrant(global::Zitadel.Management.V1.AddUserGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddUserGrant, null, options, request);
      }
      /// <summary>
      /// Add User Grant
      ///
      /// Deprecated: [Add an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-create-authorization.api.mdx) to grant a user access to an owned or granted project.
      ///
      /// Add a user grant for a specific user. User grants are the roles users have for a specific project and organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddUserGrantResponse> AddUserGrantAsync(global::Zitadel.Management.V1.AddUserGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddUserGrantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add User Grant
      ///
      /// Deprecated: [Add an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-create-authorization.api.mdx) to grant a user access to an owned or granted project.
      ///
      /// Add a user grant for a specific user. User grants are the roles users have for a specific project and organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddUserGrantResponse> AddUserGrantAsync(global::Zitadel.Management.V1.AddUserGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddUserGrant, null, options, request);
      }
      /// <summary>
      /// Update User Grant
      ///
      /// Deprecated: [Update an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-update-authorization.api.mdx) to update a user's roles on an owned or granted project.
      ///
      /// Update the roles of a user grant. User grants are the roles users have for a specific project and organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateUserGrantResponse UpdateUserGrant(global::Zitadel.Management.V1.UpdateUserGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUserGrant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update User Grant
      ///
      /// Deprecated: [Update an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-update-authorization.api.mdx) to update a user's roles on an owned or granted project.
      ///
      /// Update the roles of a user grant. User grants are the roles users have for a specific project and organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateUserGrantResponse UpdateUserGrant(global::Zitadel.Management.V1.UpdateUserGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateUserGrant, null, options, request);
      }
      /// <summary>
      /// Update User Grant
      ///
      /// Deprecated: [Update an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-update-authorization.api.mdx) to update a user's roles on an owned or granted project.
      ///
      /// Update the roles of a user grant. User grants are the roles users have for a specific project and organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateUserGrantResponse> UpdateUserGrantAsync(global::Zitadel.Management.V1.UpdateUserGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateUserGrantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update User Grant
      ///
      /// Deprecated: [Update an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-update-authorization.api.mdx) to update a user's roles on an owned or granted project.
      ///
      /// Update the roles of a user grant. User grants are the roles users have for a specific project and organization.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateUserGrantResponse> UpdateUserGrantAsync(global::Zitadel.Management.V1.UpdateUserGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateUserGrant, null, options, request);
      }
      /// <summary>
      /// Deactivate User Grant
      ///
      /// Deprecated: [Deactivate an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-deactivate-authorization.api.mdx) to disable a user's access to an owned or granted project.
      ///
      /// Deactivate the user grant. The user will not be able to use the granted project anymore. Also, the roles will not be included in the tokens when requested. An error will be returned if the user grant is already deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeactivateUserGrantResponse DeactivateUserGrant(global::Zitadel.Management.V1.DeactivateUserGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateUserGrant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivate User Grant
      ///
      /// Deprecated: [Deactivate an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-deactivate-authorization.api.mdx) to disable a user's access to an owned or granted project.
      ///
      /// Deactivate the user grant. The user will not be able to use the granted project anymore. Also, the roles will not be included in the tokens when requested. An error will be returned if the user grant is already deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeactivateUserGrantResponse DeactivateUserGrant(global::Zitadel.Management.V1.DeactivateUserGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeactivateUserGrant, null, options, request);
      }
      /// <summary>
      /// Deactivate User Grant
      ///
      /// Deprecated: [Deactivate an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-deactivate-authorization.api.mdx) to disable a user's access to an owned or granted project.
      ///
      /// Deactivate the user grant. The user will not be able to use the granted project anymore. Also, the roles will not be included in the tokens when requested. An error will be returned if the user grant is already deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeactivateUserGrantResponse> DeactivateUserGrantAsync(global::Zitadel.Management.V1.DeactivateUserGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateUserGrantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivate User Grant
      ///
      /// Deprecated: [Deactivate an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-deactivate-authorization.api.mdx) to disable a user's access to an owned or granted project.
      ///
      /// Deactivate the user grant. The user will not be able to use the granted project anymore. Also, the roles will not be included in the tokens when requested. An error will be returned if the user grant is already deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeactivateUserGrantResponse> DeactivateUserGrantAsync(global::Zitadel.Management.V1.DeactivateUserGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeactivateUserGrant, null, options, request);
      }
      /// <summary>
      /// Reactivate User Grant
      ///
      /// Deprecated: [Activate an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-activate-authorization.api.mdx) to enable a user's access to an owned or granted project.
      ///
      /// Reactivate a deactivated user grant. The user will be able to use the granted project again. An error will be returned if the user grant is not deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ReactivateUserGrantResponse ReactivateUserGrant(global::Zitadel.Management.V1.ReactivateUserGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateUserGrant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reactivate User Grant
      ///
      /// Deprecated: [Activate an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-activate-authorization.api.mdx) to enable a user's access to an owned or granted project.
      ///
      /// Reactivate a deactivated user grant. The user will be able to use the granted project again. An error will be returned if the user grant is not deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ReactivateUserGrantResponse ReactivateUserGrant(global::Zitadel.Management.V1.ReactivateUserGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReactivateUserGrant, null, options, request);
      }
      /// <summary>
      /// Reactivate User Grant
      ///
      /// Deprecated: [Activate an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-activate-authorization.api.mdx) to enable a user's access to an owned or granted project.
      ///
      /// Reactivate a deactivated user grant. The user will be able to use the granted project again. An error will be returned if the user grant is not deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ReactivateUserGrantResponse> ReactivateUserGrantAsync(global::Zitadel.Management.V1.ReactivateUserGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateUserGrantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reactivate User Grant
      ///
      /// Deprecated: [Activate an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-activate-authorization.api.mdx) to enable a user's access to an owned or granted project.
      ///
      /// Reactivate a deactivated user grant. The user will be able to use the granted project again. An error will be returned if the user grant is not deactivated.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ReactivateUserGrantResponse> ReactivateUserGrantAsync(global::Zitadel.Management.V1.ReactivateUserGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReactivateUserGrant, null, options, request);
      }
      /// <summary>
      /// Remove User Grant
      ///
      /// Deprecated: [Delete an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-delete-authorization.api.mdx) to remove a users access to an owned or granted project.
      ///
      /// Removes the user grant from the user. The user will not be able to use the granted project anymore. Also, the roles will not be included in the tokens when requested.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveUserGrantResponse RemoveUserGrant(global::Zitadel.Management.V1.RemoveUserGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveUserGrant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove User Grant
      ///
      /// Deprecated: [Delete an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-delete-authorization.api.mdx) to remove a users access to an owned or granted project.
      ///
      /// Removes the user grant from the user. The user will not be able to use the granted project anymore. Also, the roles will not be included in the tokens when requested.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveUserGrantResponse RemoveUserGrant(global::Zitadel.Management.V1.RemoveUserGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveUserGrant, null, options, request);
      }
      /// <summary>
      /// Remove User Grant
      ///
      /// Deprecated: [Delete an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-delete-authorization.api.mdx) to remove a users access to an owned or granted project.
      ///
      /// Removes the user grant from the user. The user will not be able to use the granted project anymore. Also, the roles will not be included in the tokens when requested.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveUserGrantResponse> RemoveUserGrantAsync(global::Zitadel.Management.V1.RemoveUserGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveUserGrantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove User Grant
      ///
      /// Deprecated: [Delete an authorization](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-delete-authorization.api.mdx) to remove a users access to an owned or granted project.
      ///
      /// Removes the user grant from the user. The user will not be able to use the granted project anymore. Also, the roles will not be included in the tokens when requested.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveUserGrantResponse> RemoveUserGrantAsync(global::Zitadel.Management.V1.RemoveUserGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveUserGrant, null, options, request);
      }
      /// <summary>
      /// Bulk Remove User Grants
      ///
      /// Deprecated: [Delete authorizations one after the other](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-delete-authorization.api.mdx) to remove access for multiple users on multiple owned or granted projects.
      ///
      /// Remove a list of user grants. The users will not be able to use the granted project anymore. Also, the roles will not be included in the tokens when requested.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.BulkRemoveUserGrantResponse BulkRemoveUserGrant(global::Zitadel.Management.V1.BulkRemoveUserGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkRemoveUserGrant(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bulk Remove User Grants
      ///
      /// Deprecated: [Delete authorizations one after the other](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-delete-authorization.api.mdx) to remove access for multiple users on multiple owned or granted projects.
      ///
      /// Remove a list of user grants. The users will not be able to use the granted project anymore. Also, the roles will not be included in the tokens when requested.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.BulkRemoveUserGrantResponse BulkRemoveUserGrant(global::Zitadel.Management.V1.BulkRemoveUserGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_BulkRemoveUserGrant, null, options, request);
      }
      /// <summary>
      /// Bulk Remove User Grants
      ///
      /// Deprecated: [Delete authorizations one after the other](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-delete-authorization.api.mdx) to remove access for multiple users on multiple owned or granted projects.
      ///
      /// Remove a list of user grants. The users will not be able to use the granted project anymore. Also, the roles will not be included in the tokens when requested.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.BulkRemoveUserGrantResponse> BulkRemoveUserGrantAsync(global::Zitadel.Management.V1.BulkRemoveUserGrantRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BulkRemoveUserGrantAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Bulk Remove User Grants
      ///
      /// Deprecated: [Delete authorizations one after the other](apis/resources/authorization_service_v2/zitadel-authorization-v-2-beta-authorization-service-delete-authorization.api.mdx) to remove access for multiple users on multiple owned or granted projects.
      ///
      /// Remove a list of user grants. The users will not be able to use the granted project anymore. Also, the roles will not be included in the tokens when requested.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.BulkRemoveUserGrantResponse> BulkRemoveUserGrantAsync(global::Zitadel.Management.V1.BulkRemoveUserGrantRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_BulkRemoveUserGrant, null, options, request);
      }
      /// <summary>
      ///deprecated: please use DomainPolicy instead
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetOrgIAMPolicyResponse GetOrgIAMPolicy(global::Zitadel.Management.V1.GetOrgIAMPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrgIAMPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///deprecated: please use DomainPolicy instead
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetOrgIAMPolicyResponse GetOrgIAMPolicy(global::Zitadel.Management.V1.GetOrgIAMPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrgIAMPolicy, null, options, request);
      }
      /// <summary>
      ///deprecated: please use DomainPolicy instead
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetOrgIAMPolicyResponse> GetOrgIAMPolicyAsync(global::Zitadel.Management.V1.GetOrgIAMPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrgIAMPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///deprecated: please use DomainPolicy instead
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetOrgIAMPolicyResponse> GetOrgIAMPolicyAsync(global::Zitadel.Management.V1.GetOrgIAMPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrgIAMPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDomainPolicyResponse GetDomainPolicy(global::Zitadel.Management.V1.GetDomainPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDomainPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDomainPolicyResponse GetDomainPolicy(global::Zitadel.Management.V1.GetDomainPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDomainPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDomainPolicyResponse> GetDomainPolicyAsync(global::Zitadel.Management.V1.GetDomainPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDomainPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDomainPolicyResponse> GetDomainPolicyAsync(global::Zitadel.Management.V1.GetDomainPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDomainPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetLoginPolicyResponse GetLoginPolicy(global::Zitadel.Management.V1.GetLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLoginPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetLoginPolicyResponse GetLoginPolicy(global::Zitadel.Management.V1.GetLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetLoginPolicyResponse> GetLoginPolicyAsync(global::Zitadel.Management.V1.GetLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLoginPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetLoginPolicyResponse> GetLoginPolicyAsync(global::Zitadel.Management.V1.GetLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultLoginPolicyResponse GetDefaultLoginPolicy(global::Zitadel.Management.V1.GetDefaultLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultLoginPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultLoginPolicyResponse GetDefaultLoginPolicy(global::Zitadel.Management.V1.GetDefaultLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultLoginPolicyResponse> GetDefaultLoginPolicyAsync(global::Zitadel.Management.V1.GetDefaultLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultLoginPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultLoginPolicyResponse> GetDefaultLoginPolicyAsync(global::Zitadel.Management.V1.GetDefaultLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddCustomLoginPolicyResponse AddCustomLoginPolicy(global::Zitadel.Management.V1.AddCustomLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCustomLoginPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddCustomLoginPolicyResponse AddCustomLoginPolicy(global::Zitadel.Management.V1.AddCustomLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddCustomLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddCustomLoginPolicyResponse> AddCustomLoginPolicyAsync(global::Zitadel.Management.V1.AddCustomLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCustomLoginPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddCustomLoginPolicyResponse> AddCustomLoginPolicyAsync(global::Zitadel.Management.V1.AddCustomLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddCustomLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateCustomLoginPolicyResponse UpdateCustomLoginPolicy(global::Zitadel.Management.V1.UpdateCustomLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomLoginPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateCustomLoginPolicyResponse UpdateCustomLoginPolicy(global::Zitadel.Management.V1.UpdateCustomLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCustomLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateCustomLoginPolicyResponse> UpdateCustomLoginPolicyAsync(global::Zitadel.Management.V1.UpdateCustomLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomLoginPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateCustomLoginPolicyResponse> UpdateCustomLoginPolicyAsync(global::Zitadel.Management.V1.UpdateCustomLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCustomLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetLoginPolicyToDefaultResponse ResetLoginPolicyToDefault(global::Zitadel.Management.V1.ResetLoginPolicyToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetLoginPolicyToDefault(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetLoginPolicyToDefaultResponse ResetLoginPolicyToDefault(global::Zitadel.Management.V1.ResetLoginPolicyToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetLoginPolicyToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetLoginPolicyToDefaultResponse> ResetLoginPolicyToDefaultAsync(global::Zitadel.Management.V1.ResetLoginPolicyToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetLoginPolicyToDefaultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetLoginPolicyToDefaultResponse> ResetLoginPolicyToDefaultAsync(global::Zitadel.Management.V1.ResetLoginPolicyToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetLoginPolicyToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListLoginPolicyIDPsResponse ListLoginPolicyIDPs(global::Zitadel.Management.V1.ListLoginPolicyIDPsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListLoginPolicyIDPs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListLoginPolicyIDPsResponse ListLoginPolicyIDPs(global::Zitadel.Management.V1.ListLoginPolicyIDPsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListLoginPolicyIDPs, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListLoginPolicyIDPsResponse> ListLoginPolicyIDPsAsync(global::Zitadel.Management.V1.ListLoginPolicyIDPsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListLoginPolicyIDPsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListLoginPolicyIDPsResponse> ListLoginPolicyIDPsAsync(global::Zitadel.Management.V1.ListLoginPolicyIDPsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListLoginPolicyIDPs, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddIDPToLoginPolicyResponse AddIDPToLoginPolicy(global::Zitadel.Management.V1.AddIDPToLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddIDPToLoginPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddIDPToLoginPolicyResponse AddIDPToLoginPolicy(global::Zitadel.Management.V1.AddIDPToLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddIDPToLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddIDPToLoginPolicyResponse> AddIDPToLoginPolicyAsync(global::Zitadel.Management.V1.AddIDPToLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddIDPToLoginPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddIDPToLoginPolicyResponse> AddIDPToLoginPolicyAsync(global::Zitadel.Management.V1.AddIDPToLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddIDPToLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyResponse RemoveIDPFromLoginPolicy(global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveIDPFromLoginPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyResponse RemoveIDPFromLoginPolicy(global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveIDPFromLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyResponse> RemoveIDPFromLoginPolicyAsync(global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveIDPFromLoginPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyResponse> RemoveIDPFromLoginPolicyAsync(global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveIDPFromLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListLoginPolicySecondFactorsResponse ListLoginPolicySecondFactors(global::Zitadel.Management.V1.ListLoginPolicySecondFactorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListLoginPolicySecondFactors(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListLoginPolicySecondFactorsResponse ListLoginPolicySecondFactors(global::Zitadel.Management.V1.ListLoginPolicySecondFactorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListLoginPolicySecondFactors, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListLoginPolicySecondFactorsResponse> ListLoginPolicySecondFactorsAsync(global::Zitadel.Management.V1.ListLoginPolicySecondFactorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListLoginPolicySecondFactorsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListLoginPolicySecondFactorsResponse> ListLoginPolicySecondFactorsAsync(global::Zitadel.Management.V1.ListLoginPolicySecondFactorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListLoginPolicySecondFactors, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyResponse AddSecondFactorToLoginPolicy(global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSecondFactorToLoginPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyResponse AddSecondFactorToLoginPolicy(global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddSecondFactorToLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyResponse> AddSecondFactorToLoginPolicyAsync(global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSecondFactorToLoginPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyResponse> AddSecondFactorToLoginPolicyAsync(global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddSecondFactorToLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyResponse RemoveSecondFactorFromLoginPolicy(global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveSecondFactorFromLoginPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyResponse RemoveSecondFactorFromLoginPolicy(global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveSecondFactorFromLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyResponse> RemoveSecondFactorFromLoginPolicyAsync(global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveSecondFactorFromLoginPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyResponse> RemoveSecondFactorFromLoginPolicyAsync(global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveSecondFactorFromLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsResponse ListLoginPolicyMultiFactors(global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListLoginPolicyMultiFactors(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsResponse ListLoginPolicyMultiFactors(global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListLoginPolicyMultiFactors, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsResponse> ListLoginPolicyMultiFactorsAsync(global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListLoginPolicyMultiFactorsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsResponse> ListLoginPolicyMultiFactorsAsync(global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListLoginPolicyMultiFactors, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyResponse AddMultiFactorToLoginPolicy(global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddMultiFactorToLoginPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyResponse AddMultiFactorToLoginPolicy(global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddMultiFactorToLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyResponse> AddMultiFactorToLoginPolicyAsync(global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddMultiFactorToLoginPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyResponse> AddMultiFactorToLoginPolicyAsync(global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddMultiFactorToLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyResponse RemoveMultiFactorFromLoginPolicy(global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveMultiFactorFromLoginPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyResponse RemoveMultiFactorFromLoginPolicy(global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveMultiFactorFromLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyResponse> RemoveMultiFactorFromLoginPolicyAsync(global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveMultiFactorFromLoginPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyResponse> RemoveMultiFactorFromLoginPolicyAsync(global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveMultiFactorFromLoginPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetPasswordComplexityPolicyResponse GetPasswordComplexityPolicy(global::Zitadel.Management.V1.GetPasswordComplexityPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPasswordComplexityPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetPasswordComplexityPolicyResponse GetPasswordComplexityPolicy(global::Zitadel.Management.V1.GetPasswordComplexityPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPasswordComplexityPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetPasswordComplexityPolicyResponse> GetPasswordComplexityPolicyAsync(global::Zitadel.Management.V1.GetPasswordComplexityPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPasswordComplexityPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetPasswordComplexityPolicyResponse> GetPasswordComplexityPolicyAsync(global::Zitadel.Management.V1.GetPasswordComplexityPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPasswordComplexityPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyResponse GetDefaultPasswordComplexityPolicy(global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultPasswordComplexityPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyResponse GetDefaultPasswordComplexityPolicy(global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultPasswordComplexityPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyResponse> GetDefaultPasswordComplexityPolicyAsync(global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultPasswordComplexityPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyResponse> GetDefaultPasswordComplexityPolicyAsync(global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultPasswordComplexityPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyResponse AddCustomPasswordComplexityPolicy(global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCustomPasswordComplexityPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyResponse AddCustomPasswordComplexityPolicy(global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddCustomPasswordComplexityPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyResponse> AddCustomPasswordComplexityPolicyAsync(global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCustomPasswordComplexityPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyResponse> AddCustomPasswordComplexityPolicyAsync(global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddCustomPasswordComplexityPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyResponse UpdateCustomPasswordComplexityPolicy(global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomPasswordComplexityPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyResponse UpdateCustomPasswordComplexityPolicy(global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCustomPasswordComplexityPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyResponse> UpdateCustomPasswordComplexityPolicyAsync(global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomPasswordComplexityPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyResponse> UpdateCustomPasswordComplexityPolicyAsync(global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCustomPasswordComplexityPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultResponse ResetPasswordComplexityPolicyToDefault(global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetPasswordComplexityPolicyToDefault(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultResponse ResetPasswordComplexityPolicyToDefault(global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetPasswordComplexityPolicyToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultResponse> ResetPasswordComplexityPolicyToDefaultAsync(global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetPasswordComplexityPolicyToDefaultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultResponse> ResetPasswordComplexityPolicyToDefaultAsync(global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetPasswordComplexityPolicyToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetPasswordAgePolicyResponse GetPasswordAgePolicy(global::Zitadel.Management.V1.GetPasswordAgePolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPasswordAgePolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetPasswordAgePolicyResponse GetPasswordAgePolicy(global::Zitadel.Management.V1.GetPasswordAgePolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPasswordAgePolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetPasswordAgePolicyResponse> GetPasswordAgePolicyAsync(global::Zitadel.Management.V1.GetPasswordAgePolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPasswordAgePolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetPasswordAgePolicyResponse> GetPasswordAgePolicyAsync(global::Zitadel.Management.V1.GetPasswordAgePolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPasswordAgePolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyResponse GetDefaultPasswordAgePolicy(global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultPasswordAgePolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyResponse GetDefaultPasswordAgePolicy(global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultPasswordAgePolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyResponse> GetDefaultPasswordAgePolicyAsync(global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultPasswordAgePolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyResponse> GetDefaultPasswordAgePolicyAsync(global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultPasswordAgePolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddCustomPasswordAgePolicyResponse AddCustomPasswordAgePolicy(global::Zitadel.Management.V1.AddCustomPasswordAgePolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCustomPasswordAgePolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddCustomPasswordAgePolicyResponse AddCustomPasswordAgePolicy(global::Zitadel.Management.V1.AddCustomPasswordAgePolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddCustomPasswordAgePolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddCustomPasswordAgePolicyResponse> AddCustomPasswordAgePolicyAsync(global::Zitadel.Management.V1.AddCustomPasswordAgePolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCustomPasswordAgePolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddCustomPasswordAgePolicyResponse> AddCustomPasswordAgePolicyAsync(global::Zitadel.Management.V1.AddCustomPasswordAgePolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddCustomPasswordAgePolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyResponse UpdateCustomPasswordAgePolicy(global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomPasswordAgePolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyResponse UpdateCustomPasswordAgePolicy(global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCustomPasswordAgePolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyResponse> UpdateCustomPasswordAgePolicyAsync(global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomPasswordAgePolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyResponse> UpdateCustomPasswordAgePolicyAsync(global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCustomPasswordAgePolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultResponse ResetPasswordAgePolicyToDefault(global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetPasswordAgePolicyToDefault(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultResponse ResetPasswordAgePolicyToDefault(global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetPasswordAgePolicyToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultResponse> ResetPasswordAgePolicyToDefaultAsync(global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetPasswordAgePolicyToDefaultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultResponse> ResetPasswordAgePolicyToDefaultAsync(global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetPasswordAgePolicyToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetLockoutPolicyResponse GetLockoutPolicy(global::Zitadel.Management.V1.GetLockoutPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLockoutPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetLockoutPolicyResponse GetLockoutPolicy(global::Zitadel.Management.V1.GetLockoutPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLockoutPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetLockoutPolicyResponse> GetLockoutPolicyAsync(global::Zitadel.Management.V1.GetLockoutPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLockoutPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetLockoutPolicyResponse> GetLockoutPolicyAsync(global::Zitadel.Management.V1.GetLockoutPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLockoutPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultLockoutPolicyResponse GetDefaultLockoutPolicy(global::Zitadel.Management.V1.GetDefaultLockoutPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultLockoutPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultLockoutPolicyResponse GetDefaultLockoutPolicy(global::Zitadel.Management.V1.GetDefaultLockoutPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultLockoutPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultLockoutPolicyResponse> GetDefaultLockoutPolicyAsync(global::Zitadel.Management.V1.GetDefaultLockoutPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultLockoutPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultLockoutPolicyResponse> GetDefaultLockoutPolicyAsync(global::Zitadel.Management.V1.GetDefaultLockoutPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultLockoutPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddCustomLockoutPolicyResponse AddCustomLockoutPolicy(global::Zitadel.Management.V1.AddCustomLockoutPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCustomLockoutPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddCustomLockoutPolicyResponse AddCustomLockoutPolicy(global::Zitadel.Management.V1.AddCustomLockoutPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddCustomLockoutPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddCustomLockoutPolicyResponse> AddCustomLockoutPolicyAsync(global::Zitadel.Management.V1.AddCustomLockoutPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCustomLockoutPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddCustomLockoutPolicyResponse> AddCustomLockoutPolicyAsync(global::Zitadel.Management.V1.AddCustomLockoutPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddCustomLockoutPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateCustomLockoutPolicyResponse UpdateCustomLockoutPolicy(global::Zitadel.Management.V1.UpdateCustomLockoutPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomLockoutPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateCustomLockoutPolicyResponse UpdateCustomLockoutPolicy(global::Zitadel.Management.V1.UpdateCustomLockoutPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCustomLockoutPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateCustomLockoutPolicyResponse> UpdateCustomLockoutPolicyAsync(global::Zitadel.Management.V1.UpdateCustomLockoutPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomLockoutPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateCustomLockoutPolicyResponse> UpdateCustomLockoutPolicyAsync(global::Zitadel.Management.V1.UpdateCustomLockoutPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCustomLockoutPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultResponse ResetLockoutPolicyToDefault(global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetLockoutPolicyToDefault(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultResponse ResetLockoutPolicyToDefault(global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetLockoutPolicyToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultResponse> ResetLockoutPolicyToDefaultAsync(global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetLockoutPolicyToDefaultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultResponse> ResetLockoutPolicyToDefaultAsync(global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetLockoutPolicyToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetPrivacyPolicyResponse GetPrivacyPolicy(global::Zitadel.Management.V1.GetPrivacyPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPrivacyPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetPrivacyPolicyResponse GetPrivacyPolicy(global::Zitadel.Management.V1.GetPrivacyPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPrivacyPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetPrivacyPolicyResponse> GetPrivacyPolicyAsync(global::Zitadel.Management.V1.GetPrivacyPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPrivacyPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetPrivacyPolicyResponse> GetPrivacyPolicyAsync(global::Zitadel.Management.V1.GetPrivacyPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPrivacyPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultPrivacyPolicyResponse GetDefaultPrivacyPolicy(global::Zitadel.Management.V1.GetDefaultPrivacyPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultPrivacyPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultPrivacyPolicyResponse GetDefaultPrivacyPolicy(global::Zitadel.Management.V1.GetDefaultPrivacyPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultPrivacyPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultPrivacyPolicyResponse> GetDefaultPrivacyPolicyAsync(global::Zitadel.Management.V1.GetDefaultPrivacyPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultPrivacyPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultPrivacyPolicyResponse> GetDefaultPrivacyPolicyAsync(global::Zitadel.Management.V1.GetDefaultPrivacyPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultPrivacyPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddCustomPrivacyPolicyResponse AddCustomPrivacyPolicy(global::Zitadel.Management.V1.AddCustomPrivacyPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCustomPrivacyPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddCustomPrivacyPolicyResponse AddCustomPrivacyPolicy(global::Zitadel.Management.V1.AddCustomPrivacyPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddCustomPrivacyPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddCustomPrivacyPolicyResponse> AddCustomPrivacyPolicyAsync(global::Zitadel.Management.V1.AddCustomPrivacyPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCustomPrivacyPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddCustomPrivacyPolicyResponse> AddCustomPrivacyPolicyAsync(global::Zitadel.Management.V1.AddCustomPrivacyPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddCustomPrivacyPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyResponse UpdateCustomPrivacyPolicy(global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomPrivacyPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyResponse UpdateCustomPrivacyPolicy(global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCustomPrivacyPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyResponse> UpdateCustomPrivacyPolicyAsync(global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomPrivacyPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyResponse> UpdateCustomPrivacyPolicyAsync(global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCustomPrivacyPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultResponse ResetPrivacyPolicyToDefault(global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetPrivacyPolicyToDefault(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultResponse ResetPrivacyPolicyToDefault(global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetPrivacyPolicyToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultResponse> ResetPrivacyPolicyToDefaultAsync(global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetPrivacyPolicyToDefaultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultResponse> ResetPrivacyPolicyToDefaultAsync(global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetPrivacyPolicyToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetNotificationPolicyResponse GetNotificationPolicy(global::Zitadel.Management.V1.GetNotificationPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNotificationPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetNotificationPolicyResponse GetNotificationPolicy(global::Zitadel.Management.V1.GetNotificationPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetNotificationPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetNotificationPolicyResponse> GetNotificationPolicyAsync(global::Zitadel.Management.V1.GetNotificationPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetNotificationPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetNotificationPolicyResponse> GetNotificationPolicyAsync(global::Zitadel.Management.V1.GetNotificationPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetNotificationPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultNotificationPolicyResponse GetDefaultNotificationPolicy(global::Zitadel.Management.V1.GetDefaultNotificationPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultNotificationPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultNotificationPolicyResponse GetDefaultNotificationPolicy(global::Zitadel.Management.V1.GetDefaultNotificationPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultNotificationPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultNotificationPolicyResponse> GetDefaultNotificationPolicyAsync(global::Zitadel.Management.V1.GetDefaultNotificationPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultNotificationPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultNotificationPolicyResponse> GetDefaultNotificationPolicyAsync(global::Zitadel.Management.V1.GetDefaultNotificationPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultNotificationPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddCustomNotificationPolicyResponse AddCustomNotificationPolicy(global::Zitadel.Management.V1.AddCustomNotificationPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCustomNotificationPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddCustomNotificationPolicyResponse AddCustomNotificationPolicy(global::Zitadel.Management.V1.AddCustomNotificationPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddCustomNotificationPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddCustomNotificationPolicyResponse> AddCustomNotificationPolicyAsync(global::Zitadel.Management.V1.AddCustomNotificationPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCustomNotificationPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddCustomNotificationPolicyResponse> AddCustomNotificationPolicyAsync(global::Zitadel.Management.V1.AddCustomNotificationPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddCustomNotificationPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateCustomNotificationPolicyResponse UpdateCustomNotificationPolicy(global::Zitadel.Management.V1.UpdateCustomNotificationPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomNotificationPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateCustomNotificationPolicyResponse UpdateCustomNotificationPolicy(global::Zitadel.Management.V1.UpdateCustomNotificationPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCustomNotificationPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateCustomNotificationPolicyResponse> UpdateCustomNotificationPolicyAsync(global::Zitadel.Management.V1.UpdateCustomNotificationPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomNotificationPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateCustomNotificationPolicyResponse> UpdateCustomNotificationPolicyAsync(global::Zitadel.Management.V1.UpdateCustomNotificationPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCustomNotificationPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultResponse ResetNotificationPolicyToDefault(global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetNotificationPolicyToDefault(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultResponse ResetNotificationPolicyToDefault(global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetNotificationPolicyToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultResponse> ResetNotificationPolicyToDefaultAsync(global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetNotificationPolicyToDefaultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultResponse> ResetNotificationPolicyToDefaultAsync(global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetNotificationPolicyToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetLabelPolicyResponse GetLabelPolicy(global::Zitadel.Management.V1.GetLabelPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLabelPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetLabelPolicyResponse GetLabelPolicy(global::Zitadel.Management.V1.GetLabelPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLabelPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetLabelPolicyResponse> GetLabelPolicyAsync(global::Zitadel.Management.V1.GetLabelPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLabelPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetLabelPolicyResponse> GetLabelPolicyAsync(global::Zitadel.Management.V1.GetLabelPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLabelPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetPreviewLabelPolicyResponse GetPreviewLabelPolicy(global::Zitadel.Management.V1.GetPreviewLabelPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPreviewLabelPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetPreviewLabelPolicyResponse GetPreviewLabelPolicy(global::Zitadel.Management.V1.GetPreviewLabelPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPreviewLabelPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetPreviewLabelPolicyResponse> GetPreviewLabelPolicyAsync(global::Zitadel.Management.V1.GetPreviewLabelPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPreviewLabelPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetPreviewLabelPolicyResponse> GetPreviewLabelPolicyAsync(global::Zitadel.Management.V1.GetPreviewLabelPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPreviewLabelPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultLabelPolicyResponse GetDefaultLabelPolicy(global::Zitadel.Management.V1.GetDefaultLabelPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultLabelPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultLabelPolicyResponse GetDefaultLabelPolicy(global::Zitadel.Management.V1.GetDefaultLabelPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultLabelPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultLabelPolicyResponse> GetDefaultLabelPolicyAsync(global::Zitadel.Management.V1.GetDefaultLabelPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultLabelPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultLabelPolicyResponse> GetDefaultLabelPolicyAsync(global::Zitadel.Management.V1.GetDefaultLabelPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultLabelPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddCustomLabelPolicyResponse AddCustomLabelPolicy(global::Zitadel.Management.V1.AddCustomLabelPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCustomLabelPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddCustomLabelPolicyResponse AddCustomLabelPolicy(global::Zitadel.Management.V1.AddCustomLabelPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddCustomLabelPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddCustomLabelPolicyResponse> AddCustomLabelPolicyAsync(global::Zitadel.Management.V1.AddCustomLabelPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCustomLabelPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddCustomLabelPolicyResponse> AddCustomLabelPolicyAsync(global::Zitadel.Management.V1.AddCustomLabelPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddCustomLabelPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateCustomLabelPolicyResponse UpdateCustomLabelPolicy(global::Zitadel.Management.V1.UpdateCustomLabelPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomLabelPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateCustomLabelPolicyResponse UpdateCustomLabelPolicy(global::Zitadel.Management.V1.UpdateCustomLabelPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateCustomLabelPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateCustomLabelPolicyResponse> UpdateCustomLabelPolicyAsync(global::Zitadel.Management.V1.UpdateCustomLabelPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateCustomLabelPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateCustomLabelPolicyResponse> UpdateCustomLabelPolicyAsync(global::Zitadel.Management.V1.UpdateCustomLabelPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateCustomLabelPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ActivateCustomLabelPolicyResponse ActivateCustomLabelPolicy(global::Zitadel.Management.V1.ActivateCustomLabelPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ActivateCustomLabelPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ActivateCustomLabelPolicyResponse ActivateCustomLabelPolicy(global::Zitadel.Management.V1.ActivateCustomLabelPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ActivateCustomLabelPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ActivateCustomLabelPolicyResponse> ActivateCustomLabelPolicyAsync(global::Zitadel.Management.V1.ActivateCustomLabelPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ActivateCustomLabelPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ActivateCustomLabelPolicyResponse> ActivateCustomLabelPolicyAsync(global::Zitadel.Management.V1.ActivateCustomLabelPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ActivateCustomLabelPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoResponse RemoveCustomLabelPolicyLogo(global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveCustomLabelPolicyLogo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoResponse RemoveCustomLabelPolicyLogo(global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveCustomLabelPolicyLogo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoResponse> RemoveCustomLabelPolicyLogoAsync(global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveCustomLabelPolicyLogoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoResponse> RemoveCustomLabelPolicyLogoAsync(global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveCustomLabelPolicyLogo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkResponse RemoveCustomLabelPolicyLogoDark(global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveCustomLabelPolicyLogoDark(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkResponse RemoveCustomLabelPolicyLogoDark(global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveCustomLabelPolicyLogoDark, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkResponse> RemoveCustomLabelPolicyLogoDarkAsync(global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveCustomLabelPolicyLogoDarkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkResponse> RemoveCustomLabelPolicyLogoDarkAsync(global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveCustomLabelPolicyLogoDark, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconResponse RemoveCustomLabelPolicyIcon(global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveCustomLabelPolicyIcon(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconResponse RemoveCustomLabelPolicyIcon(global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveCustomLabelPolicyIcon, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconResponse> RemoveCustomLabelPolicyIconAsync(global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveCustomLabelPolicyIconAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconResponse> RemoveCustomLabelPolicyIconAsync(global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveCustomLabelPolicyIcon, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkResponse RemoveCustomLabelPolicyIconDark(global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveCustomLabelPolicyIconDark(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkResponse RemoveCustomLabelPolicyIconDark(global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveCustomLabelPolicyIconDark, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkResponse> RemoveCustomLabelPolicyIconDarkAsync(global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveCustomLabelPolicyIconDarkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkResponse> RemoveCustomLabelPolicyIconDarkAsync(global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveCustomLabelPolicyIconDark, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontResponse RemoveCustomLabelPolicyFont(global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveCustomLabelPolicyFont(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontResponse RemoveCustomLabelPolicyFont(global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveCustomLabelPolicyFont, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontResponse> RemoveCustomLabelPolicyFontAsync(global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveCustomLabelPolicyFontAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontResponse> RemoveCustomLabelPolicyFontAsync(global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveCustomLabelPolicyFont, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetLabelPolicyToDefaultResponse ResetLabelPolicyToDefault(global::Zitadel.Management.V1.ResetLabelPolicyToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetLabelPolicyToDefault(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetLabelPolicyToDefaultResponse ResetLabelPolicyToDefault(global::Zitadel.Management.V1.ResetLabelPolicyToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetLabelPolicyToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetLabelPolicyToDefaultResponse> ResetLabelPolicyToDefaultAsync(global::Zitadel.Management.V1.ResetLabelPolicyToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetLabelPolicyToDefaultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetLabelPolicyToDefaultResponse> ResetLabelPolicyToDefaultAsync(global::Zitadel.Management.V1.ResetLabelPolicyToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetLabelPolicyToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomInitMessageTextResponse GetCustomInitMessageText(global::Zitadel.Management.V1.GetCustomInitMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomInitMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomInitMessageTextResponse GetCustomInitMessageText(global::Zitadel.Management.V1.GetCustomInitMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomInitMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomInitMessageTextResponse> GetCustomInitMessageTextAsync(global::Zitadel.Management.V1.GetCustomInitMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomInitMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomInitMessageTextResponse> GetCustomInitMessageTextAsync(global::Zitadel.Management.V1.GetCustomInitMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomInitMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultInitMessageTextResponse GetDefaultInitMessageText(global::Zitadel.Management.V1.GetDefaultInitMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultInitMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultInitMessageTextResponse GetDefaultInitMessageText(global::Zitadel.Management.V1.GetDefaultInitMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultInitMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultInitMessageTextResponse> GetDefaultInitMessageTextAsync(global::Zitadel.Management.V1.GetDefaultInitMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultInitMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultInitMessageTextResponse> GetDefaultInitMessageTextAsync(global::Zitadel.Management.V1.GetDefaultInitMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultInitMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomInitMessageTextResponse SetCustomInitMessageText(global::Zitadel.Management.V1.SetCustomInitMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomInitMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomInitMessageTextResponse SetCustomInitMessageText(global::Zitadel.Management.V1.SetCustomInitMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetCustomInitMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomInitMessageTextResponse> SetCustomInitMessageTextAsync(global::Zitadel.Management.V1.SetCustomInitMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomInitMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomInitMessageTextResponse> SetCustomInitMessageTextAsync(global::Zitadel.Management.V1.SetCustomInitMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetCustomInitMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultResponse ResetCustomInitMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomInitMessageTextToDefault(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultResponse ResetCustomInitMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetCustomInitMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultResponse> ResetCustomInitMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomInitMessageTextToDefaultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultResponse> ResetCustomInitMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetCustomInitMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextResponse GetCustomPasswordResetMessageText(global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomPasswordResetMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextResponse GetCustomPasswordResetMessageText(global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomPasswordResetMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextResponse> GetCustomPasswordResetMessageTextAsync(global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomPasswordResetMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextResponse> GetCustomPasswordResetMessageTextAsync(global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomPasswordResetMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextResponse GetDefaultPasswordResetMessageText(global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultPasswordResetMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextResponse GetDefaultPasswordResetMessageText(global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultPasswordResetMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextResponse> GetDefaultPasswordResetMessageTextAsync(global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultPasswordResetMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextResponse> GetDefaultPasswordResetMessageTextAsync(global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultPasswordResetMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextResponse SetCustomPasswordResetMessageText(global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomPasswordResetMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextResponse SetCustomPasswordResetMessageText(global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetCustomPasswordResetMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextResponse> SetCustomPasswordResetMessageTextAsync(global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomPasswordResetMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextResponse> SetCustomPasswordResetMessageTextAsync(global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetCustomPasswordResetMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultResponse ResetCustomPasswordResetMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomPasswordResetMessageTextToDefault(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultResponse ResetCustomPasswordResetMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetCustomPasswordResetMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultResponse> ResetCustomPasswordResetMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomPasswordResetMessageTextToDefaultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultResponse> ResetCustomPasswordResetMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetCustomPasswordResetMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextResponse GetCustomVerifyEmailMessageText(global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomVerifyEmailMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextResponse GetCustomVerifyEmailMessageText(global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomVerifyEmailMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextResponse> GetCustomVerifyEmailMessageTextAsync(global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomVerifyEmailMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextResponse> GetCustomVerifyEmailMessageTextAsync(global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomVerifyEmailMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextResponse GetDefaultVerifyEmailMessageText(global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultVerifyEmailMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextResponse GetDefaultVerifyEmailMessageText(global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultVerifyEmailMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextResponse> GetDefaultVerifyEmailMessageTextAsync(global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultVerifyEmailMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextResponse> GetDefaultVerifyEmailMessageTextAsync(global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultVerifyEmailMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextResponse SetCustomVerifyEmailMessageText(global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomVerifyEmailMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextResponse SetCustomVerifyEmailMessageText(global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetCustomVerifyEmailMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextResponse> SetCustomVerifyEmailMessageTextAsync(global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomVerifyEmailMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextResponse> SetCustomVerifyEmailMessageTextAsync(global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetCustomVerifyEmailMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultResponse ResetCustomVerifyEmailMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomVerifyEmailMessageTextToDefault(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultResponse ResetCustomVerifyEmailMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetCustomVerifyEmailMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultResponse> ResetCustomVerifyEmailMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomVerifyEmailMessageTextToDefaultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultResponse> ResetCustomVerifyEmailMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetCustomVerifyEmailMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextResponse GetCustomVerifyPhoneMessageText(global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomVerifyPhoneMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextResponse GetCustomVerifyPhoneMessageText(global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomVerifyPhoneMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextResponse> GetCustomVerifyPhoneMessageTextAsync(global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomVerifyPhoneMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextResponse> GetCustomVerifyPhoneMessageTextAsync(global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomVerifyPhoneMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextResponse GetDefaultVerifyPhoneMessageText(global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultVerifyPhoneMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextResponse GetDefaultVerifyPhoneMessageText(global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultVerifyPhoneMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextResponse> GetDefaultVerifyPhoneMessageTextAsync(global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultVerifyPhoneMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextResponse> GetDefaultVerifyPhoneMessageTextAsync(global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultVerifyPhoneMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextResponse SetCustomVerifyPhoneMessageText(global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomVerifyPhoneMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextResponse SetCustomVerifyPhoneMessageText(global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetCustomVerifyPhoneMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextResponse> SetCustomVerifyPhoneMessageTextAsync(global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomVerifyPhoneMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextResponse> SetCustomVerifyPhoneMessageTextAsync(global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetCustomVerifyPhoneMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultResponse ResetCustomVerifyPhoneMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomVerifyPhoneMessageTextToDefault(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultResponse ResetCustomVerifyPhoneMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetCustomVerifyPhoneMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultResponse> ResetCustomVerifyPhoneMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomVerifyPhoneMessageTextToDefaultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultResponse> ResetCustomVerifyPhoneMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetCustomVerifyPhoneMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextResponse GetCustomVerifySMSOTPMessageText(global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomVerifySMSOTPMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextResponse GetCustomVerifySMSOTPMessageText(global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomVerifySMSOTPMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextResponse> GetCustomVerifySMSOTPMessageTextAsync(global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomVerifySMSOTPMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextResponse> GetCustomVerifySMSOTPMessageTextAsync(global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomVerifySMSOTPMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextResponse GetDefaultVerifySMSOTPMessageText(global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultVerifySMSOTPMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextResponse GetDefaultVerifySMSOTPMessageText(global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultVerifySMSOTPMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextResponse> GetDefaultVerifySMSOTPMessageTextAsync(global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultVerifySMSOTPMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextResponse> GetDefaultVerifySMSOTPMessageTextAsync(global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultVerifySMSOTPMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextResponse SetCustomVerifySMSOTPMessageText(global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomVerifySMSOTPMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextResponse SetCustomVerifySMSOTPMessageText(global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetCustomVerifySMSOTPMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextResponse> SetCustomVerifySMSOTPMessageTextAsync(global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomVerifySMSOTPMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextResponse> SetCustomVerifySMSOTPMessageTextAsync(global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetCustomVerifySMSOTPMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultResponse ResetCustomVerifySMSOTPMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomVerifySMSOTPMessageTextToDefault(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultResponse ResetCustomVerifySMSOTPMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetCustomVerifySMSOTPMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultResponse> ResetCustomVerifySMSOTPMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomVerifySMSOTPMessageTextToDefaultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultResponse> ResetCustomVerifySMSOTPMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetCustomVerifySMSOTPMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextResponse GetCustomVerifyEmailOTPMessageText(global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomVerifyEmailOTPMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextResponse GetCustomVerifyEmailOTPMessageText(global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomVerifyEmailOTPMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextResponse> GetCustomVerifyEmailOTPMessageTextAsync(global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomVerifyEmailOTPMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextResponse> GetCustomVerifyEmailOTPMessageTextAsync(global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomVerifyEmailOTPMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextResponse GetDefaultVerifyEmailOTPMessageText(global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultVerifyEmailOTPMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextResponse GetDefaultVerifyEmailOTPMessageText(global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultVerifyEmailOTPMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextResponse> GetDefaultVerifyEmailOTPMessageTextAsync(global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultVerifyEmailOTPMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextResponse> GetDefaultVerifyEmailOTPMessageTextAsync(global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultVerifyEmailOTPMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextResponse SetCustomVerifyEmailOTPMessageText(global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomVerifyEmailOTPMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextResponse SetCustomVerifyEmailOTPMessageText(global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetCustomVerifyEmailOTPMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextResponse> SetCustomVerifyEmailOTPMessageTextAsync(global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomVerifyEmailOTPMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextResponse> SetCustomVerifyEmailOTPMessageTextAsync(global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetCustomVerifyEmailOTPMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse ResetCustomVerifyEmailOTPMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomVerifyEmailOTPMessageTextToDefault(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse ResetCustomVerifyEmailOTPMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetCustomVerifyEmailOTPMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse> ResetCustomVerifyEmailOTPMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomVerifyEmailOTPMessageTextToDefaultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse> ResetCustomVerifyEmailOTPMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetCustomVerifyEmailOTPMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextResponse GetCustomDomainClaimedMessageText(global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomDomainClaimedMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextResponse GetCustomDomainClaimedMessageText(global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomDomainClaimedMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextResponse> GetCustomDomainClaimedMessageTextAsync(global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomDomainClaimedMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextResponse> GetCustomDomainClaimedMessageTextAsync(global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomDomainClaimedMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextResponse GetDefaultDomainClaimedMessageText(global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultDomainClaimedMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextResponse GetDefaultDomainClaimedMessageText(global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultDomainClaimedMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextResponse> GetDefaultDomainClaimedMessageTextAsync(global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultDomainClaimedMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextResponse> GetDefaultDomainClaimedMessageTextAsync(global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultDomainClaimedMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextResponse SetCustomDomainClaimedMessageCustomText(global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomDomainClaimedMessageCustomText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextResponse SetCustomDomainClaimedMessageCustomText(global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetCustomDomainClaimedMessageCustomText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextResponse> SetCustomDomainClaimedMessageCustomTextAsync(global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomDomainClaimedMessageCustomTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextResponse> SetCustomDomainClaimedMessageCustomTextAsync(global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetCustomDomainClaimedMessageCustomText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultResponse ResetCustomDomainClaimedMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomDomainClaimedMessageTextToDefault(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultResponse ResetCustomDomainClaimedMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetCustomDomainClaimedMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultResponse> ResetCustomDomainClaimedMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomDomainClaimedMessageTextToDefaultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultResponse> ResetCustomDomainClaimedMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetCustomDomainClaimedMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextResponse GetCustomPasswordlessRegistrationMessageText(global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomPasswordlessRegistrationMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextResponse GetCustomPasswordlessRegistrationMessageText(global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomPasswordlessRegistrationMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextResponse> GetCustomPasswordlessRegistrationMessageTextAsync(global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomPasswordlessRegistrationMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextResponse> GetCustomPasswordlessRegistrationMessageTextAsync(global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomPasswordlessRegistrationMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextResponse GetDefaultPasswordlessRegistrationMessageText(global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultPasswordlessRegistrationMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextResponse GetDefaultPasswordlessRegistrationMessageText(global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultPasswordlessRegistrationMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextResponse> GetDefaultPasswordlessRegistrationMessageTextAsync(global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultPasswordlessRegistrationMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextResponse> GetDefaultPasswordlessRegistrationMessageTextAsync(global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultPasswordlessRegistrationMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextResponse SetCustomPasswordlessRegistrationMessageCustomText(global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomPasswordlessRegistrationMessageCustomText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextResponse SetCustomPasswordlessRegistrationMessageCustomText(global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetCustomPasswordlessRegistrationMessageCustomText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextResponse> SetCustomPasswordlessRegistrationMessageCustomTextAsync(global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomPasswordlessRegistrationMessageCustomTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextResponse> SetCustomPasswordlessRegistrationMessageCustomTextAsync(global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetCustomPasswordlessRegistrationMessageCustomText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse ResetCustomPasswordlessRegistrationMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomPasswordlessRegistrationMessageTextToDefault(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse ResetCustomPasswordlessRegistrationMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetCustomPasswordlessRegistrationMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse> ResetCustomPasswordlessRegistrationMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomPasswordlessRegistrationMessageTextToDefaultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse> ResetCustomPasswordlessRegistrationMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetCustomPasswordlessRegistrationMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextResponse GetCustomPasswordChangeMessageText(global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomPasswordChangeMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextResponse GetCustomPasswordChangeMessageText(global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomPasswordChangeMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextResponse> GetCustomPasswordChangeMessageTextAsync(global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomPasswordChangeMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextResponse> GetCustomPasswordChangeMessageTextAsync(global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomPasswordChangeMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextResponse GetDefaultPasswordChangeMessageText(global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultPasswordChangeMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextResponse GetDefaultPasswordChangeMessageText(global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultPasswordChangeMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextResponse> GetDefaultPasswordChangeMessageTextAsync(global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultPasswordChangeMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextResponse> GetDefaultPasswordChangeMessageTextAsync(global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultPasswordChangeMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextResponse SetCustomPasswordChangeMessageCustomText(global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomPasswordChangeMessageCustomText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextResponse SetCustomPasswordChangeMessageCustomText(global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetCustomPasswordChangeMessageCustomText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextResponse> SetCustomPasswordChangeMessageCustomTextAsync(global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomPasswordChangeMessageCustomTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextResponse> SetCustomPasswordChangeMessageCustomTextAsync(global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetCustomPasswordChangeMessageCustomText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultResponse ResetCustomPasswordChangeMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomPasswordChangeMessageTextToDefault(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultResponse ResetCustomPasswordChangeMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetCustomPasswordChangeMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultResponse> ResetCustomPasswordChangeMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomPasswordChangeMessageTextToDefaultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultResponse> ResetCustomPasswordChangeMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetCustomPasswordChangeMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomInviteUserMessageTextResponse GetCustomInviteUserMessageText(global::Zitadel.Management.V1.GetCustomInviteUserMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomInviteUserMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomInviteUserMessageTextResponse GetCustomInviteUserMessageText(global::Zitadel.Management.V1.GetCustomInviteUserMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomInviteUserMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomInviteUserMessageTextResponse> GetCustomInviteUserMessageTextAsync(global::Zitadel.Management.V1.GetCustomInviteUserMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomInviteUserMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomInviteUserMessageTextResponse> GetCustomInviteUserMessageTextAsync(global::Zitadel.Management.V1.GetCustomInviteUserMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomInviteUserMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextResponse GetDefaultInviteUserMessageText(global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultInviteUserMessageText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextResponse GetDefaultInviteUserMessageText(global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultInviteUserMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextResponse> GetDefaultInviteUserMessageTextAsync(global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultInviteUserMessageTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextResponse> GetDefaultInviteUserMessageTextAsync(global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultInviteUserMessageText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomInviteUserMessageTextResponse SetCustomInviteUserMessageCustomText(global::Zitadel.Management.V1.SetCustomInviteUserMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomInviteUserMessageCustomText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomInviteUserMessageTextResponse SetCustomInviteUserMessageCustomText(global::Zitadel.Management.V1.SetCustomInviteUserMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetCustomInviteUserMessageCustomText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomInviteUserMessageTextResponse> SetCustomInviteUserMessageCustomTextAsync(global::Zitadel.Management.V1.SetCustomInviteUserMessageTextRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomInviteUserMessageCustomTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomInviteUserMessageTextResponse> SetCustomInviteUserMessageCustomTextAsync(global::Zitadel.Management.V1.SetCustomInviteUserMessageTextRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetCustomInviteUserMessageCustomText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultResponse ResetCustomInviteUserMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomInviteUserMessageTextToDefault(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultResponse ResetCustomInviteUserMessageTextToDefault(global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetCustomInviteUserMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultResponse> ResetCustomInviteUserMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomInviteUserMessageTextToDefaultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultResponse> ResetCustomInviteUserMessageTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetCustomInviteUserMessageTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomLoginTextsResponse GetCustomLoginTexts(global::Zitadel.Management.V1.GetCustomLoginTextsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomLoginTexts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetCustomLoginTextsResponse GetCustomLoginTexts(global::Zitadel.Management.V1.GetCustomLoginTextsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetCustomLoginTexts, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomLoginTextsResponse> GetCustomLoginTextsAsync(global::Zitadel.Management.V1.GetCustomLoginTextsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetCustomLoginTextsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetCustomLoginTextsResponse> GetCustomLoginTextsAsync(global::Zitadel.Management.V1.GetCustomLoginTextsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetCustomLoginTexts, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultLoginTextsResponse GetDefaultLoginTexts(global::Zitadel.Management.V1.GetDefaultLoginTextsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultLoginTexts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetDefaultLoginTextsResponse GetDefaultLoginTexts(global::Zitadel.Management.V1.GetDefaultLoginTextsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDefaultLoginTexts, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultLoginTextsResponse> GetDefaultLoginTextsAsync(global::Zitadel.Management.V1.GetDefaultLoginTextsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDefaultLoginTextsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetDefaultLoginTextsResponse> GetDefaultLoginTextsAsync(global::Zitadel.Management.V1.GetDefaultLoginTextsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDefaultLoginTexts, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomLoginTextsResponse SetCustomLoginText(global::Zitadel.Management.V1.SetCustomLoginTextsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomLoginText(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetCustomLoginTextsResponse SetCustomLoginText(global::Zitadel.Management.V1.SetCustomLoginTextsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetCustomLoginText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomLoginTextsResponse> SetCustomLoginTextAsync(global::Zitadel.Management.V1.SetCustomLoginTextsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetCustomLoginTextAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetCustomLoginTextsResponse> SetCustomLoginTextAsync(global::Zitadel.Management.V1.SetCustomLoginTextsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetCustomLoginText, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultResponse ResetCustomLoginTextToDefault(global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomLoginTextToDefault(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultResponse ResetCustomLoginTextToDefault(global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResetCustomLoginTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultResponse> ResetCustomLoginTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResetCustomLoginTextToDefaultAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultResponse> ResetCustomLoginTextToDefaultAsync(global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResetCustomLoginTextToDefault, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetOrgIDPByIDResponse GetOrgIDPByID(global::Zitadel.Management.V1.GetOrgIDPByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrgIDPByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetOrgIDPByIDResponse GetOrgIDPByID(global::Zitadel.Management.V1.GetOrgIDPByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetOrgIDPByID, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetOrgIDPByIDResponse> GetOrgIDPByIDAsync(global::Zitadel.Management.V1.GetOrgIDPByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetOrgIDPByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetOrgIDPByIDResponse> GetOrgIDPByIDAsync(global::Zitadel.Management.V1.GetOrgIDPByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetOrgIDPByID, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListOrgIDPsResponse ListOrgIDPs(global::Zitadel.Management.V1.ListOrgIDPsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrgIDPs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListOrgIDPsResponse ListOrgIDPs(global::Zitadel.Management.V1.ListOrgIDPsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListOrgIDPs, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListOrgIDPsResponse> ListOrgIDPsAsync(global::Zitadel.Management.V1.ListOrgIDPsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOrgIDPsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListOrgIDPsResponse> ListOrgIDPsAsync(global::Zitadel.Management.V1.ListOrgIDPsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListOrgIDPs, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddOrgOIDCIDPResponse AddOrgOIDCIDP(global::Zitadel.Management.V1.AddOrgOIDCIDPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOrgOIDCIDP(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddOrgOIDCIDPResponse AddOrgOIDCIDP(global::Zitadel.Management.V1.AddOrgOIDCIDPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddOrgOIDCIDP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddOrgOIDCIDPResponse> AddOrgOIDCIDPAsync(global::Zitadel.Management.V1.AddOrgOIDCIDPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOrgOIDCIDPAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddOrgOIDCIDPResponse> AddOrgOIDCIDPAsync(global::Zitadel.Management.V1.AddOrgOIDCIDPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddOrgOIDCIDP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddOrgJWTIDPResponse AddOrgJWTIDP(global::Zitadel.Management.V1.AddOrgJWTIDPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOrgJWTIDP(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddOrgJWTIDPResponse AddOrgJWTIDP(global::Zitadel.Management.V1.AddOrgJWTIDPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddOrgJWTIDP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddOrgJWTIDPResponse> AddOrgJWTIDPAsync(global::Zitadel.Management.V1.AddOrgJWTIDPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOrgJWTIDPAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddOrgJWTIDPResponse> AddOrgJWTIDPAsync(global::Zitadel.Management.V1.AddOrgJWTIDPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddOrgJWTIDP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeactivateOrgIDPResponse DeactivateOrgIDP(global::Zitadel.Management.V1.DeactivateOrgIDPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateOrgIDP(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeactivateOrgIDPResponse DeactivateOrgIDP(global::Zitadel.Management.V1.DeactivateOrgIDPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeactivateOrgIDP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeactivateOrgIDPResponse> DeactivateOrgIDPAsync(global::Zitadel.Management.V1.DeactivateOrgIDPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateOrgIDPAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeactivateOrgIDPResponse> DeactivateOrgIDPAsync(global::Zitadel.Management.V1.DeactivateOrgIDPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeactivateOrgIDP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ReactivateOrgIDPResponse ReactivateOrgIDP(global::Zitadel.Management.V1.ReactivateOrgIDPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateOrgIDP(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ReactivateOrgIDPResponse ReactivateOrgIDP(global::Zitadel.Management.V1.ReactivateOrgIDPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReactivateOrgIDP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ReactivateOrgIDPResponse> ReactivateOrgIDPAsync(global::Zitadel.Management.V1.ReactivateOrgIDPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateOrgIDPAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ReactivateOrgIDPResponse> ReactivateOrgIDPAsync(global::Zitadel.Management.V1.ReactivateOrgIDPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReactivateOrgIDP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveOrgIDPResponse RemoveOrgIDP(global::Zitadel.Management.V1.RemoveOrgIDPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOrgIDP(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RemoveOrgIDPResponse RemoveOrgIDP(global::Zitadel.Management.V1.RemoveOrgIDPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveOrgIDP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveOrgIDPResponse> RemoveOrgIDPAsync(global::Zitadel.Management.V1.RemoveOrgIDPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOrgIDPAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RemoveOrgIDPResponse> RemoveOrgIDPAsync(global::Zitadel.Management.V1.RemoveOrgIDPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveOrgIDP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateOrgIDPResponse UpdateOrgIDP(global::Zitadel.Management.V1.UpdateOrgIDPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrgIDP(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateOrgIDPResponse UpdateOrgIDP(global::Zitadel.Management.V1.UpdateOrgIDPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateOrgIDP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateOrgIDPResponse> UpdateOrgIDPAsync(global::Zitadel.Management.V1.UpdateOrgIDPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrgIDPAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateOrgIDPResponse> UpdateOrgIDPAsync(global::Zitadel.Management.V1.UpdateOrgIDPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateOrgIDP, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigResponse UpdateOrgIDPOIDCConfig(global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrgIDPOIDCConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigResponse UpdateOrgIDPOIDCConfig(global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateOrgIDPOIDCConfig, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigResponse> UpdateOrgIDPOIDCConfigAsync(global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrgIDPOIDCConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigResponse> UpdateOrgIDPOIDCConfigAsync(global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateOrgIDPOIDCConfig, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigResponse UpdateOrgIDPJWTConfig(global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrgIDPJWTConfig(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigResponse UpdateOrgIDPJWTConfig(global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateOrgIDPJWTConfig, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigResponse> UpdateOrgIDPJWTConfigAsync(global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateOrgIDPJWTConfigAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigResponse> UpdateOrgIDPJWTConfigAsync(global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateOrgIDPJWTConfig, null, options, request);
      }
      /// <summary>
      /// Returns all identity providers, which match the query
      /// Limit should always be set, there is a default limit set by the service
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProvidersResponse ListProviders(global::Zitadel.Management.V1.ListProvidersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProviders(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns all identity providers, which match the query
      /// Limit should always be set, there is a default limit set by the service
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListProvidersResponse ListProviders(global::Zitadel.Management.V1.ListProvidersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListProviders, null, options, request);
      }
      /// <summary>
      /// Returns all identity providers, which match the query
      /// Limit should always be set, there is a default limit set by the service
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProvidersResponse> ListProvidersAsync(global::Zitadel.Management.V1.ListProvidersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListProvidersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns all identity providers, which match the query
      /// Limit should always be set, there is a default limit set by the service
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListProvidersResponse> ListProvidersAsync(global::Zitadel.Management.V1.ListProvidersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListProviders, null, options, request);
      }
      /// <summary>
      /// Returns an identity provider of the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetProviderByIDResponse GetProviderByID(global::Zitadel.Management.V1.GetProviderByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProviderByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns an identity provider of the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetProviderByIDResponse GetProviderByID(global::Zitadel.Management.V1.GetProviderByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetProviderByID, null, options, request);
      }
      /// <summary>
      /// Returns an identity provider of the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetProviderByIDResponse> GetProviderByIDAsync(global::Zitadel.Management.V1.GetProviderByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetProviderByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns an identity provider of the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetProviderByIDResponse> GetProviderByIDAsync(global::Zitadel.Management.V1.GetProviderByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetProviderByID, null, options, request);
      }
      /// <summary>
      /// Add a new OAuth2 identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddGenericOAuthProviderResponse AddGenericOAuthProvider(global::Zitadel.Management.V1.AddGenericOAuthProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGenericOAuthProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new OAuth2 identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddGenericOAuthProviderResponse AddGenericOAuthProvider(global::Zitadel.Management.V1.AddGenericOAuthProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddGenericOAuthProvider, null, options, request);
      }
      /// <summary>
      /// Add a new OAuth2 identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddGenericOAuthProviderResponse> AddGenericOAuthProviderAsync(global::Zitadel.Management.V1.AddGenericOAuthProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGenericOAuthProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new OAuth2 identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddGenericOAuthProviderResponse> AddGenericOAuthProviderAsync(global::Zitadel.Management.V1.AddGenericOAuthProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddGenericOAuthProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing OAuth2 identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateGenericOAuthProviderResponse UpdateGenericOAuthProvider(global::Zitadel.Management.V1.UpdateGenericOAuthProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGenericOAuthProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing OAuth2 identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateGenericOAuthProviderResponse UpdateGenericOAuthProvider(global::Zitadel.Management.V1.UpdateGenericOAuthProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateGenericOAuthProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing OAuth2 identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateGenericOAuthProviderResponse> UpdateGenericOAuthProviderAsync(global::Zitadel.Management.V1.UpdateGenericOAuthProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGenericOAuthProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing OAuth2 identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateGenericOAuthProviderResponse> UpdateGenericOAuthProviderAsync(global::Zitadel.Management.V1.UpdateGenericOAuthProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateGenericOAuthProvider, null, options, request);
      }
      /// <summary>
      /// Add a new OIDC identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddGenericOIDCProviderResponse AddGenericOIDCProvider(global::Zitadel.Management.V1.AddGenericOIDCProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGenericOIDCProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new OIDC identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddGenericOIDCProviderResponse AddGenericOIDCProvider(global::Zitadel.Management.V1.AddGenericOIDCProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddGenericOIDCProvider, null, options, request);
      }
      /// <summary>
      /// Add a new OIDC identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddGenericOIDCProviderResponse> AddGenericOIDCProviderAsync(global::Zitadel.Management.V1.AddGenericOIDCProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGenericOIDCProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new OIDC identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddGenericOIDCProviderResponse> AddGenericOIDCProviderAsync(global::Zitadel.Management.V1.AddGenericOIDCProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddGenericOIDCProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing OIDC identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateGenericOIDCProviderResponse UpdateGenericOIDCProvider(global::Zitadel.Management.V1.UpdateGenericOIDCProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGenericOIDCProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing OIDC identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateGenericOIDCProviderResponse UpdateGenericOIDCProvider(global::Zitadel.Management.V1.UpdateGenericOIDCProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateGenericOIDCProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing OIDC identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateGenericOIDCProviderResponse> UpdateGenericOIDCProviderAsync(global::Zitadel.Management.V1.UpdateGenericOIDCProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGenericOIDCProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing OIDC identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateGenericOIDCProviderResponse> UpdateGenericOIDCProviderAsync(global::Zitadel.Management.V1.UpdateGenericOIDCProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateGenericOIDCProvider, null, options, request);
      }
      /// <summary>
      /// Migrate an existing OIDC identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.MigrateGenericOIDCProviderResponse MigrateGenericOIDCProvider(global::Zitadel.Management.V1.MigrateGenericOIDCProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MigrateGenericOIDCProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Migrate an existing OIDC identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.MigrateGenericOIDCProviderResponse MigrateGenericOIDCProvider(global::Zitadel.Management.V1.MigrateGenericOIDCProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_MigrateGenericOIDCProvider, null, options, request);
      }
      /// <summary>
      /// Migrate an existing OIDC identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.MigrateGenericOIDCProviderResponse> MigrateGenericOIDCProviderAsync(global::Zitadel.Management.V1.MigrateGenericOIDCProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return MigrateGenericOIDCProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Migrate an existing OIDC identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.MigrateGenericOIDCProviderResponse> MigrateGenericOIDCProviderAsync(global::Zitadel.Management.V1.MigrateGenericOIDCProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_MigrateGenericOIDCProvider, null, options, request);
      }
      /// <summary>
      /// Add a new JWT identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddJWTProviderResponse AddJWTProvider(global::Zitadel.Management.V1.AddJWTProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddJWTProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new JWT identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddJWTProviderResponse AddJWTProvider(global::Zitadel.Management.V1.AddJWTProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddJWTProvider, null, options, request);
      }
      /// <summary>
      /// Add a new JWT identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddJWTProviderResponse> AddJWTProviderAsync(global::Zitadel.Management.V1.AddJWTProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddJWTProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new JWT identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddJWTProviderResponse> AddJWTProviderAsync(global::Zitadel.Management.V1.AddJWTProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddJWTProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing JWT identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateJWTProviderResponse UpdateJWTProvider(global::Zitadel.Management.V1.UpdateJWTProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateJWTProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing JWT identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateJWTProviderResponse UpdateJWTProvider(global::Zitadel.Management.V1.UpdateJWTProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateJWTProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing JWT identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateJWTProviderResponse> UpdateJWTProviderAsync(global::Zitadel.Management.V1.UpdateJWTProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateJWTProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing JWT identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateJWTProviderResponse> UpdateJWTProviderAsync(global::Zitadel.Management.V1.UpdateJWTProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateJWTProvider, null, options, request);
      }
      /// <summary>
      /// Add a new Azure AD identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddAzureADProviderResponse AddAzureADProvider(global::Zitadel.Management.V1.AddAzureADProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddAzureADProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new Azure AD identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddAzureADProviderResponse AddAzureADProvider(global::Zitadel.Management.V1.AddAzureADProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddAzureADProvider, null, options, request);
      }
      /// <summary>
      /// Add a new Azure AD identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddAzureADProviderResponse> AddAzureADProviderAsync(global::Zitadel.Management.V1.AddAzureADProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddAzureADProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new Azure AD identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddAzureADProviderResponse> AddAzureADProviderAsync(global::Zitadel.Management.V1.AddAzureADProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddAzureADProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing Azure AD identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateAzureADProviderResponse UpdateAzureADProvider(global::Zitadel.Management.V1.UpdateAzureADProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAzureADProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing Azure AD identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateAzureADProviderResponse UpdateAzureADProvider(global::Zitadel.Management.V1.UpdateAzureADProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAzureADProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing Azure AD identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateAzureADProviderResponse> UpdateAzureADProviderAsync(global::Zitadel.Management.V1.UpdateAzureADProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAzureADProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing Azure AD identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateAzureADProviderResponse> UpdateAzureADProviderAsync(global::Zitadel.Management.V1.UpdateAzureADProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAzureADProvider, null, options, request);
      }
      /// <summary>
      /// Add a new GitHub identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddGitHubProviderResponse AddGitHubProvider(global::Zitadel.Management.V1.AddGitHubProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGitHubProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new GitHub identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddGitHubProviderResponse AddGitHubProvider(global::Zitadel.Management.V1.AddGitHubProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddGitHubProvider, null, options, request);
      }
      /// <summary>
      /// Add a new GitHub identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddGitHubProviderResponse> AddGitHubProviderAsync(global::Zitadel.Management.V1.AddGitHubProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGitHubProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new GitHub identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddGitHubProviderResponse> AddGitHubProviderAsync(global::Zitadel.Management.V1.AddGitHubProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddGitHubProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing GitHub identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateGitHubProviderResponse UpdateGitHubProvider(global::Zitadel.Management.V1.UpdateGitHubProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGitHubProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing GitHub identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateGitHubProviderResponse UpdateGitHubProvider(global::Zitadel.Management.V1.UpdateGitHubProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateGitHubProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing GitHub identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateGitHubProviderResponse> UpdateGitHubProviderAsync(global::Zitadel.Management.V1.UpdateGitHubProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGitHubProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing GitHub identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateGitHubProviderResponse> UpdateGitHubProviderAsync(global::Zitadel.Management.V1.UpdateGitHubProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateGitHubProvider, null, options, request);
      }
      /// <summary>
      /// Add a new GitHub Enterprise Server identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderResponse AddGitHubEnterpriseServerProvider(global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGitHubEnterpriseServerProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new GitHub Enterprise Server identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderResponse AddGitHubEnterpriseServerProvider(global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddGitHubEnterpriseServerProvider, null, options, request);
      }
      /// <summary>
      /// Add a new GitHub Enterprise Server identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderResponse> AddGitHubEnterpriseServerProviderAsync(global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGitHubEnterpriseServerProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new GitHub Enterprise Server identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderResponse> AddGitHubEnterpriseServerProviderAsync(global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddGitHubEnterpriseServerProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing GitHub Enterprise Server identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderResponse UpdateGitHubEnterpriseServerProvider(global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGitHubEnterpriseServerProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing GitHub Enterprise Server identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderResponse UpdateGitHubEnterpriseServerProvider(global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateGitHubEnterpriseServerProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing GitHub Enterprise Server identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderResponse> UpdateGitHubEnterpriseServerProviderAsync(global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGitHubEnterpriseServerProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing GitHub Enterprise Server identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderResponse> UpdateGitHubEnterpriseServerProviderAsync(global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateGitHubEnterpriseServerProvider, null, options, request);
      }
      /// <summary>
      /// Add a new GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddGitLabProviderResponse AddGitLabProvider(global::Zitadel.Management.V1.AddGitLabProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGitLabProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddGitLabProviderResponse AddGitLabProvider(global::Zitadel.Management.V1.AddGitLabProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddGitLabProvider, null, options, request);
      }
      /// <summary>
      /// Add a new GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddGitLabProviderResponse> AddGitLabProviderAsync(global::Zitadel.Management.V1.AddGitLabProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGitLabProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddGitLabProviderResponse> AddGitLabProviderAsync(global::Zitadel.Management.V1.AddGitLabProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddGitLabProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateGitLabProviderResponse UpdateGitLabProvider(global::Zitadel.Management.V1.UpdateGitLabProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGitLabProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateGitLabProviderResponse UpdateGitLabProvider(global::Zitadel.Management.V1.UpdateGitLabProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateGitLabProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateGitLabProviderResponse> UpdateGitLabProviderAsync(global::Zitadel.Management.V1.UpdateGitLabProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGitLabProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateGitLabProviderResponse> UpdateGitLabProviderAsync(global::Zitadel.Management.V1.UpdateGitLabProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateGitLabProvider, null, options, request);
      }
      /// <summary>
      /// Add a new self hosted GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddGitLabSelfHostedProviderResponse AddGitLabSelfHostedProvider(global::Zitadel.Management.V1.AddGitLabSelfHostedProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGitLabSelfHostedProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new self hosted GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddGitLabSelfHostedProviderResponse AddGitLabSelfHostedProvider(global::Zitadel.Management.V1.AddGitLabSelfHostedProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddGitLabSelfHostedProvider, null, options, request);
      }
      /// <summary>
      /// Add a new self hosted GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddGitLabSelfHostedProviderResponse> AddGitLabSelfHostedProviderAsync(global::Zitadel.Management.V1.AddGitLabSelfHostedProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGitLabSelfHostedProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new self hosted GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddGitLabSelfHostedProviderResponse> AddGitLabSelfHostedProviderAsync(global::Zitadel.Management.V1.AddGitLabSelfHostedProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddGitLabSelfHostedProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing self hosted GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderResponse UpdateGitLabSelfHostedProvider(global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGitLabSelfHostedProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing self hosted GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderResponse UpdateGitLabSelfHostedProvider(global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateGitLabSelfHostedProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing self hosted GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderResponse> UpdateGitLabSelfHostedProviderAsync(global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGitLabSelfHostedProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing self hosted GitLab identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderResponse> UpdateGitLabSelfHostedProviderAsync(global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateGitLabSelfHostedProvider, null, options, request);
      }
      /// <summary>
      /// Add a new Google identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddGoogleProviderResponse AddGoogleProvider(global::Zitadel.Management.V1.AddGoogleProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGoogleProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new Google identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddGoogleProviderResponse AddGoogleProvider(global::Zitadel.Management.V1.AddGoogleProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddGoogleProvider, null, options, request);
      }
      /// <summary>
      /// Add a new Google identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddGoogleProviderResponse> AddGoogleProviderAsync(global::Zitadel.Management.V1.AddGoogleProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddGoogleProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new Google identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddGoogleProviderResponse> AddGoogleProviderAsync(global::Zitadel.Management.V1.AddGoogleProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddGoogleProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing Google identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateGoogleProviderResponse UpdateGoogleProvider(global::Zitadel.Management.V1.UpdateGoogleProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGoogleProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing Google identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateGoogleProviderResponse UpdateGoogleProvider(global::Zitadel.Management.V1.UpdateGoogleProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateGoogleProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing Google identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateGoogleProviderResponse> UpdateGoogleProviderAsync(global::Zitadel.Management.V1.UpdateGoogleProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateGoogleProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing Google identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateGoogleProviderResponse> UpdateGoogleProviderAsync(global::Zitadel.Management.V1.UpdateGoogleProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateGoogleProvider, null, options, request);
      }
      /// <summary>
      /// Add a new LDAP identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddLDAPProviderResponse AddLDAPProvider(global::Zitadel.Management.V1.AddLDAPProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddLDAPProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new LDAP identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddLDAPProviderResponse AddLDAPProvider(global::Zitadel.Management.V1.AddLDAPProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddLDAPProvider, null, options, request);
      }
      /// <summary>
      /// Add a new LDAP identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddLDAPProviderResponse> AddLDAPProviderAsync(global::Zitadel.Management.V1.AddLDAPProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddLDAPProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new LDAP identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddLDAPProviderResponse> AddLDAPProviderAsync(global::Zitadel.Management.V1.AddLDAPProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddLDAPProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing LDAP identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateLDAPProviderResponse UpdateLDAPProvider(global::Zitadel.Management.V1.UpdateLDAPProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateLDAPProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing LDAP identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateLDAPProviderResponse UpdateLDAPProvider(global::Zitadel.Management.V1.UpdateLDAPProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateLDAPProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing LDAP identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateLDAPProviderResponse> UpdateLDAPProviderAsync(global::Zitadel.Management.V1.UpdateLDAPProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateLDAPProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing LDAP identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateLDAPProviderResponse> UpdateLDAPProviderAsync(global::Zitadel.Management.V1.UpdateLDAPProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateLDAPProvider, null, options, request);
      }
      /// <summary>
      /// Add a new Apple identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddAppleProviderResponse AddAppleProvider(global::Zitadel.Management.V1.AddAppleProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddAppleProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new Apple identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddAppleProviderResponse AddAppleProvider(global::Zitadel.Management.V1.AddAppleProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddAppleProvider, null, options, request);
      }
      /// <summary>
      /// Add a new Apple identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddAppleProviderResponse> AddAppleProviderAsync(global::Zitadel.Management.V1.AddAppleProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddAppleProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new Apple identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddAppleProviderResponse> AddAppleProviderAsync(global::Zitadel.Management.V1.AddAppleProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddAppleProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing Apple identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateAppleProviderResponse UpdateAppleProvider(global::Zitadel.Management.V1.UpdateAppleProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAppleProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing Apple identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateAppleProviderResponse UpdateAppleProvider(global::Zitadel.Management.V1.UpdateAppleProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAppleProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing Apple identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateAppleProviderResponse> UpdateAppleProviderAsync(global::Zitadel.Management.V1.UpdateAppleProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAppleProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing Apple identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateAppleProviderResponse> UpdateAppleProviderAsync(global::Zitadel.Management.V1.UpdateAppleProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAppleProvider, null, options, request);
      }
      /// <summary>
      /// Add a new SAML identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddSAMLProviderResponse AddSAMLProvider(global::Zitadel.Management.V1.AddSAMLProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSAMLProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new SAML identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.AddSAMLProviderResponse AddSAMLProvider(global::Zitadel.Management.V1.AddSAMLProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddSAMLProvider, null, options, request);
      }
      /// <summary>
      /// Add a new SAML identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddSAMLProviderResponse> AddSAMLProviderAsync(global::Zitadel.Management.V1.AddSAMLProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddSAMLProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a new SAML identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.AddSAMLProviderResponse> AddSAMLProviderAsync(global::Zitadel.Management.V1.AddSAMLProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddSAMLProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing SAML identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateSAMLProviderResponse UpdateSAMLProvider(global::Zitadel.Management.V1.UpdateSAMLProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSAMLProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing SAML identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateSAMLProviderResponse UpdateSAMLProvider(global::Zitadel.Management.V1.UpdateSAMLProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateSAMLProvider, null, options, request);
      }
      /// <summary>
      /// Change an existing SAML identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateSAMLProviderResponse> UpdateSAMLProviderAsync(global::Zitadel.Management.V1.UpdateSAMLProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateSAMLProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change an existing SAML identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateSAMLProviderResponse> UpdateSAMLProviderAsync(global::Zitadel.Management.V1.UpdateSAMLProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateSAMLProvider, null, options, request);
      }
      /// <summary>
      /// Regenerate certificate for an existing SAML identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateResponse RegenerateSAMLProviderCertificate(global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegenerateSAMLProviderCertificate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Regenerate certificate for an existing SAML identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateResponse RegenerateSAMLProviderCertificate(global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RegenerateSAMLProviderCertificate, null, options, request);
      }
      /// <summary>
      /// Regenerate certificate for an existing SAML identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateResponse> RegenerateSAMLProviderCertificateAsync(global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegenerateSAMLProviderCertificateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Regenerate certificate for an existing SAML identity provider in the organization
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateResponse> RegenerateSAMLProviderCertificateAsync(global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RegenerateSAMLProviderCertificate, null, options, request);
      }
      /// <summary>
      /// Remove an identity provider
      /// Will remove all linked providers of this configuration on the users
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeleteProviderResponse DeleteProvider(global::Zitadel.Management.V1.DeleteProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProvider(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove an identity provider
      /// Will remove all linked providers of this configuration on the users
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeleteProviderResponse DeleteProvider(global::Zitadel.Management.V1.DeleteProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteProvider, null, options, request);
      }
      /// <summary>
      /// Remove an identity provider
      /// Will remove all linked providers of this configuration on the users
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeleteProviderResponse> DeleteProviderAsync(global::Zitadel.Management.V1.DeleteProviderRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteProviderAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove an identity provider
      /// Will remove all linked providers of this configuration on the users
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeleteProviderResponse> DeleteProviderAsync(global::Zitadel.Management.V1.DeleteProviderRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteProvider, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListActionsResponse ListActions(global::Zitadel.Management.V1.ListActionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListActions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListActionsResponse ListActions(global::Zitadel.Management.V1.ListActionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListActions, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListActionsResponse> ListActionsAsync(global::Zitadel.Management.V1.ListActionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListActionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListActionsResponse> ListActionsAsync(global::Zitadel.Management.V1.ListActionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListActions, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetActionResponse GetAction(global::Zitadel.Management.V1.GetActionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetActionResponse GetAction(global::Zitadel.Management.V1.GetActionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAction, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetActionResponse> GetActionAsync(global::Zitadel.Management.V1.GetActionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetActionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetActionResponse> GetActionAsync(global::Zitadel.Management.V1.GetActionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAction, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.CreateActionResponse CreateAction(global::Zitadel.Management.V1.CreateActionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.CreateActionResponse CreateAction(global::Zitadel.Management.V1.CreateActionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateAction, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.CreateActionResponse> CreateActionAsync(global::Zitadel.Management.V1.CreateActionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateActionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.CreateActionResponse> CreateActionAsync(global::Zitadel.Management.V1.CreateActionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateAction, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateActionResponse UpdateAction(global::Zitadel.Management.V1.UpdateActionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.UpdateActionResponse UpdateAction(global::Zitadel.Management.V1.UpdateActionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateAction, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateActionResponse> UpdateActionAsync(global::Zitadel.Management.V1.UpdateActionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateActionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.UpdateActionResponse> UpdateActionAsync(global::Zitadel.Management.V1.UpdateActionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateAction, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeactivateActionResponse DeactivateAction(global::Zitadel.Management.V1.DeactivateActionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateAction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeactivateActionResponse DeactivateAction(global::Zitadel.Management.V1.DeactivateActionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeactivateAction, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeactivateActionResponse> DeactivateActionAsync(global::Zitadel.Management.V1.DeactivateActionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateActionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeactivateActionResponse> DeactivateActionAsync(global::Zitadel.Management.V1.DeactivateActionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeactivateAction, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ReactivateActionResponse ReactivateAction(global::Zitadel.Management.V1.ReactivateActionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateAction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ReactivateActionResponse ReactivateAction(global::Zitadel.Management.V1.ReactivateActionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReactivateAction, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ReactivateActionResponse> ReactivateActionAsync(global::Zitadel.Management.V1.ReactivateActionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateActionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ReactivateActionResponse> ReactivateActionAsync(global::Zitadel.Management.V1.ReactivateActionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReactivateAction, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeleteActionResponse DeleteAction(global::Zitadel.Management.V1.DeleteActionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAction(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.DeleteActionResponse DeleteAction(global::Zitadel.Management.V1.DeleteActionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteAction, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeleteActionResponse> DeleteActionAsync(global::Zitadel.Management.V1.DeleteActionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteActionAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.DeleteActionResponse> DeleteActionAsync(global::Zitadel.Management.V1.DeleteActionRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteAction, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListFlowTypesResponse ListFlowTypes(global::Zitadel.Management.V1.ListFlowTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFlowTypes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListFlowTypesResponse ListFlowTypes(global::Zitadel.Management.V1.ListFlowTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFlowTypes, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListFlowTypesResponse> ListFlowTypesAsync(global::Zitadel.Management.V1.ListFlowTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFlowTypesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListFlowTypesResponse> ListFlowTypesAsync(global::Zitadel.Management.V1.ListFlowTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFlowTypes, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListFlowTriggerTypesResponse ListFlowTriggerTypes(global::Zitadel.Management.V1.ListFlowTriggerTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFlowTriggerTypes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ListFlowTriggerTypesResponse ListFlowTriggerTypes(global::Zitadel.Management.V1.ListFlowTriggerTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListFlowTriggerTypes, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListFlowTriggerTypesResponse> ListFlowTriggerTypesAsync(global::Zitadel.Management.V1.ListFlowTriggerTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListFlowTriggerTypesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ListFlowTriggerTypesResponse> ListFlowTriggerTypesAsync(global::Zitadel.Management.V1.ListFlowTriggerTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListFlowTriggerTypes, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetFlowResponse GetFlow(global::Zitadel.Management.V1.GetFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFlow(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.GetFlowResponse GetFlow(global::Zitadel.Management.V1.GetFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetFlow, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetFlowResponse> GetFlowAsync(global::Zitadel.Management.V1.GetFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetFlowAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.GetFlowResponse> GetFlowAsync(global::Zitadel.Management.V1.GetFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetFlow, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ClearFlowResponse ClearFlow(global::Zitadel.Management.V1.ClearFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClearFlow(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.ClearFlowResponse ClearFlow(global::Zitadel.Management.V1.ClearFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ClearFlow, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ClearFlowResponse> ClearFlowAsync(global::Zitadel.Management.V1.ClearFlowRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ClearFlowAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.ClearFlowResponse> ClearFlowAsync(global::Zitadel.Management.V1.ClearFlowRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ClearFlow, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetTriggerActionsResponse SetTriggerActions(global::Zitadel.Management.V1.SetTriggerActionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetTriggerActions(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Management.V1.SetTriggerActionsResponse SetTriggerActions(global::Zitadel.Management.V1.SetTriggerActionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetTriggerActions, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetTriggerActionsResponse> SetTriggerActionsAsync(global::Zitadel.Management.V1.SetTriggerActionsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetTriggerActionsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Management.V1.SetTriggerActionsResponse> SetTriggerActionsAsync(global::Zitadel.Management.V1.SetTriggerActionsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetTriggerActions, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ManagementServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ManagementServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ManagementServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Healthz, serviceImpl.Healthz)
          .AddMethod(__Method_GetOIDCInformation, serviceImpl.GetOIDCInformation)
          .AddMethod(__Method_GetIAM, serviceImpl.GetIAM)
          .AddMethod(__Method_GetSupportedLanguages, serviceImpl.GetSupportedLanguages)
          .AddMethod(__Method_GetUserByID, serviceImpl.GetUserByID)
          .AddMethod(__Method_GetUserByLoginNameGlobal, serviceImpl.GetUserByLoginNameGlobal)
          .AddMethod(__Method_ListUsers, serviceImpl.ListUsers)
          .AddMethod(__Method_ListUserChanges, serviceImpl.ListUserChanges)
          .AddMethod(__Method_IsUserUnique, serviceImpl.IsUserUnique)
          .AddMethod(__Method_AddHumanUser, serviceImpl.AddHumanUser)
          .AddMethod(__Method_ImportHumanUser, serviceImpl.ImportHumanUser)
          .AddMethod(__Method_AddMachineUser, serviceImpl.AddMachineUser)
          .AddMethod(__Method_DeactivateUser, serviceImpl.DeactivateUser)
          .AddMethod(__Method_ReactivateUser, serviceImpl.ReactivateUser)
          .AddMethod(__Method_LockUser, serviceImpl.LockUser)
          .AddMethod(__Method_UnlockUser, serviceImpl.UnlockUser)
          .AddMethod(__Method_RemoveUser, serviceImpl.RemoveUser)
          .AddMethod(__Method_UpdateUserName, serviceImpl.UpdateUserName)
          .AddMethod(__Method_SetUserMetadata, serviceImpl.SetUserMetadata)
          .AddMethod(__Method_BulkSetUserMetadata, serviceImpl.BulkSetUserMetadata)
          .AddMethod(__Method_ListUserMetadata, serviceImpl.ListUserMetadata)
          .AddMethod(__Method_GetUserMetadata, serviceImpl.GetUserMetadata)
          .AddMethod(__Method_RemoveUserMetadata, serviceImpl.RemoveUserMetadata)
          .AddMethod(__Method_BulkRemoveUserMetadata, serviceImpl.BulkRemoveUserMetadata)
          .AddMethod(__Method_GetHumanProfile, serviceImpl.GetHumanProfile)
          .AddMethod(__Method_UpdateHumanProfile, serviceImpl.UpdateHumanProfile)
          .AddMethod(__Method_GetHumanEmail, serviceImpl.GetHumanEmail)
          .AddMethod(__Method_UpdateHumanEmail, serviceImpl.UpdateHumanEmail)
          .AddMethod(__Method_ResendHumanInitialization, serviceImpl.ResendHumanInitialization)
          .AddMethod(__Method_ResendHumanEmailVerification, serviceImpl.ResendHumanEmailVerification)
          .AddMethod(__Method_GetHumanPhone, serviceImpl.GetHumanPhone)
          .AddMethod(__Method_UpdateHumanPhone, serviceImpl.UpdateHumanPhone)
          .AddMethod(__Method_RemoveHumanPhone, serviceImpl.RemoveHumanPhone)
          .AddMethod(__Method_ResendHumanPhoneVerification, serviceImpl.ResendHumanPhoneVerification)
          .AddMethod(__Method_RemoveHumanAvatar, serviceImpl.RemoveHumanAvatar)
          .AddMethod(__Method_SetHumanInitialPassword, serviceImpl.SetHumanInitialPassword)
          .AddMethod(__Method_SetHumanPassword, serviceImpl.SetHumanPassword)
          .AddMethod(__Method_SendHumanResetPasswordNotification, serviceImpl.SendHumanResetPasswordNotification)
          .AddMethod(__Method_ListHumanAuthFactors, serviceImpl.ListHumanAuthFactors)
          .AddMethod(__Method_RemoveHumanAuthFactorOTP, serviceImpl.RemoveHumanAuthFactorOTP)
          .AddMethod(__Method_RemoveHumanAuthFactorU2F, serviceImpl.RemoveHumanAuthFactorU2F)
          .AddMethod(__Method_RemoveHumanAuthFactorOTPSMS, serviceImpl.RemoveHumanAuthFactorOTPSMS)
          .AddMethod(__Method_RemoveHumanAuthFactorOTPEmail, serviceImpl.RemoveHumanAuthFactorOTPEmail)
          .AddMethod(__Method_ListHumanPasswordless, serviceImpl.ListHumanPasswordless)
          .AddMethod(__Method_AddPasswordlessRegistration, serviceImpl.AddPasswordlessRegistration)
          .AddMethod(__Method_SendPasswordlessRegistration, serviceImpl.SendPasswordlessRegistration)
          .AddMethod(__Method_RemoveHumanPasswordless, serviceImpl.RemoveHumanPasswordless)
          .AddMethod(__Method_UpdateMachine, serviceImpl.UpdateMachine)
          .AddMethod(__Method_GenerateMachineSecret, serviceImpl.GenerateMachineSecret)
          .AddMethod(__Method_RemoveMachineSecret, serviceImpl.RemoveMachineSecret)
          .AddMethod(__Method_GetMachineKeyByIDs, serviceImpl.GetMachineKeyByIDs)
          .AddMethod(__Method_ListMachineKeys, serviceImpl.ListMachineKeys)
          .AddMethod(__Method_AddMachineKey, serviceImpl.AddMachineKey)
          .AddMethod(__Method_RemoveMachineKey, serviceImpl.RemoveMachineKey)
          .AddMethod(__Method_GetPersonalAccessTokenByIDs, serviceImpl.GetPersonalAccessTokenByIDs)
          .AddMethod(__Method_ListPersonalAccessTokens, serviceImpl.ListPersonalAccessTokens)
          .AddMethod(__Method_AddPersonalAccessToken, serviceImpl.AddPersonalAccessToken)
          .AddMethod(__Method_RemovePersonalAccessToken, serviceImpl.RemovePersonalAccessToken)
          .AddMethod(__Method_ListHumanLinkedIDPs, serviceImpl.ListHumanLinkedIDPs)
          .AddMethod(__Method_RemoveHumanLinkedIDP, serviceImpl.RemoveHumanLinkedIDP)
          .AddMethod(__Method_ListUserMemberships, serviceImpl.ListUserMemberships)
          .AddMethod(__Method_GetMyOrg, serviceImpl.GetMyOrg)
          .AddMethod(__Method_GetOrgByDomainGlobal, serviceImpl.GetOrgByDomainGlobal)
          .AddMethod(__Method_ListOrgChanges, serviceImpl.ListOrgChanges)
          .AddMethod(__Method_AddOrg, serviceImpl.AddOrg)
          .AddMethod(__Method_UpdateOrg, serviceImpl.UpdateOrg)
          .AddMethod(__Method_DeactivateOrg, serviceImpl.DeactivateOrg)
          .AddMethod(__Method_ReactivateOrg, serviceImpl.ReactivateOrg)
          .AddMethod(__Method_RemoveOrg, serviceImpl.RemoveOrg)
          .AddMethod(__Method_SetOrgMetadata, serviceImpl.SetOrgMetadata)
          .AddMethod(__Method_BulkSetOrgMetadata, serviceImpl.BulkSetOrgMetadata)
          .AddMethod(__Method_ListOrgMetadata, serviceImpl.ListOrgMetadata)
          .AddMethod(__Method_GetOrgMetadata, serviceImpl.GetOrgMetadata)
          .AddMethod(__Method_RemoveOrgMetadata, serviceImpl.RemoveOrgMetadata)
          .AddMethod(__Method_BulkRemoveOrgMetadata, serviceImpl.BulkRemoveOrgMetadata)
          .AddMethod(__Method_AddOrgDomain, serviceImpl.AddOrgDomain)
          .AddMethod(__Method_ListOrgDomains, serviceImpl.ListOrgDomains)
          .AddMethod(__Method_RemoveOrgDomain, serviceImpl.RemoveOrgDomain)
          .AddMethod(__Method_GenerateOrgDomainValidation, serviceImpl.GenerateOrgDomainValidation)
          .AddMethod(__Method_ValidateOrgDomain, serviceImpl.ValidateOrgDomain)
          .AddMethod(__Method_SetPrimaryOrgDomain, serviceImpl.SetPrimaryOrgDomain)
          .AddMethod(__Method_ListOrgMemberRoles, serviceImpl.ListOrgMemberRoles)
          .AddMethod(__Method_ListOrgMembers, serviceImpl.ListOrgMembers)
          .AddMethod(__Method_AddOrgMember, serviceImpl.AddOrgMember)
          .AddMethod(__Method_UpdateOrgMember, serviceImpl.UpdateOrgMember)
          .AddMethod(__Method_RemoveOrgMember, serviceImpl.RemoveOrgMember)
          .AddMethod(__Method_GetProjectByID, serviceImpl.GetProjectByID)
          .AddMethod(__Method_GetGrantedProjectByID, serviceImpl.GetGrantedProjectByID)
          .AddMethod(__Method_ListProjects, serviceImpl.ListProjects)
          .AddMethod(__Method_ListGrantedProjects, serviceImpl.ListGrantedProjects)
          .AddMethod(__Method_ListGrantedProjectRoles, serviceImpl.ListGrantedProjectRoles)
          .AddMethod(__Method_ListProjectChanges, serviceImpl.ListProjectChanges)
          .AddMethod(__Method_AddProject, serviceImpl.AddProject)
          .AddMethod(__Method_UpdateProject, serviceImpl.UpdateProject)
          .AddMethod(__Method_DeactivateProject, serviceImpl.DeactivateProject)
          .AddMethod(__Method_ReactivateProject, serviceImpl.ReactivateProject)
          .AddMethod(__Method_RemoveProject, serviceImpl.RemoveProject)
          .AddMethod(__Method_ListProjectRoles, serviceImpl.ListProjectRoles)
          .AddMethod(__Method_AddProjectRole, serviceImpl.AddProjectRole)
          .AddMethod(__Method_BulkAddProjectRoles, serviceImpl.BulkAddProjectRoles)
          .AddMethod(__Method_UpdateProjectRole, serviceImpl.UpdateProjectRole)
          .AddMethod(__Method_RemoveProjectRole, serviceImpl.RemoveProjectRole)
          .AddMethod(__Method_ListProjectMemberRoles, serviceImpl.ListProjectMemberRoles)
          .AddMethod(__Method_ListProjectMembers, serviceImpl.ListProjectMembers)
          .AddMethod(__Method_AddProjectMember, serviceImpl.AddProjectMember)
          .AddMethod(__Method_UpdateProjectMember, serviceImpl.UpdateProjectMember)
          .AddMethod(__Method_RemoveProjectMember, serviceImpl.RemoveProjectMember)
          .AddMethod(__Method_GetAppByID, serviceImpl.GetAppByID)
          .AddMethod(__Method_ListApps, serviceImpl.ListApps)
          .AddMethod(__Method_ListAppChanges, serviceImpl.ListAppChanges)
          .AddMethod(__Method_AddOIDCApp, serviceImpl.AddOIDCApp)
          .AddMethod(__Method_AddSAMLApp, serviceImpl.AddSAMLApp)
          .AddMethod(__Method_AddAPIApp, serviceImpl.AddAPIApp)
          .AddMethod(__Method_UpdateApp, serviceImpl.UpdateApp)
          .AddMethod(__Method_UpdateOIDCAppConfig, serviceImpl.UpdateOIDCAppConfig)
          .AddMethod(__Method_UpdateSAMLAppConfig, serviceImpl.UpdateSAMLAppConfig)
          .AddMethod(__Method_UpdateAPIAppConfig, serviceImpl.UpdateAPIAppConfig)
          .AddMethod(__Method_DeactivateApp, serviceImpl.DeactivateApp)
          .AddMethod(__Method_ReactivateApp, serviceImpl.ReactivateApp)
          .AddMethod(__Method_RemoveApp, serviceImpl.RemoveApp)
          .AddMethod(__Method_RegenerateOIDCClientSecret, serviceImpl.RegenerateOIDCClientSecret)
          .AddMethod(__Method_RegenerateAPIClientSecret, serviceImpl.RegenerateAPIClientSecret)
          .AddMethod(__Method_GetAppKey, serviceImpl.GetAppKey)
          .AddMethod(__Method_ListAppKeys, serviceImpl.ListAppKeys)
          .AddMethod(__Method_AddAppKey, serviceImpl.AddAppKey)
          .AddMethod(__Method_RemoveAppKey, serviceImpl.RemoveAppKey)
          .AddMethod(__Method_ListProjectGrantChanges, serviceImpl.ListProjectGrantChanges)
          .AddMethod(__Method_GetProjectGrantByID, serviceImpl.GetProjectGrantByID)
          .AddMethod(__Method_ListProjectGrants, serviceImpl.ListProjectGrants)
          .AddMethod(__Method_ListAllProjectGrants, serviceImpl.ListAllProjectGrants)
          .AddMethod(__Method_AddProjectGrant, serviceImpl.AddProjectGrant)
          .AddMethod(__Method_UpdateProjectGrant, serviceImpl.UpdateProjectGrant)
          .AddMethod(__Method_DeactivateProjectGrant, serviceImpl.DeactivateProjectGrant)
          .AddMethod(__Method_ReactivateProjectGrant, serviceImpl.ReactivateProjectGrant)
          .AddMethod(__Method_RemoveProjectGrant, serviceImpl.RemoveProjectGrant)
          .AddMethod(__Method_ListProjectGrantMemberRoles, serviceImpl.ListProjectGrantMemberRoles)
          .AddMethod(__Method_ListProjectGrantMembers, serviceImpl.ListProjectGrantMembers)
          .AddMethod(__Method_AddProjectGrantMember, serviceImpl.AddProjectGrantMember)
          .AddMethod(__Method_UpdateProjectGrantMember, serviceImpl.UpdateProjectGrantMember)
          .AddMethod(__Method_RemoveProjectGrantMember, serviceImpl.RemoveProjectGrantMember)
          .AddMethod(__Method_GetUserGrantByID, serviceImpl.GetUserGrantByID)
          .AddMethod(__Method_ListUserGrants, serviceImpl.ListUserGrants)
          .AddMethod(__Method_AddUserGrant, serviceImpl.AddUserGrant)
          .AddMethod(__Method_UpdateUserGrant, serviceImpl.UpdateUserGrant)
          .AddMethod(__Method_DeactivateUserGrant, serviceImpl.DeactivateUserGrant)
          .AddMethod(__Method_ReactivateUserGrant, serviceImpl.ReactivateUserGrant)
          .AddMethod(__Method_RemoveUserGrant, serviceImpl.RemoveUserGrant)
          .AddMethod(__Method_BulkRemoveUserGrant, serviceImpl.BulkRemoveUserGrant)
          .AddMethod(__Method_GetOrgIAMPolicy, serviceImpl.GetOrgIAMPolicy)
          .AddMethod(__Method_GetDomainPolicy, serviceImpl.GetDomainPolicy)
          .AddMethod(__Method_GetLoginPolicy, serviceImpl.GetLoginPolicy)
          .AddMethod(__Method_GetDefaultLoginPolicy, serviceImpl.GetDefaultLoginPolicy)
          .AddMethod(__Method_AddCustomLoginPolicy, serviceImpl.AddCustomLoginPolicy)
          .AddMethod(__Method_UpdateCustomLoginPolicy, serviceImpl.UpdateCustomLoginPolicy)
          .AddMethod(__Method_ResetLoginPolicyToDefault, serviceImpl.ResetLoginPolicyToDefault)
          .AddMethod(__Method_ListLoginPolicyIDPs, serviceImpl.ListLoginPolicyIDPs)
          .AddMethod(__Method_AddIDPToLoginPolicy, serviceImpl.AddIDPToLoginPolicy)
          .AddMethod(__Method_RemoveIDPFromLoginPolicy, serviceImpl.RemoveIDPFromLoginPolicy)
          .AddMethod(__Method_ListLoginPolicySecondFactors, serviceImpl.ListLoginPolicySecondFactors)
          .AddMethod(__Method_AddSecondFactorToLoginPolicy, serviceImpl.AddSecondFactorToLoginPolicy)
          .AddMethod(__Method_RemoveSecondFactorFromLoginPolicy, serviceImpl.RemoveSecondFactorFromLoginPolicy)
          .AddMethod(__Method_ListLoginPolicyMultiFactors, serviceImpl.ListLoginPolicyMultiFactors)
          .AddMethod(__Method_AddMultiFactorToLoginPolicy, serviceImpl.AddMultiFactorToLoginPolicy)
          .AddMethod(__Method_RemoveMultiFactorFromLoginPolicy, serviceImpl.RemoveMultiFactorFromLoginPolicy)
          .AddMethod(__Method_GetPasswordComplexityPolicy, serviceImpl.GetPasswordComplexityPolicy)
          .AddMethod(__Method_GetDefaultPasswordComplexityPolicy, serviceImpl.GetDefaultPasswordComplexityPolicy)
          .AddMethod(__Method_AddCustomPasswordComplexityPolicy, serviceImpl.AddCustomPasswordComplexityPolicy)
          .AddMethod(__Method_UpdateCustomPasswordComplexityPolicy, serviceImpl.UpdateCustomPasswordComplexityPolicy)
          .AddMethod(__Method_ResetPasswordComplexityPolicyToDefault, serviceImpl.ResetPasswordComplexityPolicyToDefault)
          .AddMethod(__Method_GetPasswordAgePolicy, serviceImpl.GetPasswordAgePolicy)
          .AddMethod(__Method_GetDefaultPasswordAgePolicy, serviceImpl.GetDefaultPasswordAgePolicy)
          .AddMethod(__Method_AddCustomPasswordAgePolicy, serviceImpl.AddCustomPasswordAgePolicy)
          .AddMethod(__Method_UpdateCustomPasswordAgePolicy, serviceImpl.UpdateCustomPasswordAgePolicy)
          .AddMethod(__Method_ResetPasswordAgePolicyToDefault, serviceImpl.ResetPasswordAgePolicyToDefault)
          .AddMethod(__Method_GetLockoutPolicy, serviceImpl.GetLockoutPolicy)
          .AddMethod(__Method_GetDefaultLockoutPolicy, serviceImpl.GetDefaultLockoutPolicy)
          .AddMethod(__Method_AddCustomLockoutPolicy, serviceImpl.AddCustomLockoutPolicy)
          .AddMethod(__Method_UpdateCustomLockoutPolicy, serviceImpl.UpdateCustomLockoutPolicy)
          .AddMethod(__Method_ResetLockoutPolicyToDefault, serviceImpl.ResetLockoutPolicyToDefault)
          .AddMethod(__Method_GetPrivacyPolicy, serviceImpl.GetPrivacyPolicy)
          .AddMethod(__Method_GetDefaultPrivacyPolicy, serviceImpl.GetDefaultPrivacyPolicy)
          .AddMethod(__Method_AddCustomPrivacyPolicy, serviceImpl.AddCustomPrivacyPolicy)
          .AddMethod(__Method_UpdateCustomPrivacyPolicy, serviceImpl.UpdateCustomPrivacyPolicy)
          .AddMethod(__Method_ResetPrivacyPolicyToDefault, serviceImpl.ResetPrivacyPolicyToDefault)
          .AddMethod(__Method_GetNotificationPolicy, serviceImpl.GetNotificationPolicy)
          .AddMethod(__Method_GetDefaultNotificationPolicy, serviceImpl.GetDefaultNotificationPolicy)
          .AddMethod(__Method_AddCustomNotificationPolicy, serviceImpl.AddCustomNotificationPolicy)
          .AddMethod(__Method_UpdateCustomNotificationPolicy, serviceImpl.UpdateCustomNotificationPolicy)
          .AddMethod(__Method_ResetNotificationPolicyToDefault, serviceImpl.ResetNotificationPolicyToDefault)
          .AddMethod(__Method_GetLabelPolicy, serviceImpl.GetLabelPolicy)
          .AddMethod(__Method_GetPreviewLabelPolicy, serviceImpl.GetPreviewLabelPolicy)
          .AddMethod(__Method_GetDefaultLabelPolicy, serviceImpl.GetDefaultLabelPolicy)
          .AddMethod(__Method_AddCustomLabelPolicy, serviceImpl.AddCustomLabelPolicy)
          .AddMethod(__Method_UpdateCustomLabelPolicy, serviceImpl.UpdateCustomLabelPolicy)
          .AddMethod(__Method_ActivateCustomLabelPolicy, serviceImpl.ActivateCustomLabelPolicy)
          .AddMethod(__Method_RemoveCustomLabelPolicyLogo, serviceImpl.RemoveCustomLabelPolicyLogo)
          .AddMethod(__Method_RemoveCustomLabelPolicyLogoDark, serviceImpl.RemoveCustomLabelPolicyLogoDark)
          .AddMethod(__Method_RemoveCustomLabelPolicyIcon, serviceImpl.RemoveCustomLabelPolicyIcon)
          .AddMethod(__Method_RemoveCustomLabelPolicyIconDark, serviceImpl.RemoveCustomLabelPolicyIconDark)
          .AddMethod(__Method_RemoveCustomLabelPolicyFont, serviceImpl.RemoveCustomLabelPolicyFont)
          .AddMethod(__Method_ResetLabelPolicyToDefault, serviceImpl.ResetLabelPolicyToDefault)
          .AddMethod(__Method_GetCustomInitMessageText, serviceImpl.GetCustomInitMessageText)
          .AddMethod(__Method_GetDefaultInitMessageText, serviceImpl.GetDefaultInitMessageText)
          .AddMethod(__Method_SetCustomInitMessageText, serviceImpl.SetCustomInitMessageText)
          .AddMethod(__Method_ResetCustomInitMessageTextToDefault, serviceImpl.ResetCustomInitMessageTextToDefault)
          .AddMethod(__Method_GetCustomPasswordResetMessageText, serviceImpl.GetCustomPasswordResetMessageText)
          .AddMethod(__Method_GetDefaultPasswordResetMessageText, serviceImpl.GetDefaultPasswordResetMessageText)
          .AddMethod(__Method_SetCustomPasswordResetMessageText, serviceImpl.SetCustomPasswordResetMessageText)
          .AddMethod(__Method_ResetCustomPasswordResetMessageTextToDefault, serviceImpl.ResetCustomPasswordResetMessageTextToDefault)
          .AddMethod(__Method_GetCustomVerifyEmailMessageText, serviceImpl.GetCustomVerifyEmailMessageText)
          .AddMethod(__Method_GetDefaultVerifyEmailMessageText, serviceImpl.GetDefaultVerifyEmailMessageText)
          .AddMethod(__Method_SetCustomVerifyEmailMessageText, serviceImpl.SetCustomVerifyEmailMessageText)
          .AddMethod(__Method_ResetCustomVerifyEmailMessageTextToDefault, serviceImpl.ResetCustomVerifyEmailMessageTextToDefault)
          .AddMethod(__Method_GetCustomVerifyPhoneMessageText, serviceImpl.GetCustomVerifyPhoneMessageText)
          .AddMethod(__Method_GetDefaultVerifyPhoneMessageText, serviceImpl.GetDefaultVerifyPhoneMessageText)
          .AddMethod(__Method_SetCustomVerifyPhoneMessageText, serviceImpl.SetCustomVerifyPhoneMessageText)
          .AddMethod(__Method_ResetCustomVerifyPhoneMessageTextToDefault, serviceImpl.ResetCustomVerifyPhoneMessageTextToDefault)
          .AddMethod(__Method_GetCustomVerifySMSOTPMessageText, serviceImpl.GetCustomVerifySMSOTPMessageText)
          .AddMethod(__Method_GetDefaultVerifySMSOTPMessageText, serviceImpl.GetDefaultVerifySMSOTPMessageText)
          .AddMethod(__Method_SetCustomVerifySMSOTPMessageText, serviceImpl.SetCustomVerifySMSOTPMessageText)
          .AddMethod(__Method_ResetCustomVerifySMSOTPMessageTextToDefault, serviceImpl.ResetCustomVerifySMSOTPMessageTextToDefault)
          .AddMethod(__Method_GetCustomVerifyEmailOTPMessageText, serviceImpl.GetCustomVerifyEmailOTPMessageText)
          .AddMethod(__Method_GetDefaultVerifyEmailOTPMessageText, serviceImpl.GetDefaultVerifyEmailOTPMessageText)
          .AddMethod(__Method_SetCustomVerifyEmailOTPMessageText, serviceImpl.SetCustomVerifyEmailOTPMessageText)
          .AddMethod(__Method_ResetCustomVerifyEmailOTPMessageTextToDefault, serviceImpl.ResetCustomVerifyEmailOTPMessageTextToDefault)
          .AddMethod(__Method_GetCustomDomainClaimedMessageText, serviceImpl.GetCustomDomainClaimedMessageText)
          .AddMethod(__Method_GetDefaultDomainClaimedMessageText, serviceImpl.GetDefaultDomainClaimedMessageText)
          .AddMethod(__Method_SetCustomDomainClaimedMessageCustomText, serviceImpl.SetCustomDomainClaimedMessageCustomText)
          .AddMethod(__Method_ResetCustomDomainClaimedMessageTextToDefault, serviceImpl.ResetCustomDomainClaimedMessageTextToDefault)
          .AddMethod(__Method_GetCustomPasswordlessRegistrationMessageText, serviceImpl.GetCustomPasswordlessRegistrationMessageText)
          .AddMethod(__Method_GetDefaultPasswordlessRegistrationMessageText, serviceImpl.GetDefaultPasswordlessRegistrationMessageText)
          .AddMethod(__Method_SetCustomPasswordlessRegistrationMessageCustomText, serviceImpl.SetCustomPasswordlessRegistrationMessageCustomText)
          .AddMethod(__Method_ResetCustomPasswordlessRegistrationMessageTextToDefault, serviceImpl.ResetCustomPasswordlessRegistrationMessageTextToDefault)
          .AddMethod(__Method_GetCustomPasswordChangeMessageText, serviceImpl.GetCustomPasswordChangeMessageText)
          .AddMethod(__Method_GetDefaultPasswordChangeMessageText, serviceImpl.GetDefaultPasswordChangeMessageText)
          .AddMethod(__Method_SetCustomPasswordChangeMessageCustomText, serviceImpl.SetCustomPasswordChangeMessageCustomText)
          .AddMethod(__Method_ResetCustomPasswordChangeMessageTextToDefault, serviceImpl.ResetCustomPasswordChangeMessageTextToDefault)
          .AddMethod(__Method_GetCustomInviteUserMessageText, serviceImpl.GetCustomInviteUserMessageText)
          .AddMethod(__Method_GetDefaultInviteUserMessageText, serviceImpl.GetDefaultInviteUserMessageText)
          .AddMethod(__Method_SetCustomInviteUserMessageCustomText, serviceImpl.SetCustomInviteUserMessageCustomText)
          .AddMethod(__Method_ResetCustomInviteUserMessageTextToDefault, serviceImpl.ResetCustomInviteUserMessageTextToDefault)
          .AddMethod(__Method_GetCustomLoginTexts, serviceImpl.GetCustomLoginTexts)
          .AddMethod(__Method_GetDefaultLoginTexts, serviceImpl.GetDefaultLoginTexts)
          .AddMethod(__Method_SetCustomLoginText, serviceImpl.SetCustomLoginText)
          .AddMethod(__Method_ResetCustomLoginTextToDefault, serviceImpl.ResetCustomLoginTextToDefault)
          .AddMethod(__Method_GetOrgIDPByID, serviceImpl.GetOrgIDPByID)
          .AddMethod(__Method_ListOrgIDPs, serviceImpl.ListOrgIDPs)
          .AddMethod(__Method_AddOrgOIDCIDP, serviceImpl.AddOrgOIDCIDP)
          .AddMethod(__Method_AddOrgJWTIDP, serviceImpl.AddOrgJWTIDP)
          .AddMethod(__Method_DeactivateOrgIDP, serviceImpl.DeactivateOrgIDP)
          .AddMethod(__Method_ReactivateOrgIDP, serviceImpl.ReactivateOrgIDP)
          .AddMethod(__Method_RemoveOrgIDP, serviceImpl.RemoveOrgIDP)
          .AddMethod(__Method_UpdateOrgIDP, serviceImpl.UpdateOrgIDP)
          .AddMethod(__Method_UpdateOrgIDPOIDCConfig, serviceImpl.UpdateOrgIDPOIDCConfig)
          .AddMethod(__Method_UpdateOrgIDPJWTConfig, serviceImpl.UpdateOrgIDPJWTConfig)
          .AddMethod(__Method_ListProviders, serviceImpl.ListProviders)
          .AddMethod(__Method_GetProviderByID, serviceImpl.GetProviderByID)
          .AddMethod(__Method_AddGenericOAuthProvider, serviceImpl.AddGenericOAuthProvider)
          .AddMethod(__Method_UpdateGenericOAuthProvider, serviceImpl.UpdateGenericOAuthProvider)
          .AddMethod(__Method_AddGenericOIDCProvider, serviceImpl.AddGenericOIDCProvider)
          .AddMethod(__Method_UpdateGenericOIDCProvider, serviceImpl.UpdateGenericOIDCProvider)
          .AddMethod(__Method_MigrateGenericOIDCProvider, serviceImpl.MigrateGenericOIDCProvider)
          .AddMethod(__Method_AddJWTProvider, serviceImpl.AddJWTProvider)
          .AddMethod(__Method_UpdateJWTProvider, serviceImpl.UpdateJWTProvider)
          .AddMethod(__Method_AddAzureADProvider, serviceImpl.AddAzureADProvider)
          .AddMethod(__Method_UpdateAzureADProvider, serviceImpl.UpdateAzureADProvider)
          .AddMethod(__Method_AddGitHubProvider, serviceImpl.AddGitHubProvider)
          .AddMethod(__Method_UpdateGitHubProvider, serviceImpl.UpdateGitHubProvider)
          .AddMethod(__Method_AddGitHubEnterpriseServerProvider, serviceImpl.AddGitHubEnterpriseServerProvider)
          .AddMethod(__Method_UpdateGitHubEnterpriseServerProvider, serviceImpl.UpdateGitHubEnterpriseServerProvider)
          .AddMethod(__Method_AddGitLabProvider, serviceImpl.AddGitLabProvider)
          .AddMethod(__Method_UpdateGitLabProvider, serviceImpl.UpdateGitLabProvider)
          .AddMethod(__Method_AddGitLabSelfHostedProvider, serviceImpl.AddGitLabSelfHostedProvider)
          .AddMethod(__Method_UpdateGitLabSelfHostedProvider, serviceImpl.UpdateGitLabSelfHostedProvider)
          .AddMethod(__Method_AddGoogleProvider, serviceImpl.AddGoogleProvider)
          .AddMethod(__Method_UpdateGoogleProvider, serviceImpl.UpdateGoogleProvider)
          .AddMethod(__Method_AddLDAPProvider, serviceImpl.AddLDAPProvider)
          .AddMethod(__Method_UpdateLDAPProvider, serviceImpl.UpdateLDAPProvider)
          .AddMethod(__Method_AddAppleProvider, serviceImpl.AddAppleProvider)
          .AddMethod(__Method_UpdateAppleProvider, serviceImpl.UpdateAppleProvider)
          .AddMethod(__Method_AddSAMLProvider, serviceImpl.AddSAMLProvider)
          .AddMethod(__Method_UpdateSAMLProvider, serviceImpl.UpdateSAMLProvider)
          .AddMethod(__Method_RegenerateSAMLProviderCertificate, serviceImpl.RegenerateSAMLProviderCertificate)
          .AddMethod(__Method_DeleteProvider, serviceImpl.DeleteProvider)
          .AddMethod(__Method_ListActions, serviceImpl.ListActions)
          .AddMethod(__Method_GetAction, serviceImpl.GetAction)
          .AddMethod(__Method_CreateAction, serviceImpl.CreateAction)
          .AddMethod(__Method_UpdateAction, serviceImpl.UpdateAction)
          .AddMethod(__Method_DeactivateAction, serviceImpl.DeactivateAction)
          .AddMethod(__Method_ReactivateAction, serviceImpl.ReactivateAction)
          .AddMethod(__Method_DeleteAction, serviceImpl.DeleteAction)
          .AddMethod(__Method_ListFlowTypes, serviceImpl.ListFlowTypes)
          .AddMethod(__Method_ListFlowTriggerTypes, serviceImpl.ListFlowTriggerTypes)
          .AddMethod(__Method_GetFlow, serviceImpl.GetFlow)
          .AddMethod(__Method_ClearFlow, serviceImpl.ClearFlow)
          .AddMethod(__Method_SetTriggerActions, serviceImpl.SetTriggerActions).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ManagementServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Healthz, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.HealthzRequest, global::Zitadel.Management.V1.HealthzResponse>(serviceImpl.Healthz));
      serviceBinder.AddMethod(__Method_GetOIDCInformation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetOIDCInformationRequest, global::Zitadel.Management.V1.GetOIDCInformationResponse>(serviceImpl.GetOIDCInformation));
      serviceBinder.AddMethod(__Method_GetIAM, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetIAMRequest, global::Zitadel.Management.V1.GetIAMResponse>(serviceImpl.GetIAM));
      serviceBinder.AddMethod(__Method_GetSupportedLanguages, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetSupportedLanguagesRequest, global::Zitadel.Management.V1.GetSupportedLanguagesResponse>(serviceImpl.GetSupportedLanguages));
      serviceBinder.AddMethod(__Method_GetUserByID, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetUserByIDRequest, global::Zitadel.Management.V1.GetUserByIDResponse>(serviceImpl.GetUserByID));
      serviceBinder.AddMethod(__Method_GetUserByLoginNameGlobal, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetUserByLoginNameGlobalRequest, global::Zitadel.Management.V1.GetUserByLoginNameGlobalResponse>(serviceImpl.GetUserByLoginNameGlobal));
      serviceBinder.AddMethod(__Method_ListUsers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListUsersRequest, global::Zitadel.Management.V1.ListUsersResponse>(serviceImpl.ListUsers));
      serviceBinder.AddMethod(__Method_ListUserChanges, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListUserChangesRequest, global::Zitadel.Management.V1.ListUserChangesResponse>(serviceImpl.ListUserChanges));
      serviceBinder.AddMethod(__Method_IsUserUnique, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.IsUserUniqueRequest, global::Zitadel.Management.V1.IsUserUniqueResponse>(serviceImpl.IsUserUnique));
      serviceBinder.AddMethod(__Method_AddHumanUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddHumanUserRequest, global::Zitadel.Management.V1.AddHumanUserResponse>(serviceImpl.AddHumanUser));
      serviceBinder.AddMethod(__Method_ImportHumanUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ImportHumanUserRequest, global::Zitadel.Management.V1.ImportHumanUserResponse>(serviceImpl.ImportHumanUser));
      serviceBinder.AddMethod(__Method_AddMachineUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddMachineUserRequest, global::Zitadel.Management.V1.AddMachineUserResponse>(serviceImpl.AddMachineUser));
      serviceBinder.AddMethod(__Method_DeactivateUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.DeactivateUserRequest, global::Zitadel.Management.V1.DeactivateUserResponse>(serviceImpl.DeactivateUser));
      serviceBinder.AddMethod(__Method_ReactivateUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ReactivateUserRequest, global::Zitadel.Management.V1.ReactivateUserResponse>(serviceImpl.ReactivateUser));
      serviceBinder.AddMethod(__Method_LockUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.LockUserRequest, global::Zitadel.Management.V1.LockUserResponse>(serviceImpl.LockUser));
      serviceBinder.AddMethod(__Method_UnlockUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UnlockUserRequest, global::Zitadel.Management.V1.UnlockUserResponse>(serviceImpl.UnlockUser));
      serviceBinder.AddMethod(__Method_RemoveUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveUserRequest, global::Zitadel.Management.V1.RemoveUserResponse>(serviceImpl.RemoveUser));
      serviceBinder.AddMethod(__Method_UpdateUserName, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateUserNameRequest, global::Zitadel.Management.V1.UpdateUserNameResponse>(serviceImpl.UpdateUserName));
      serviceBinder.AddMethod(__Method_SetUserMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SetUserMetadataRequest, global::Zitadel.Management.V1.SetUserMetadataResponse>(serviceImpl.SetUserMetadata));
      serviceBinder.AddMethod(__Method_BulkSetUserMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.BulkSetUserMetadataRequest, global::Zitadel.Management.V1.BulkSetUserMetadataResponse>(serviceImpl.BulkSetUserMetadata));
      serviceBinder.AddMethod(__Method_ListUserMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListUserMetadataRequest, global::Zitadel.Management.V1.ListUserMetadataResponse>(serviceImpl.ListUserMetadata));
      serviceBinder.AddMethod(__Method_GetUserMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetUserMetadataRequest, global::Zitadel.Management.V1.GetUserMetadataResponse>(serviceImpl.GetUserMetadata));
      serviceBinder.AddMethod(__Method_RemoveUserMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveUserMetadataRequest, global::Zitadel.Management.V1.RemoveUserMetadataResponse>(serviceImpl.RemoveUserMetadata));
      serviceBinder.AddMethod(__Method_BulkRemoveUserMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.BulkRemoveUserMetadataRequest, global::Zitadel.Management.V1.BulkRemoveUserMetadataResponse>(serviceImpl.BulkRemoveUserMetadata));
      serviceBinder.AddMethod(__Method_GetHumanProfile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetHumanProfileRequest, global::Zitadel.Management.V1.GetHumanProfileResponse>(serviceImpl.GetHumanProfile));
      serviceBinder.AddMethod(__Method_UpdateHumanProfile, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateHumanProfileRequest, global::Zitadel.Management.V1.UpdateHumanProfileResponse>(serviceImpl.UpdateHumanProfile));
      serviceBinder.AddMethod(__Method_GetHumanEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetHumanEmailRequest, global::Zitadel.Management.V1.GetHumanEmailResponse>(serviceImpl.GetHumanEmail));
      serviceBinder.AddMethod(__Method_UpdateHumanEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateHumanEmailRequest, global::Zitadel.Management.V1.UpdateHumanEmailResponse>(serviceImpl.UpdateHumanEmail));
      serviceBinder.AddMethod(__Method_ResendHumanInitialization, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResendHumanInitializationRequest, global::Zitadel.Management.V1.ResendHumanInitializationResponse>(serviceImpl.ResendHumanInitialization));
      serviceBinder.AddMethod(__Method_ResendHumanEmailVerification, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResendHumanEmailVerificationRequest, global::Zitadel.Management.V1.ResendHumanEmailVerificationResponse>(serviceImpl.ResendHumanEmailVerification));
      serviceBinder.AddMethod(__Method_GetHumanPhone, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetHumanPhoneRequest, global::Zitadel.Management.V1.GetHumanPhoneResponse>(serviceImpl.GetHumanPhone));
      serviceBinder.AddMethod(__Method_UpdateHumanPhone, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateHumanPhoneRequest, global::Zitadel.Management.V1.UpdateHumanPhoneResponse>(serviceImpl.UpdateHumanPhone));
      serviceBinder.AddMethod(__Method_RemoveHumanPhone, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveHumanPhoneRequest, global::Zitadel.Management.V1.RemoveHumanPhoneResponse>(serviceImpl.RemoveHumanPhone));
      serviceBinder.AddMethod(__Method_ResendHumanPhoneVerification, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResendHumanPhoneVerificationRequest, global::Zitadel.Management.V1.ResendHumanPhoneVerificationResponse>(serviceImpl.ResendHumanPhoneVerification));
      serviceBinder.AddMethod(__Method_RemoveHumanAvatar, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveHumanAvatarRequest, global::Zitadel.Management.V1.RemoveHumanAvatarResponse>(serviceImpl.RemoveHumanAvatar));
      serviceBinder.AddMethod(__Method_SetHumanInitialPassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SetHumanInitialPasswordRequest, global::Zitadel.Management.V1.SetHumanInitialPasswordResponse>(serviceImpl.SetHumanInitialPassword));
      serviceBinder.AddMethod(__Method_SetHumanPassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SetHumanPasswordRequest, global::Zitadel.Management.V1.SetHumanPasswordResponse>(serviceImpl.SetHumanPassword));
      serviceBinder.AddMethod(__Method_SendHumanResetPasswordNotification, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SendHumanResetPasswordNotificationRequest, global::Zitadel.Management.V1.SendHumanResetPasswordNotificationResponse>(serviceImpl.SendHumanResetPasswordNotification));
      serviceBinder.AddMethod(__Method_ListHumanAuthFactors, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListHumanAuthFactorsRequest, global::Zitadel.Management.V1.ListHumanAuthFactorsResponse>(serviceImpl.ListHumanAuthFactors));
      serviceBinder.AddMethod(__Method_RemoveHumanAuthFactorOTP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPRequest, global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPResponse>(serviceImpl.RemoveHumanAuthFactorOTP));
      serviceBinder.AddMethod(__Method_RemoveHumanAuthFactorU2F, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FRequest, global::Zitadel.Management.V1.RemoveHumanAuthFactorU2FResponse>(serviceImpl.RemoveHumanAuthFactorU2F));
      serviceBinder.AddMethod(__Method_RemoveHumanAuthFactorOTPSMS, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSRequest, global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPSMSResponse>(serviceImpl.RemoveHumanAuthFactorOTPSMS));
      serviceBinder.AddMethod(__Method_RemoveHumanAuthFactorOTPEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailRequest, global::Zitadel.Management.V1.RemoveHumanAuthFactorOTPEmailResponse>(serviceImpl.RemoveHumanAuthFactorOTPEmail));
      serviceBinder.AddMethod(__Method_ListHumanPasswordless, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListHumanPasswordlessRequest, global::Zitadel.Management.V1.ListHumanPasswordlessResponse>(serviceImpl.ListHumanPasswordless));
      serviceBinder.AddMethod(__Method_AddPasswordlessRegistration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddPasswordlessRegistrationRequest, global::Zitadel.Management.V1.AddPasswordlessRegistrationResponse>(serviceImpl.AddPasswordlessRegistration));
      serviceBinder.AddMethod(__Method_SendPasswordlessRegistration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SendPasswordlessRegistrationRequest, global::Zitadel.Management.V1.SendPasswordlessRegistrationResponse>(serviceImpl.SendPasswordlessRegistration));
      serviceBinder.AddMethod(__Method_RemoveHumanPasswordless, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveHumanPasswordlessRequest, global::Zitadel.Management.V1.RemoveHumanPasswordlessResponse>(serviceImpl.RemoveHumanPasswordless));
      serviceBinder.AddMethod(__Method_UpdateMachine, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateMachineRequest, global::Zitadel.Management.V1.UpdateMachineResponse>(serviceImpl.UpdateMachine));
      serviceBinder.AddMethod(__Method_GenerateMachineSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GenerateMachineSecretRequest, global::Zitadel.Management.V1.GenerateMachineSecretResponse>(serviceImpl.GenerateMachineSecret));
      serviceBinder.AddMethod(__Method_RemoveMachineSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveMachineSecretRequest, global::Zitadel.Management.V1.RemoveMachineSecretResponse>(serviceImpl.RemoveMachineSecret));
      serviceBinder.AddMethod(__Method_GetMachineKeyByIDs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetMachineKeyByIDsRequest, global::Zitadel.Management.V1.GetMachineKeyByIDsResponse>(serviceImpl.GetMachineKeyByIDs));
      serviceBinder.AddMethod(__Method_ListMachineKeys, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListMachineKeysRequest, global::Zitadel.Management.V1.ListMachineKeysResponse>(serviceImpl.ListMachineKeys));
      serviceBinder.AddMethod(__Method_AddMachineKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddMachineKeyRequest, global::Zitadel.Management.V1.AddMachineKeyResponse>(serviceImpl.AddMachineKey));
      serviceBinder.AddMethod(__Method_RemoveMachineKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveMachineKeyRequest, global::Zitadel.Management.V1.RemoveMachineKeyResponse>(serviceImpl.RemoveMachineKey));
      serviceBinder.AddMethod(__Method_GetPersonalAccessTokenByIDs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsRequest, global::Zitadel.Management.V1.GetPersonalAccessTokenByIDsResponse>(serviceImpl.GetPersonalAccessTokenByIDs));
      serviceBinder.AddMethod(__Method_ListPersonalAccessTokens, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListPersonalAccessTokensRequest, global::Zitadel.Management.V1.ListPersonalAccessTokensResponse>(serviceImpl.ListPersonalAccessTokens));
      serviceBinder.AddMethod(__Method_AddPersonalAccessToken, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddPersonalAccessTokenRequest, global::Zitadel.Management.V1.AddPersonalAccessTokenResponse>(serviceImpl.AddPersonalAccessToken));
      serviceBinder.AddMethod(__Method_RemovePersonalAccessToken, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemovePersonalAccessTokenRequest, global::Zitadel.Management.V1.RemovePersonalAccessTokenResponse>(serviceImpl.RemovePersonalAccessToken));
      serviceBinder.AddMethod(__Method_ListHumanLinkedIDPs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListHumanLinkedIDPsRequest, global::Zitadel.Management.V1.ListHumanLinkedIDPsResponse>(serviceImpl.ListHumanLinkedIDPs));
      serviceBinder.AddMethod(__Method_RemoveHumanLinkedIDP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveHumanLinkedIDPRequest, global::Zitadel.Management.V1.RemoveHumanLinkedIDPResponse>(serviceImpl.RemoveHumanLinkedIDP));
      serviceBinder.AddMethod(__Method_ListUserMemberships, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListUserMembershipsRequest, global::Zitadel.Management.V1.ListUserMembershipsResponse>(serviceImpl.ListUserMemberships));
      serviceBinder.AddMethod(__Method_GetMyOrg, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetMyOrgRequest, global::Zitadel.Management.V1.GetMyOrgResponse>(serviceImpl.GetMyOrg));
      serviceBinder.AddMethod(__Method_GetOrgByDomainGlobal, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetOrgByDomainGlobalRequest, global::Zitadel.Management.V1.GetOrgByDomainGlobalResponse>(serviceImpl.GetOrgByDomainGlobal));
      serviceBinder.AddMethod(__Method_ListOrgChanges, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListOrgChangesRequest, global::Zitadel.Management.V1.ListOrgChangesResponse>(serviceImpl.ListOrgChanges));
      serviceBinder.AddMethod(__Method_AddOrg, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddOrgRequest, global::Zitadel.Management.V1.AddOrgResponse>(serviceImpl.AddOrg));
      serviceBinder.AddMethod(__Method_UpdateOrg, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateOrgRequest, global::Zitadel.Management.V1.UpdateOrgResponse>(serviceImpl.UpdateOrg));
      serviceBinder.AddMethod(__Method_DeactivateOrg, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.DeactivateOrgRequest, global::Zitadel.Management.V1.DeactivateOrgResponse>(serviceImpl.DeactivateOrg));
      serviceBinder.AddMethod(__Method_ReactivateOrg, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ReactivateOrgRequest, global::Zitadel.Management.V1.ReactivateOrgResponse>(serviceImpl.ReactivateOrg));
      serviceBinder.AddMethod(__Method_RemoveOrg, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveOrgRequest, global::Zitadel.Management.V1.RemoveOrgResponse>(serviceImpl.RemoveOrg));
      serviceBinder.AddMethod(__Method_SetOrgMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SetOrgMetadataRequest, global::Zitadel.Management.V1.SetOrgMetadataResponse>(serviceImpl.SetOrgMetadata));
      serviceBinder.AddMethod(__Method_BulkSetOrgMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.BulkSetOrgMetadataRequest, global::Zitadel.Management.V1.BulkSetOrgMetadataResponse>(serviceImpl.BulkSetOrgMetadata));
      serviceBinder.AddMethod(__Method_ListOrgMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListOrgMetadataRequest, global::Zitadel.Management.V1.ListOrgMetadataResponse>(serviceImpl.ListOrgMetadata));
      serviceBinder.AddMethod(__Method_GetOrgMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetOrgMetadataRequest, global::Zitadel.Management.V1.GetOrgMetadataResponse>(serviceImpl.GetOrgMetadata));
      serviceBinder.AddMethod(__Method_RemoveOrgMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveOrgMetadataRequest, global::Zitadel.Management.V1.RemoveOrgMetadataResponse>(serviceImpl.RemoveOrgMetadata));
      serviceBinder.AddMethod(__Method_BulkRemoveOrgMetadata, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.BulkRemoveOrgMetadataRequest, global::Zitadel.Management.V1.BulkRemoveOrgMetadataResponse>(serviceImpl.BulkRemoveOrgMetadata));
      serviceBinder.AddMethod(__Method_AddOrgDomain, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddOrgDomainRequest, global::Zitadel.Management.V1.AddOrgDomainResponse>(serviceImpl.AddOrgDomain));
      serviceBinder.AddMethod(__Method_ListOrgDomains, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListOrgDomainsRequest, global::Zitadel.Management.V1.ListOrgDomainsResponse>(serviceImpl.ListOrgDomains));
      serviceBinder.AddMethod(__Method_RemoveOrgDomain, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveOrgDomainRequest, global::Zitadel.Management.V1.RemoveOrgDomainResponse>(serviceImpl.RemoveOrgDomain));
      serviceBinder.AddMethod(__Method_GenerateOrgDomainValidation, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GenerateOrgDomainValidationRequest, global::Zitadel.Management.V1.GenerateOrgDomainValidationResponse>(serviceImpl.GenerateOrgDomainValidation));
      serviceBinder.AddMethod(__Method_ValidateOrgDomain, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ValidateOrgDomainRequest, global::Zitadel.Management.V1.ValidateOrgDomainResponse>(serviceImpl.ValidateOrgDomain));
      serviceBinder.AddMethod(__Method_SetPrimaryOrgDomain, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SetPrimaryOrgDomainRequest, global::Zitadel.Management.V1.SetPrimaryOrgDomainResponse>(serviceImpl.SetPrimaryOrgDomain));
      serviceBinder.AddMethod(__Method_ListOrgMemberRoles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListOrgMemberRolesRequest, global::Zitadel.Management.V1.ListOrgMemberRolesResponse>(serviceImpl.ListOrgMemberRoles));
      serviceBinder.AddMethod(__Method_ListOrgMembers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListOrgMembersRequest, global::Zitadel.Management.V1.ListOrgMembersResponse>(serviceImpl.ListOrgMembers));
      serviceBinder.AddMethod(__Method_AddOrgMember, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddOrgMemberRequest, global::Zitadel.Management.V1.AddOrgMemberResponse>(serviceImpl.AddOrgMember));
      serviceBinder.AddMethod(__Method_UpdateOrgMember, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateOrgMemberRequest, global::Zitadel.Management.V1.UpdateOrgMemberResponse>(serviceImpl.UpdateOrgMember));
      serviceBinder.AddMethod(__Method_RemoveOrgMember, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveOrgMemberRequest, global::Zitadel.Management.V1.RemoveOrgMemberResponse>(serviceImpl.RemoveOrgMember));
      serviceBinder.AddMethod(__Method_GetProjectByID, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetProjectByIDRequest, global::Zitadel.Management.V1.GetProjectByIDResponse>(serviceImpl.GetProjectByID));
      serviceBinder.AddMethod(__Method_GetGrantedProjectByID, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetGrantedProjectByIDRequest, global::Zitadel.Management.V1.GetGrantedProjectByIDResponse>(serviceImpl.GetGrantedProjectByID));
      serviceBinder.AddMethod(__Method_ListProjects, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListProjectsRequest, global::Zitadel.Management.V1.ListProjectsResponse>(serviceImpl.ListProjects));
      serviceBinder.AddMethod(__Method_ListGrantedProjects, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListGrantedProjectsRequest, global::Zitadel.Management.V1.ListGrantedProjectsResponse>(serviceImpl.ListGrantedProjects));
      serviceBinder.AddMethod(__Method_ListGrantedProjectRoles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListGrantedProjectRolesRequest, global::Zitadel.Management.V1.ListGrantedProjectRolesResponse>(serviceImpl.ListGrantedProjectRoles));
      serviceBinder.AddMethod(__Method_ListProjectChanges, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListProjectChangesRequest, global::Zitadel.Management.V1.ListProjectChangesResponse>(serviceImpl.ListProjectChanges));
      serviceBinder.AddMethod(__Method_AddProject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddProjectRequest, global::Zitadel.Management.V1.AddProjectResponse>(serviceImpl.AddProject));
      serviceBinder.AddMethod(__Method_UpdateProject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateProjectRequest, global::Zitadel.Management.V1.UpdateProjectResponse>(serviceImpl.UpdateProject));
      serviceBinder.AddMethod(__Method_DeactivateProject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.DeactivateProjectRequest, global::Zitadel.Management.V1.DeactivateProjectResponse>(serviceImpl.DeactivateProject));
      serviceBinder.AddMethod(__Method_ReactivateProject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ReactivateProjectRequest, global::Zitadel.Management.V1.ReactivateProjectResponse>(serviceImpl.ReactivateProject));
      serviceBinder.AddMethod(__Method_RemoveProject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveProjectRequest, global::Zitadel.Management.V1.RemoveProjectResponse>(serviceImpl.RemoveProject));
      serviceBinder.AddMethod(__Method_ListProjectRoles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListProjectRolesRequest, global::Zitadel.Management.V1.ListProjectRolesResponse>(serviceImpl.ListProjectRoles));
      serviceBinder.AddMethod(__Method_AddProjectRole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddProjectRoleRequest, global::Zitadel.Management.V1.AddProjectRoleResponse>(serviceImpl.AddProjectRole));
      serviceBinder.AddMethod(__Method_BulkAddProjectRoles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.BulkAddProjectRolesRequest, global::Zitadel.Management.V1.BulkAddProjectRolesResponse>(serviceImpl.BulkAddProjectRoles));
      serviceBinder.AddMethod(__Method_UpdateProjectRole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateProjectRoleRequest, global::Zitadel.Management.V1.UpdateProjectRoleResponse>(serviceImpl.UpdateProjectRole));
      serviceBinder.AddMethod(__Method_RemoveProjectRole, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveProjectRoleRequest, global::Zitadel.Management.V1.RemoveProjectRoleResponse>(serviceImpl.RemoveProjectRole));
      serviceBinder.AddMethod(__Method_ListProjectMemberRoles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListProjectMemberRolesRequest, global::Zitadel.Management.V1.ListProjectMemberRolesResponse>(serviceImpl.ListProjectMemberRoles));
      serviceBinder.AddMethod(__Method_ListProjectMembers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListProjectMembersRequest, global::Zitadel.Management.V1.ListProjectMembersResponse>(serviceImpl.ListProjectMembers));
      serviceBinder.AddMethod(__Method_AddProjectMember, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddProjectMemberRequest, global::Zitadel.Management.V1.AddProjectMemberResponse>(serviceImpl.AddProjectMember));
      serviceBinder.AddMethod(__Method_UpdateProjectMember, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateProjectMemberRequest, global::Zitadel.Management.V1.UpdateProjectMemberResponse>(serviceImpl.UpdateProjectMember));
      serviceBinder.AddMethod(__Method_RemoveProjectMember, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveProjectMemberRequest, global::Zitadel.Management.V1.RemoveProjectMemberResponse>(serviceImpl.RemoveProjectMember));
      serviceBinder.AddMethod(__Method_GetAppByID, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetAppByIDRequest, global::Zitadel.Management.V1.GetAppByIDResponse>(serviceImpl.GetAppByID));
      serviceBinder.AddMethod(__Method_ListApps, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListAppsRequest, global::Zitadel.Management.V1.ListAppsResponse>(serviceImpl.ListApps));
      serviceBinder.AddMethod(__Method_ListAppChanges, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListAppChangesRequest, global::Zitadel.Management.V1.ListAppChangesResponse>(serviceImpl.ListAppChanges));
      serviceBinder.AddMethod(__Method_AddOIDCApp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddOIDCAppRequest, global::Zitadel.Management.V1.AddOIDCAppResponse>(serviceImpl.AddOIDCApp));
      serviceBinder.AddMethod(__Method_AddSAMLApp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddSAMLAppRequest, global::Zitadel.Management.V1.AddSAMLAppResponse>(serviceImpl.AddSAMLApp));
      serviceBinder.AddMethod(__Method_AddAPIApp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddAPIAppRequest, global::Zitadel.Management.V1.AddAPIAppResponse>(serviceImpl.AddAPIApp));
      serviceBinder.AddMethod(__Method_UpdateApp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateAppRequest, global::Zitadel.Management.V1.UpdateAppResponse>(serviceImpl.UpdateApp));
      serviceBinder.AddMethod(__Method_UpdateOIDCAppConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateOIDCAppConfigRequest, global::Zitadel.Management.V1.UpdateOIDCAppConfigResponse>(serviceImpl.UpdateOIDCAppConfig));
      serviceBinder.AddMethod(__Method_UpdateSAMLAppConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateSAMLAppConfigRequest, global::Zitadel.Management.V1.UpdateSAMLAppConfigResponse>(serviceImpl.UpdateSAMLAppConfig));
      serviceBinder.AddMethod(__Method_UpdateAPIAppConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateAPIAppConfigRequest, global::Zitadel.Management.V1.UpdateAPIAppConfigResponse>(serviceImpl.UpdateAPIAppConfig));
      serviceBinder.AddMethod(__Method_DeactivateApp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.DeactivateAppRequest, global::Zitadel.Management.V1.DeactivateAppResponse>(serviceImpl.DeactivateApp));
      serviceBinder.AddMethod(__Method_ReactivateApp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ReactivateAppRequest, global::Zitadel.Management.V1.ReactivateAppResponse>(serviceImpl.ReactivateApp));
      serviceBinder.AddMethod(__Method_RemoveApp, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveAppRequest, global::Zitadel.Management.V1.RemoveAppResponse>(serviceImpl.RemoveApp));
      serviceBinder.AddMethod(__Method_RegenerateOIDCClientSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RegenerateOIDCClientSecretRequest, global::Zitadel.Management.V1.RegenerateOIDCClientSecretResponse>(serviceImpl.RegenerateOIDCClientSecret));
      serviceBinder.AddMethod(__Method_RegenerateAPIClientSecret, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RegenerateAPIClientSecretRequest, global::Zitadel.Management.V1.RegenerateAPIClientSecretResponse>(serviceImpl.RegenerateAPIClientSecret));
      serviceBinder.AddMethod(__Method_GetAppKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetAppKeyRequest, global::Zitadel.Management.V1.GetAppKeyResponse>(serviceImpl.GetAppKey));
      serviceBinder.AddMethod(__Method_ListAppKeys, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListAppKeysRequest, global::Zitadel.Management.V1.ListAppKeysResponse>(serviceImpl.ListAppKeys));
      serviceBinder.AddMethod(__Method_AddAppKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddAppKeyRequest, global::Zitadel.Management.V1.AddAppKeyResponse>(serviceImpl.AddAppKey));
      serviceBinder.AddMethod(__Method_RemoveAppKey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveAppKeyRequest, global::Zitadel.Management.V1.RemoveAppKeyResponse>(serviceImpl.RemoveAppKey));
      serviceBinder.AddMethod(__Method_ListProjectGrantChanges, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListProjectGrantChangesRequest, global::Zitadel.Management.V1.ListProjectGrantChangesResponse>(serviceImpl.ListProjectGrantChanges));
      serviceBinder.AddMethod(__Method_GetProjectGrantByID, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetProjectGrantByIDRequest, global::Zitadel.Management.V1.GetProjectGrantByIDResponse>(serviceImpl.GetProjectGrantByID));
      serviceBinder.AddMethod(__Method_ListProjectGrants, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListProjectGrantsRequest, global::Zitadel.Management.V1.ListProjectGrantsResponse>(serviceImpl.ListProjectGrants));
      serviceBinder.AddMethod(__Method_ListAllProjectGrants, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListAllProjectGrantsRequest, global::Zitadel.Management.V1.ListAllProjectGrantsResponse>(serviceImpl.ListAllProjectGrants));
      serviceBinder.AddMethod(__Method_AddProjectGrant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddProjectGrantRequest, global::Zitadel.Management.V1.AddProjectGrantResponse>(serviceImpl.AddProjectGrant));
      serviceBinder.AddMethod(__Method_UpdateProjectGrant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateProjectGrantRequest, global::Zitadel.Management.V1.UpdateProjectGrantResponse>(serviceImpl.UpdateProjectGrant));
      serviceBinder.AddMethod(__Method_DeactivateProjectGrant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.DeactivateProjectGrantRequest, global::Zitadel.Management.V1.DeactivateProjectGrantResponse>(serviceImpl.DeactivateProjectGrant));
      serviceBinder.AddMethod(__Method_ReactivateProjectGrant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ReactivateProjectGrantRequest, global::Zitadel.Management.V1.ReactivateProjectGrantResponse>(serviceImpl.ReactivateProjectGrant));
      serviceBinder.AddMethod(__Method_RemoveProjectGrant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveProjectGrantRequest, global::Zitadel.Management.V1.RemoveProjectGrantResponse>(serviceImpl.RemoveProjectGrant));
      serviceBinder.AddMethod(__Method_ListProjectGrantMemberRoles, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListProjectGrantMemberRolesRequest, global::Zitadel.Management.V1.ListProjectGrantMemberRolesResponse>(serviceImpl.ListProjectGrantMemberRoles));
      serviceBinder.AddMethod(__Method_ListProjectGrantMembers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListProjectGrantMembersRequest, global::Zitadel.Management.V1.ListProjectGrantMembersResponse>(serviceImpl.ListProjectGrantMembers));
      serviceBinder.AddMethod(__Method_AddProjectGrantMember, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddProjectGrantMemberRequest, global::Zitadel.Management.V1.AddProjectGrantMemberResponse>(serviceImpl.AddProjectGrantMember));
      serviceBinder.AddMethod(__Method_UpdateProjectGrantMember, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateProjectGrantMemberRequest, global::Zitadel.Management.V1.UpdateProjectGrantMemberResponse>(serviceImpl.UpdateProjectGrantMember));
      serviceBinder.AddMethod(__Method_RemoveProjectGrantMember, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveProjectGrantMemberRequest, global::Zitadel.Management.V1.RemoveProjectGrantMemberResponse>(serviceImpl.RemoveProjectGrantMember));
      serviceBinder.AddMethod(__Method_GetUserGrantByID, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetUserGrantByIDRequest, global::Zitadel.Management.V1.GetUserGrantByIDResponse>(serviceImpl.GetUserGrantByID));
      serviceBinder.AddMethod(__Method_ListUserGrants, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListUserGrantRequest, global::Zitadel.Management.V1.ListUserGrantResponse>(serviceImpl.ListUserGrants));
      serviceBinder.AddMethod(__Method_AddUserGrant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddUserGrantRequest, global::Zitadel.Management.V1.AddUserGrantResponse>(serviceImpl.AddUserGrant));
      serviceBinder.AddMethod(__Method_UpdateUserGrant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateUserGrantRequest, global::Zitadel.Management.V1.UpdateUserGrantResponse>(serviceImpl.UpdateUserGrant));
      serviceBinder.AddMethod(__Method_DeactivateUserGrant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.DeactivateUserGrantRequest, global::Zitadel.Management.V1.DeactivateUserGrantResponse>(serviceImpl.DeactivateUserGrant));
      serviceBinder.AddMethod(__Method_ReactivateUserGrant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ReactivateUserGrantRequest, global::Zitadel.Management.V1.ReactivateUserGrantResponse>(serviceImpl.ReactivateUserGrant));
      serviceBinder.AddMethod(__Method_RemoveUserGrant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveUserGrantRequest, global::Zitadel.Management.V1.RemoveUserGrantResponse>(serviceImpl.RemoveUserGrant));
      serviceBinder.AddMethod(__Method_BulkRemoveUserGrant, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.BulkRemoveUserGrantRequest, global::Zitadel.Management.V1.BulkRemoveUserGrantResponse>(serviceImpl.BulkRemoveUserGrant));
      serviceBinder.AddMethod(__Method_GetOrgIAMPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetOrgIAMPolicyRequest, global::Zitadel.Management.V1.GetOrgIAMPolicyResponse>(serviceImpl.GetOrgIAMPolicy));
      serviceBinder.AddMethod(__Method_GetDomainPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDomainPolicyRequest, global::Zitadel.Management.V1.GetDomainPolicyResponse>(serviceImpl.GetDomainPolicy));
      serviceBinder.AddMethod(__Method_GetLoginPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetLoginPolicyRequest, global::Zitadel.Management.V1.GetLoginPolicyResponse>(serviceImpl.GetLoginPolicy));
      serviceBinder.AddMethod(__Method_GetDefaultLoginPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDefaultLoginPolicyRequest, global::Zitadel.Management.V1.GetDefaultLoginPolicyResponse>(serviceImpl.GetDefaultLoginPolicy));
      serviceBinder.AddMethod(__Method_AddCustomLoginPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddCustomLoginPolicyRequest, global::Zitadel.Management.V1.AddCustomLoginPolicyResponse>(serviceImpl.AddCustomLoginPolicy));
      serviceBinder.AddMethod(__Method_UpdateCustomLoginPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateCustomLoginPolicyRequest, global::Zitadel.Management.V1.UpdateCustomLoginPolicyResponse>(serviceImpl.UpdateCustomLoginPolicy));
      serviceBinder.AddMethod(__Method_ResetLoginPolicyToDefault, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResetLoginPolicyToDefaultRequest, global::Zitadel.Management.V1.ResetLoginPolicyToDefaultResponse>(serviceImpl.ResetLoginPolicyToDefault));
      serviceBinder.AddMethod(__Method_ListLoginPolicyIDPs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListLoginPolicyIDPsRequest, global::Zitadel.Management.V1.ListLoginPolicyIDPsResponse>(serviceImpl.ListLoginPolicyIDPs));
      serviceBinder.AddMethod(__Method_AddIDPToLoginPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddIDPToLoginPolicyRequest, global::Zitadel.Management.V1.AddIDPToLoginPolicyResponse>(serviceImpl.AddIDPToLoginPolicy));
      serviceBinder.AddMethod(__Method_RemoveIDPFromLoginPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyRequest, global::Zitadel.Management.V1.RemoveIDPFromLoginPolicyResponse>(serviceImpl.RemoveIDPFromLoginPolicy));
      serviceBinder.AddMethod(__Method_ListLoginPolicySecondFactors, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListLoginPolicySecondFactorsRequest, global::Zitadel.Management.V1.ListLoginPolicySecondFactorsResponse>(serviceImpl.ListLoginPolicySecondFactors));
      serviceBinder.AddMethod(__Method_AddSecondFactorToLoginPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyRequest, global::Zitadel.Management.V1.AddSecondFactorToLoginPolicyResponse>(serviceImpl.AddSecondFactorToLoginPolicy));
      serviceBinder.AddMethod(__Method_RemoveSecondFactorFromLoginPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyRequest, global::Zitadel.Management.V1.RemoveSecondFactorFromLoginPolicyResponse>(serviceImpl.RemoveSecondFactorFromLoginPolicy));
      serviceBinder.AddMethod(__Method_ListLoginPolicyMultiFactors, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsRequest, global::Zitadel.Management.V1.ListLoginPolicyMultiFactorsResponse>(serviceImpl.ListLoginPolicyMultiFactors));
      serviceBinder.AddMethod(__Method_AddMultiFactorToLoginPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyRequest, global::Zitadel.Management.V1.AddMultiFactorToLoginPolicyResponse>(serviceImpl.AddMultiFactorToLoginPolicy));
      serviceBinder.AddMethod(__Method_RemoveMultiFactorFromLoginPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyRequest, global::Zitadel.Management.V1.RemoveMultiFactorFromLoginPolicyResponse>(serviceImpl.RemoveMultiFactorFromLoginPolicy));
      serviceBinder.AddMethod(__Method_GetPasswordComplexityPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetPasswordComplexityPolicyRequest, global::Zitadel.Management.V1.GetPasswordComplexityPolicyResponse>(serviceImpl.GetPasswordComplexityPolicy));
      serviceBinder.AddMethod(__Method_GetDefaultPasswordComplexityPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyRequest, global::Zitadel.Management.V1.GetDefaultPasswordComplexityPolicyResponse>(serviceImpl.GetDefaultPasswordComplexityPolicy));
      serviceBinder.AddMethod(__Method_AddCustomPasswordComplexityPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyRequest, global::Zitadel.Management.V1.AddCustomPasswordComplexityPolicyResponse>(serviceImpl.AddCustomPasswordComplexityPolicy));
      serviceBinder.AddMethod(__Method_UpdateCustomPasswordComplexityPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyRequest, global::Zitadel.Management.V1.UpdateCustomPasswordComplexityPolicyResponse>(serviceImpl.UpdateCustomPasswordComplexityPolicy));
      serviceBinder.AddMethod(__Method_ResetPasswordComplexityPolicyToDefault, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultRequest, global::Zitadel.Management.V1.ResetPasswordComplexityPolicyToDefaultResponse>(serviceImpl.ResetPasswordComplexityPolicyToDefault));
      serviceBinder.AddMethod(__Method_GetPasswordAgePolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetPasswordAgePolicyRequest, global::Zitadel.Management.V1.GetPasswordAgePolicyResponse>(serviceImpl.GetPasswordAgePolicy));
      serviceBinder.AddMethod(__Method_GetDefaultPasswordAgePolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyRequest, global::Zitadel.Management.V1.GetDefaultPasswordAgePolicyResponse>(serviceImpl.GetDefaultPasswordAgePolicy));
      serviceBinder.AddMethod(__Method_AddCustomPasswordAgePolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddCustomPasswordAgePolicyRequest, global::Zitadel.Management.V1.AddCustomPasswordAgePolicyResponse>(serviceImpl.AddCustomPasswordAgePolicy));
      serviceBinder.AddMethod(__Method_UpdateCustomPasswordAgePolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyRequest, global::Zitadel.Management.V1.UpdateCustomPasswordAgePolicyResponse>(serviceImpl.UpdateCustomPasswordAgePolicy));
      serviceBinder.AddMethod(__Method_ResetPasswordAgePolicyToDefault, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultRequest, global::Zitadel.Management.V1.ResetPasswordAgePolicyToDefaultResponse>(serviceImpl.ResetPasswordAgePolicyToDefault));
      serviceBinder.AddMethod(__Method_GetLockoutPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetLockoutPolicyRequest, global::Zitadel.Management.V1.GetLockoutPolicyResponse>(serviceImpl.GetLockoutPolicy));
      serviceBinder.AddMethod(__Method_GetDefaultLockoutPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDefaultLockoutPolicyRequest, global::Zitadel.Management.V1.GetDefaultLockoutPolicyResponse>(serviceImpl.GetDefaultLockoutPolicy));
      serviceBinder.AddMethod(__Method_AddCustomLockoutPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddCustomLockoutPolicyRequest, global::Zitadel.Management.V1.AddCustomLockoutPolicyResponse>(serviceImpl.AddCustomLockoutPolicy));
      serviceBinder.AddMethod(__Method_UpdateCustomLockoutPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateCustomLockoutPolicyRequest, global::Zitadel.Management.V1.UpdateCustomLockoutPolicyResponse>(serviceImpl.UpdateCustomLockoutPolicy));
      serviceBinder.AddMethod(__Method_ResetLockoutPolicyToDefault, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultRequest, global::Zitadel.Management.V1.ResetLockoutPolicyToDefaultResponse>(serviceImpl.ResetLockoutPolicyToDefault));
      serviceBinder.AddMethod(__Method_GetPrivacyPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetPrivacyPolicyRequest, global::Zitadel.Management.V1.GetPrivacyPolicyResponse>(serviceImpl.GetPrivacyPolicy));
      serviceBinder.AddMethod(__Method_GetDefaultPrivacyPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDefaultPrivacyPolicyRequest, global::Zitadel.Management.V1.GetDefaultPrivacyPolicyResponse>(serviceImpl.GetDefaultPrivacyPolicy));
      serviceBinder.AddMethod(__Method_AddCustomPrivacyPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddCustomPrivacyPolicyRequest, global::Zitadel.Management.V1.AddCustomPrivacyPolicyResponse>(serviceImpl.AddCustomPrivacyPolicy));
      serviceBinder.AddMethod(__Method_UpdateCustomPrivacyPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyRequest, global::Zitadel.Management.V1.UpdateCustomPrivacyPolicyResponse>(serviceImpl.UpdateCustomPrivacyPolicy));
      serviceBinder.AddMethod(__Method_ResetPrivacyPolicyToDefault, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultRequest, global::Zitadel.Management.V1.ResetPrivacyPolicyToDefaultResponse>(serviceImpl.ResetPrivacyPolicyToDefault));
      serviceBinder.AddMethod(__Method_GetNotificationPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetNotificationPolicyRequest, global::Zitadel.Management.V1.GetNotificationPolicyResponse>(serviceImpl.GetNotificationPolicy));
      serviceBinder.AddMethod(__Method_GetDefaultNotificationPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDefaultNotificationPolicyRequest, global::Zitadel.Management.V1.GetDefaultNotificationPolicyResponse>(serviceImpl.GetDefaultNotificationPolicy));
      serviceBinder.AddMethod(__Method_AddCustomNotificationPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddCustomNotificationPolicyRequest, global::Zitadel.Management.V1.AddCustomNotificationPolicyResponse>(serviceImpl.AddCustomNotificationPolicy));
      serviceBinder.AddMethod(__Method_UpdateCustomNotificationPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateCustomNotificationPolicyRequest, global::Zitadel.Management.V1.UpdateCustomNotificationPolicyResponse>(serviceImpl.UpdateCustomNotificationPolicy));
      serviceBinder.AddMethod(__Method_ResetNotificationPolicyToDefault, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultRequest, global::Zitadel.Management.V1.ResetNotificationPolicyToDefaultResponse>(serviceImpl.ResetNotificationPolicyToDefault));
      serviceBinder.AddMethod(__Method_GetLabelPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetLabelPolicyRequest, global::Zitadel.Management.V1.GetLabelPolicyResponse>(serviceImpl.GetLabelPolicy));
      serviceBinder.AddMethod(__Method_GetPreviewLabelPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetPreviewLabelPolicyRequest, global::Zitadel.Management.V1.GetPreviewLabelPolicyResponse>(serviceImpl.GetPreviewLabelPolicy));
      serviceBinder.AddMethod(__Method_GetDefaultLabelPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDefaultLabelPolicyRequest, global::Zitadel.Management.V1.GetDefaultLabelPolicyResponse>(serviceImpl.GetDefaultLabelPolicy));
      serviceBinder.AddMethod(__Method_AddCustomLabelPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddCustomLabelPolicyRequest, global::Zitadel.Management.V1.AddCustomLabelPolicyResponse>(serviceImpl.AddCustomLabelPolicy));
      serviceBinder.AddMethod(__Method_UpdateCustomLabelPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateCustomLabelPolicyRequest, global::Zitadel.Management.V1.UpdateCustomLabelPolicyResponse>(serviceImpl.UpdateCustomLabelPolicy));
      serviceBinder.AddMethod(__Method_ActivateCustomLabelPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ActivateCustomLabelPolicyRequest, global::Zitadel.Management.V1.ActivateCustomLabelPolicyResponse>(serviceImpl.ActivateCustomLabelPolicy));
      serviceBinder.AddMethod(__Method_RemoveCustomLabelPolicyLogo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoRequest, global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoResponse>(serviceImpl.RemoveCustomLabelPolicyLogo));
      serviceBinder.AddMethod(__Method_RemoveCustomLabelPolicyLogoDark, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkRequest, global::Zitadel.Management.V1.RemoveCustomLabelPolicyLogoDarkResponse>(serviceImpl.RemoveCustomLabelPolicyLogoDark));
      serviceBinder.AddMethod(__Method_RemoveCustomLabelPolicyIcon, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconRequest, global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconResponse>(serviceImpl.RemoveCustomLabelPolicyIcon));
      serviceBinder.AddMethod(__Method_RemoveCustomLabelPolicyIconDark, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkRequest, global::Zitadel.Management.V1.RemoveCustomLabelPolicyIconDarkResponse>(serviceImpl.RemoveCustomLabelPolicyIconDark));
      serviceBinder.AddMethod(__Method_RemoveCustomLabelPolicyFont, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontRequest, global::Zitadel.Management.V1.RemoveCustomLabelPolicyFontResponse>(serviceImpl.RemoveCustomLabelPolicyFont));
      serviceBinder.AddMethod(__Method_ResetLabelPolicyToDefault, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResetLabelPolicyToDefaultRequest, global::Zitadel.Management.V1.ResetLabelPolicyToDefaultResponse>(serviceImpl.ResetLabelPolicyToDefault));
      serviceBinder.AddMethod(__Method_GetCustomInitMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetCustomInitMessageTextRequest, global::Zitadel.Management.V1.GetCustomInitMessageTextResponse>(serviceImpl.GetCustomInitMessageText));
      serviceBinder.AddMethod(__Method_GetDefaultInitMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDefaultInitMessageTextRequest, global::Zitadel.Management.V1.GetDefaultInitMessageTextResponse>(serviceImpl.GetDefaultInitMessageText));
      serviceBinder.AddMethod(__Method_SetCustomInitMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SetCustomInitMessageTextRequest, global::Zitadel.Management.V1.SetCustomInitMessageTextResponse>(serviceImpl.SetCustomInitMessageText));
      serviceBinder.AddMethod(__Method_ResetCustomInitMessageTextToDefault, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomInitMessageTextToDefaultResponse>(serviceImpl.ResetCustomInitMessageTextToDefault));
      serviceBinder.AddMethod(__Method_GetCustomPasswordResetMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextRequest, global::Zitadel.Management.V1.GetCustomPasswordResetMessageTextResponse>(serviceImpl.GetCustomPasswordResetMessageText));
      serviceBinder.AddMethod(__Method_GetDefaultPasswordResetMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextRequest, global::Zitadel.Management.V1.GetDefaultPasswordResetMessageTextResponse>(serviceImpl.GetDefaultPasswordResetMessageText));
      serviceBinder.AddMethod(__Method_SetCustomPasswordResetMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextRequest, global::Zitadel.Management.V1.SetCustomPasswordResetMessageTextResponse>(serviceImpl.SetCustomPasswordResetMessageText));
      serviceBinder.AddMethod(__Method_ResetCustomPasswordResetMessageTextToDefault, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomPasswordResetMessageTextToDefaultResponse>(serviceImpl.ResetCustomPasswordResetMessageTextToDefault));
      serviceBinder.AddMethod(__Method_GetCustomVerifyEmailMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextRequest, global::Zitadel.Management.V1.GetCustomVerifyEmailMessageTextResponse>(serviceImpl.GetCustomVerifyEmailMessageText));
      serviceBinder.AddMethod(__Method_GetDefaultVerifyEmailMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextRequest, global::Zitadel.Management.V1.GetDefaultVerifyEmailMessageTextResponse>(serviceImpl.GetDefaultVerifyEmailMessageText));
      serviceBinder.AddMethod(__Method_SetCustomVerifyEmailMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextRequest, global::Zitadel.Management.V1.SetCustomVerifyEmailMessageTextResponse>(serviceImpl.SetCustomVerifyEmailMessageText));
      serviceBinder.AddMethod(__Method_ResetCustomVerifyEmailMessageTextToDefault, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomVerifyEmailMessageTextToDefaultResponse>(serviceImpl.ResetCustomVerifyEmailMessageTextToDefault));
      serviceBinder.AddMethod(__Method_GetCustomVerifyPhoneMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextRequest, global::Zitadel.Management.V1.GetCustomVerifyPhoneMessageTextResponse>(serviceImpl.GetCustomVerifyPhoneMessageText));
      serviceBinder.AddMethod(__Method_GetDefaultVerifyPhoneMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextRequest, global::Zitadel.Management.V1.GetDefaultVerifyPhoneMessageTextResponse>(serviceImpl.GetDefaultVerifyPhoneMessageText));
      serviceBinder.AddMethod(__Method_SetCustomVerifyPhoneMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextRequest, global::Zitadel.Management.V1.SetCustomVerifyPhoneMessageTextResponse>(serviceImpl.SetCustomVerifyPhoneMessageText));
      serviceBinder.AddMethod(__Method_ResetCustomVerifyPhoneMessageTextToDefault, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomVerifyPhoneMessageTextToDefaultResponse>(serviceImpl.ResetCustomVerifyPhoneMessageTextToDefault));
      serviceBinder.AddMethod(__Method_GetCustomVerifySMSOTPMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextRequest, global::Zitadel.Management.V1.GetCustomVerifySMSOTPMessageTextResponse>(serviceImpl.GetCustomVerifySMSOTPMessageText));
      serviceBinder.AddMethod(__Method_GetDefaultVerifySMSOTPMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextRequest, global::Zitadel.Management.V1.GetDefaultVerifySMSOTPMessageTextResponse>(serviceImpl.GetDefaultVerifySMSOTPMessageText));
      serviceBinder.AddMethod(__Method_SetCustomVerifySMSOTPMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextRequest, global::Zitadel.Management.V1.SetCustomVerifySMSOTPMessageTextResponse>(serviceImpl.SetCustomVerifySMSOTPMessageText));
      serviceBinder.AddMethod(__Method_ResetCustomVerifySMSOTPMessageTextToDefault, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomVerifySMSOTPMessageTextToDefaultResponse>(serviceImpl.ResetCustomVerifySMSOTPMessageTextToDefault));
      serviceBinder.AddMethod(__Method_GetCustomVerifyEmailOTPMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextRequest, global::Zitadel.Management.V1.GetCustomVerifyEmailOTPMessageTextResponse>(serviceImpl.GetCustomVerifyEmailOTPMessageText));
      serviceBinder.AddMethod(__Method_GetDefaultVerifyEmailOTPMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextRequest, global::Zitadel.Management.V1.GetDefaultVerifyEmailOTPMessageTextResponse>(serviceImpl.GetDefaultVerifyEmailOTPMessageText));
      serviceBinder.AddMethod(__Method_SetCustomVerifyEmailOTPMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextRequest, global::Zitadel.Management.V1.SetCustomVerifyEmailOTPMessageTextResponse>(serviceImpl.SetCustomVerifyEmailOTPMessageText));
      serviceBinder.AddMethod(__Method_ResetCustomVerifyEmailOTPMessageTextToDefault, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomVerifyEmailOTPMessageTextToDefaultResponse>(serviceImpl.ResetCustomVerifyEmailOTPMessageTextToDefault));
      serviceBinder.AddMethod(__Method_GetCustomDomainClaimedMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextRequest, global::Zitadel.Management.V1.GetCustomDomainClaimedMessageTextResponse>(serviceImpl.GetCustomDomainClaimedMessageText));
      serviceBinder.AddMethod(__Method_GetDefaultDomainClaimedMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextRequest, global::Zitadel.Management.V1.GetDefaultDomainClaimedMessageTextResponse>(serviceImpl.GetDefaultDomainClaimedMessageText));
      serviceBinder.AddMethod(__Method_SetCustomDomainClaimedMessageCustomText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextRequest, global::Zitadel.Management.V1.SetCustomDomainClaimedMessageTextResponse>(serviceImpl.SetCustomDomainClaimedMessageCustomText));
      serviceBinder.AddMethod(__Method_ResetCustomDomainClaimedMessageTextToDefault, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomDomainClaimedMessageTextToDefaultResponse>(serviceImpl.ResetCustomDomainClaimedMessageTextToDefault));
      serviceBinder.AddMethod(__Method_GetCustomPasswordlessRegistrationMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextRequest, global::Zitadel.Management.V1.GetCustomPasswordlessRegistrationMessageTextResponse>(serviceImpl.GetCustomPasswordlessRegistrationMessageText));
      serviceBinder.AddMethod(__Method_GetDefaultPasswordlessRegistrationMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextRequest, global::Zitadel.Management.V1.GetDefaultPasswordlessRegistrationMessageTextResponse>(serviceImpl.GetDefaultPasswordlessRegistrationMessageText));
      serviceBinder.AddMethod(__Method_SetCustomPasswordlessRegistrationMessageCustomText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextRequest, global::Zitadel.Management.V1.SetCustomPasswordlessRegistrationMessageTextResponse>(serviceImpl.SetCustomPasswordlessRegistrationMessageCustomText));
      serviceBinder.AddMethod(__Method_ResetCustomPasswordlessRegistrationMessageTextToDefault, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse>(serviceImpl.ResetCustomPasswordlessRegistrationMessageTextToDefault));
      serviceBinder.AddMethod(__Method_GetCustomPasswordChangeMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextRequest, global::Zitadel.Management.V1.GetCustomPasswordChangeMessageTextResponse>(serviceImpl.GetCustomPasswordChangeMessageText));
      serviceBinder.AddMethod(__Method_GetDefaultPasswordChangeMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextRequest, global::Zitadel.Management.V1.GetDefaultPasswordChangeMessageTextResponse>(serviceImpl.GetDefaultPasswordChangeMessageText));
      serviceBinder.AddMethod(__Method_SetCustomPasswordChangeMessageCustomText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextRequest, global::Zitadel.Management.V1.SetCustomPasswordChangeMessageTextResponse>(serviceImpl.SetCustomPasswordChangeMessageCustomText));
      serviceBinder.AddMethod(__Method_ResetCustomPasswordChangeMessageTextToDefault, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomPasswordChangeMessageTextToDefaultResponse>(serviceImpl.ResetCustomPasswordChangeMessageTextToDefault));
      serviceBinder.AddMethod(__Method_GetCustomInviteUserMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetCustomInviteUserMessageTextRequest, global::Zitadel.Management.V1.GetCustomInviteUserMessageTextResponse>(serviceImpl.GetCustomInviteUserMessageText));
      serviceBinder.AddMethod(__Method_GetDefaultInviteUserMessageText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextRequest, global::Zitadel.Management.V1.GetDefaultInviteUserMessageTextResponse>(serviceImpl.GetDefaultInviteUserMessageText));
      serviceBinder.AddMethod(__Method_SetCustomInviteUserMessageCustomText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SetCustomInviteUserMessageTextRequest, global::Zitadel.Management.V1.SetCustomInviteUserMessageTextResponse>(serviceImpl.SetCustomInviteUserMessageCustomText));
      serviceBinder.AddMethod(__Method_ResetCustomInviteUserMessageTextToDefault, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultRequest, global::Zitadel.Management.V1.ResetCustomInviteUserMessageTextToDefaultResponse>(serviceImpl.ResetCustomInviteUserMessageTextToDefault));
      serviceBinder.AddMethod(__Method_GetCustomLoginTexts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetCustomLoginTextsRequest, global::Zitadel.Management.V1.GetCustomLoginTextsResponse>(serviceImpl.GetCustomLoginTexts));
      serviceBinder.AddMethod(__Method_GetDefaultLoginTexts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetDefaultLoginTextsRequest, global::Zitadel.Management.V1.GetDefaultLoginTextsResponse>(serviceImpl.GetDefaultLoginTexts));
      serviceBinder.AddMethod(__Method_SetCustomLoginText, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SetCustomLoginTextsRequest, global::Zitadel.Management.V1.SetCustomLoginTextsResponse>(serviceImpl.SetCustomLoginText));
      serviceBinder.AddMethod(__Method_ResetCustomLoginTextToDefault, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultRequest, global::Zitadel.Management.V1.ResetCustomLoginTextsToDefaultResponse>(serviceImpl.ResetCustomLoginTextToDefault));
      serviceBinder.AddMethod(__Method_GetOrgIDPByID, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetOrgIDPByIDRequest, global::Zitadel.Management.V1.GetOrgIDPByIDResponse>(serviceImpl.GetOrgIDPByID));
      serviceBinder.AddMethod(__Method_ListOrgIDPs, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListOrgIDPsRequest, global::Zitadel.Management.V1.ListOrgIDPsResponse>(serviceImpl.ListOrgIDPs));
      serviceBinder.AddMethod(__Method_AddOrgOIDCIDP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddOrgOIDCIDPRequest, global::Zitadel.Management.V1.AddOrgOIDCIDPResponse>(serviceImpl.AddOrgOIDCIDP));
      serviceBinder.AddMethod(__Method_AddOrgJWTIDP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddOrgJWTIDPRequest, global::Zitadel.Management.V1.AddOrgJWTIDPResponse>(serviceImpl.AddOrgJWTIDP));
      serviceBinder.AddMethod(__Method_DeactivateOrgIDP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.DeactivateOrgIDPRequest, global::Zitadel.Management.V1.DeactivateOrgIDPResponse>(serviceImpl.DeactivateOrgIDP));
      serviceBinder.AddMethod(__Method_ReactivateOrgIDP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ReactivateOrgIDPRequest, global::Zitadel.Management.V1.ReactivateOrgIDPResponse>(serviceImpl.ReactivateOrgIDP));
      serviceBinder.AddMethod(__Method_RemoveOrgIDP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RemoveOrgIDPRequest, global::Zitadel.Management.V1.RemoveOrgIDPResponse>(serviceImpl.RemoveOrgIDP));
      serviceBinder.AddMethod(__Method_UpdateOrgIDP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateOrgIDPRequest, global::Zitadel.Management.V1.UpdateOrgIDPResponse>(serviceImpl.UpdateOrgIDP));
      serviceBinder.AddMethod(__Method_UpdateOrgIDPOIDCConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigRequest, global::Zitadel.Management.V1.UpdateOrgIDPOIDCConfigResponse>(serviceImpl.UpdateOrgIDPOIDCConfig));
      serviceBinder.AddMethod(__Method_UpdateOrgIDPJWTConfig, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigRequest, global::Zitadel.Management.V1.UpdateOrgIDPJWTConfigResponse>(serviceImpl.UpdateOrgIDPJWTConfig));
      serviceBinder.AddMethod(__Method_ListProviders, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListProvidersRequest, global::Zitadel.Management.V1.ListProvidersResponse>(serviceImpl.ListProviders));
      serviceBinder.AddMethod(__Method_GetProviderByID, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetProviderByIDRequest, global::Zitadel.Management.V1.GetProviderByIDResponse>(serviceImpl.GetProviderByID));
      serviceBinder.AddMethod(__Method_AddGenericOAuthProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddGenericOAuthProviderRequest, global::Zitadel.Management.V1.AddGenericOAuthProviderResponse>(serviceImpl.AddGenericOAuthProvider));
      serviceBinder.AddMethod(__Method_UpdateGenericOAuthProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateGenericOAuthProviderRequest, global::Zitadel.Management.V1.UpdateGenericOAuthProviderResponse>(serviceImpl.UpdateGenericOAuthProvider));
      serviceBinder.AddMethod(__Method_AddGenericOIDCProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddGenericOIDCProviderRequest, global::Zitadel.Management.V1.AddGenericOIDCProviderResponse>(serviceImpl.AddGenericOIDCProvider));
      serviceBinder.AddMethod(__Method_UpdateGenericOIDCProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateGenericOIDCProviderRequest, global::Zitadel.Management.V1.UpdateGenericOIDCProviderResponse>(serviceImpl.UpdateGenericOIDCProvider));
      serviceBinder.AddMethod(__Method_MigrateGenericOIDCProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.MigrateGenericOIDCProviderRequest, global::Zitadel.Management.V1.MigrateGenericOIDCProviderResponse>(serviceImpl.MigrateGenericOIDCProvider));
      serviceBinder.AddMethod(__Method_AddJWTProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddJWTProviderRequest, global::Zitadel.Management.V1.AddJWTProviderResponse>(serviceImpl.AddJWTProvider));
      serviceBinder.AddMethod(__Method_UpdateJWTProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateJWTProviderRequest, global::Zitadel.Management.V1.UpdateJWTProviderResponse>(serviceImpl.UpdateJWTProvider));
      serviceBinder.AddMethod(__Method_AddAzureADProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddAzureADProviderRequest, global::Zitadel.Management.V1.AddAzureADProviderResponse>(serviceImpl.AddAzureADProvider));
      serviceBinder.AddMethod(__Method_UpdateAzureADProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateAzureADProviderRequest, global::Zitadel.Management.V1.UpdateAzureADProviderResponse>(serviceImpl.UpdateAzureADProvider));
      serviceBinder.AddMethod(__Method_AddGitHubProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddGitHubProviderRequest, global::Zitadel.Management.V1.AddGitHubProviderResponse>(serviceImpl.AddGitHubProvider));
      serviceBinder.AddMethod(__Method_UpdateGitHubProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateGitHubProviderRequest, global::Zitadel.Management.V1.UpdateGitHubProviderResponse>(serviceImpl.UpdateGitHubProvider));
      serviceBinder.AddMethod(__Method_AddGitHubEnterpriseServerProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderRequest, global::Zitadel.Management.V1.AddGitHubEnterpriseServerProviderResponse>(serviceImpl.AddGitHubEnterpriseServerProvider));
      serviceBinder.AddMethod(__Method_UpdateGitHubEnterpriseServerProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderRequest, global::Zitadel.Management.V1.UpdateGitHubEnterpriseServerProviderResponse>(serviceImpl.UpdateGitHubEnterpriseServerProvider));
      serviceBinder.AddMethod(__Method_AddGitLabProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddGitLabProviderRequest, global::Zitadel.Management.V1.AddGitLabProviderResponse>(serviceImpl.AddGitLabProvider));
      serviceBinder.AddMethod(__Method_UpdateGitLabProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateGitLabProviderRequest, global::Zitadel.Management.V1.UpdateGitLabProviderResponse>(serviceImpl.UpdateGitLabProvider));
      serviceBinder.AddMethod(__Method_AddGitLabSelfHostedProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddGitLabSelfHostedProviderRequest, global::Zitadel.Management.V1.AddGitLabSelfHostedProviderResponse>(serviceImpl.AddGitLabSelfHostedProvider));
      serviceBinder.AddMethod(__Method_UpdateGitLabSelfHostedProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderRequest, global::Zitadel.Management.V1.UpdateGitLabSelfHostedProviderResponse>(serviceImpl.UpdateGitLabSelfHostedProvider));
      serviceBinder.AddMethod(__Method_AddGoogleProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddGoogleProviderRequest, global::Zitadel.Management.V1.AddGoogleProviderResponse>(serviceImpl.AddGoogleProvider));
      serviceBinder.AddMethod(__Method_UpdateGoogleProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateGoogleProviderRequest, global::Zitadel.Management.V1.UpdateGoogleProviderResponse>(serviceImpl.UpdateGoogleProvider));
      serviceBinder.AddMethod(__Method_AddLDAPProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddLDAPProviderRequest, global::Zitadel.Management.V1.AddLDAPProviderResponse>(serviceImpl.AddLDAPProvider));
      serviceBinder.AddMethod(__Method_UpdateLDAPProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateLDAPProviderRequest, global::Zitadel.Management.V1.UpdateLDAPProviderResponse>(serviceImpl.UpdateLDAPProvider));
      serviceBinder.AddMethod(__Method_AddAppleProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddAppleProviderRequest, global::Zitadel.Management.V1.AddAppleProviderResponse>(serviceImpl.AddAppleProvider));
      serviceBinder.AddMethod(__Method_UpdateAppleProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateAppleProviderRequest, global::Zitadel.Management.V1.UpdateAppleProviderResponse>(serviceImpl.UpdateAppleProvider));
      serviceBinder.AddMethod(__Method_AddSAMLProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.AddSAMLProviderRequest, global::Zitadel.Management.V1.AddSAMLProviderResponse>(serviceImpl.AddSAMLProvider));
      serviceBinder.AddMethod(__Method_UpdateSAMLProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateSAMLProviderRequest, global::Zitadel.Management.V1.UpdateSAMLProviderResponse>(serviceImpl.UpdateSAMLProvider));
      serviceBinder.AddMethod(__Method_RegenerateSAMLProviderCertificate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateRequest, global::Zitadel.Management.V1.RegenerateSAMLProviderCertificateResponse>(serviceImpl.RegenerateSAMLProviderCertificate));
      serviceBinder.AddMethod(__Method_DeleteProvider, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.DeleteProviderRequest, global::Zitadel.Management.V1.DeleteProviderResponse>(serviceImpl.DeleteProvider));
      serviceBinder.AddMethod(__Method_ListActions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListActionsRequest, global::Zitadel.Management.V1.ListActionsResponse>(serviceImpl.ListActions));
      serviceBinder.AddMethod(__Method_GetAction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetActionRequest, global::Zitadel.Management.V1.GetActionResponse>(serviceImpl.GetAction));
      serviceBinder.AddMethod(__Method_CreateAction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.CreateActionRequest, global::Zitadel.Management.V1.CreateActionResponse>(serviceImpl.CreateAction));
      serviceBinder.AddMethod(__Method_UpdateAction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.UpdateActionRequest, global::Zitadel.Management.V1.UpdateActionResponse>(serviceImpl.UpdateAction));
      serviceBinder.AddMethod(__Method_DeactivateAction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.DeactivateActionRequest, global::Zitadel.Management.V1.DeactivateActionResponse>(serviceImpl.DeactivateAction));
      serviceBinder.AddMethod(__Method_ReactivateAction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ReactivateActionRequest, global::Zitadel.Management.V1.ReactivateActionResponse>(serviceImpl.ReactivateAction));
      serviceBinder.AddMethod(__Method_DeleteAction, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.DeleteActionRequest, global::Zitadel.Management.V1.DeleteActionResponse>(serviceImpl.DeleteAction));
      serviceBinder.AddMethod(__Method_ListFlowTypes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListFlowTypesRequest, global::Zitadel.Management.V1.ListFlowTypesResponse>(serviceImpl.ListFlowTypes));
      serviceBinder.AddMethod(__Method_ListFlowTriggerTypes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ListFlowTriggerTypesRequest, global::Zitadel.Management.V1.ListFlowTriggerTypesResponse>(serviceImpl.ListFlowTriggerTypes));
      serviceBinder.AddMethod(__Method_GetFlow, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.GetFlowRequest, global::Zitadel.Management.V1.GetFlowResponse>(serviceImpl.GetFlow));
      serviceBinder.AddMethod(__Method_ClearFlow, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.ClearFlowRequest, global::Zitadel.Management.V1.ClearFlowResponse>(serviceImpl.ClearFlow));
      serviceBinder.AddMethod(__Method_SetTriggerActions, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Management.V1.SetTriggerActionsRequest, global::Zitadel.Management.V1.SetTriggerActionsResponse>(serviceImpl.SetTriggerActions));
    }

  }
}
#endregion
