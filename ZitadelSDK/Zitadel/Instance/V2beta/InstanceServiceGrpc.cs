// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: zitadel/instance/v2beta/instance_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Zitadel.Instance.V2beta {
  /// <summary>
  /// Service to manage instances and their domains.
  /// The service provides methods to create, update, delete and list instances and their domains.
  /// </summary>
  public static partial class InstanceService
  {
    static readonly string __ServiceName = "zitadel.instance.v2beta.InstanceService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.DeleteInstanceRequest> __Marshaller_zitadel_instance_v2beta_DeleteInstanceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.DeleteInstanceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.DeleteInstanceResponse> __Marshaller_zitadel_instance_v2beta_DeleteInstanceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.DeleteInstanceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.GetInstanceRequest> __Marshaller_zitadel_instance_v2beta_GetInstanceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.GetInstanceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.GetInstanceResponse> __Marshaller_zitadel_instance_v2beta_GetInstanceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.GetInstanceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.UpdateInstanceRequest> __Marshaller_zitadel_instance_v2beta_UpdateInstanceRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.UpdateInstanceRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.UpdateInstanceResponse> __Marshaller_zitadel_instance_v2beta_UpdateInstanceResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.UpdateInstanceResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.ListInstancesRequest> __Marshaller_zitadel_instance_v2beta_ListInstancesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.ListInstancesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.ListInstancesResponse> __Marshaller_zitadel_instance_v2beta_ListInstancesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.ListInstancesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.AddCustomDomainRequest> __Marshaller_zitadel_instance_v2beta_AddCustomDomainRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.AddCustomDomainRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.AddCustomDomainResponse> __Marshaller_zitadel_instance_v2beta_AddCustomDomainResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.AddCustomDomainResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.RemoveCustomDomainRequest> __Marshaller_zitadel_instance_v2beta_RemoveCustomDomainRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.RemoveCustomDomainRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.RemoveCustomDomainResponse> __Marshaller_zitadel_instance_v2beta_RemoveCustomDomainResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.RemoveCustomDomainResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.ListCustomDomainsRequest> __Marshaller_zitadel_instance_v2beta_ListCustomDomainsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.ListCustomDomainsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.ListCustomDomainsResponse> __Marshaller_zitadel_instance_v2beta_ListCustomDomainsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.ListCustomDomainsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.AddTrustedDomainRequest> __Marshaller_zitadel_instance_v2beta_AddTrustedDomainRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.AddTrustedDomainRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.AddTrustedDomainResponse> __Marshaller_zitadel_instance_v2beta_AddTrustedDomainResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.AddTrustedDomainResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.RemoveTrustedDomainRequest> __Marshaller_zitadel_instance_v2beta_RemoveTrustedDomainRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.RemoveTrustedDomainRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.RemoveTrustedDomainResponse> __Marshaller_zitadel_instance_v2beta_RemoveTrustedDomainResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.RemoveTrustedDomainResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.ListTrustedDomainsRequest> __Marshaller_zitadel_instance_v2beta_ListTrustedDomainsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.ListTrustedDomainsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Instance.V2beta.ListTrustedDomainsResponse> __Marshaller_zitadel_instance_v2beta_ListTrustedDomainsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Instance.V2beta.ListTrustedDomainsResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Instance.V2beta.DeleteInstanceRequest, global::Zitadel.Instance.V2beta.DeleteInstanceResponse> __Method_DeleteInstance = new grpc::Method<global::Zitadel.Instance.V2beta.DeleteInstanceRequest, global::Zitadel.Instance.V2beta.DeleteInstanceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteInstance",
        __Marshaller_zitadel_instance_v2beta_DeleteInstanceRequest,
        __Marshaller_zitadel_instance_v2beta_DeleteInstanceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Instance.V2beta.GetInstanceRequest, global::Zitadel.Instance.V2beta.GetInstanceResponse> __Method_GetInstance = new grpc::Method<global::Zitadel.Instance.V2beta.GetInstanceRequest, global::Zitadel.Instance.V2beta.GetInstanceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetInstance",
        __Marshaller_zitadel_instance_v2beta_GetInstanceRequest,
        __Marshaller_zitadel_instance_v2beta_GetInstanceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Instance.V2beta.UpdateInstanceRequest, global::Zitadel.Instance.V2beta.UpdateInstanceResponse> __Method_UpdateInstance = new grpc::Method<global::Zitadel.Instance.V2beta.UpdateInstanceRequest, global::Zitadel.Instance.V2beta.UpdateInstanceResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateInstance",
        __Marshaller_zitadel_instance_v2beta_UpdateInstanceRequest,
        __Marshaller_zitadel_instance_v2beta_UpdateInstanceResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Instance.V2beta.ListInstancesRequest, global::Zitadel.Instance.V2beta.ListInstancesResponse> __Method_ListInstances = new grpc::Method<global::Zitadel.Instance.V2beta.ListInstancesRequest, global::Zitadel.Instance.V2beta.ListInstancesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListInstances",
        __Marshaller_zitadel_instance_v2beta_ListInstancesRequest,
        __Marshaller_zitadel_instance_v2beta_ListInstancesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Instance.V2beta.AddCustomDomainRequest, global::Zitadel.Instance.V2beta.AddCustomDomainResponse> __Method_AddCustomDomain = new grpc::Method<global::Zitadel.Instance.V2beta.AddCustomDomainRequest, global::Zitadel.Instance.V2beta.AddCustomDomainResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddCustomDomain",
        __Marshaller_zitadel_instance_v2beta_AddCustomDomainRequest,
        __Marshaller_zitadel_instance_v2beta_AddCustomDomainResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Instance.V2beta.RemoveCustomDomainRequest, global::Zitadel.Instance.V2beta.RemoveCustomDomainResponse> __Method_RemoveCustomDomain = new grpc::Method<global::Zitadel.Instance.V2beta.RemoveCustomDomainRequest, global::Zitadel.Instance.V2beta.RemoveCustomDomainResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveCustomDomain",
        __Marshaller_zitadel_instance_v2beta_RemoveCustomDomainRequest,
        __Marshaller_zitadel_instance_v2beta_RemoveCustomDomainResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Instance.V2beta.ListCustomDomainsRequest, global::Zitadel.Instance.V2beta.ListCustomDomainsResponse> __Method_ListCustomDomains = new grpc::Method<global::Zitadel.Instance.V2beta.ListCustomDomainsRequest, global::Zitadel.Instance.V2beta.ListCustomDomainsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListCustomDomains",
        __Marshaller_zitadel_instance_v2beta_ListCustomDomainsRequest,
        __Marshaller_zitadel_instance_v2beta_ListCustomDomainsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Instance.V2beta.AddTrustedDomainRequest, global::Zitadel.Instance.V2beta.AddTrustedDomainResponse> __Method_AddTrustedDomain = new grpc::Method<global::Zitadel.Instance.V2beta.AddTrustedDomainRequest, global::Zitadel.Instance.V2beta.AddTrustedDomainResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddTrustedDomain",
        __Marshaller_zitadel_instance_v2beta_AddTrustedDomainRequest,
        __Marshaller_zitadel_instance_v2beta_AddTrustedDomainResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Instance.V2beta.RemoveTrustedDomainRequest, global::Zitadel.Instance.V2beta.RemoveTrustedDomainResponse> __Method_RemoveTrustedDomain = new grpc::Method<global::Zitadel.Instance.V2beta.RemoveTrustedDomainRequest, global::Zitadel.Instance.V2beta.RemoveTrustedDomainResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveTrustedDomain",
        __Marshaller_zitadel_instance_v2beta_RemoveTrustedDomainRequest,
        __Marshaller_zitadel_instance_v2beta_RemoveTrustedDomainResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Instance.V2beta.ListTrustedDomainsRequest, global::Zitadel.Instance.V2beta.ListTrustedDomainsResponse> __Method_ListTrustedDomains = new grpc::Method<global::Zitadel.Instance.V2beta.ListTrustedDomainsRequest, global::Zitadel.Instance.V2beta.ListTrustedDomainsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListTrustedDomains",
        __Marshaller_zitadel_instance_v2beta_ListTrustedDomainsRequest,
        __Marshaller_zitadel_instance_v2beta_ListTrustedDomainsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Zitadel.Instance.V2beta.InstanceServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of InstanceService</summary>
    [grpc::BindServiceMethod(typeof(InstanceService), "BindService")]
    public abstract partial class InstanceServiceBase
    {
      /// <summary>
      /// Delete Instance
      ///
      /// Deletes an instance with the given ID.
      ///
      /// Required permissions:
      ///   - `system.instance.delete`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Instance.V2beta.DeleteInstanceResponse> DeleteInstance(global::Zitadel.Instance.V2beta.DeleteInstanceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get Instance
      ///
      /// Returns the instance in the current context.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///   - `iam.read`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Instance.V2beta.GetInstanceResponse> GetInstance(global::Zitadel.Instance.V2beta.GetInstanceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update Instance
      ///
      /// Updates instance in context with the given name.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///   - `iam.write`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Instance.V2beta.UpdateInstanceResponse> UpdateInstance(global::Zitadel.Instance.V2beta.UpdateInstanceRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List Instances
      ///
      /// Lists instances matching the given query.
      /// The query can be used to filter either by instance ID or domain.
      /// The request is paginated and returns 100 results by default.
      ///
      /// Required permissions:
      ///  - `system.instance.read`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Instance.V2beta.ListInstancesResponse> ListInstances(global::Zitadel.Instance.V2beta.ListInstancesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add Custom Domain
      ///
      /// Adds a custom domain to the instance in context.
      ///
      /// The instance_id in the input message will be used in the future
      ///
      /// Required permissions:
      ///   - `system.domain.write`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Instance.V2beta.AddCustomDomainResponse> AddCustomDomain(global::Zitadel.Instance.V2beta.AddCustomDomainRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove Custom Domain
      ///
      /// Removes a custom domain from the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `system.domain.write`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Instance.V2beta.RemoveCustomDomainResponse> RemoveCustomDomain(global::Zitadel.Instance.V2beta.RemoveCustomDomainRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List Custom Domains
      ///
      /// Lists custom domains of the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `iam.read`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Instance.V2beta.ListCustomDomainsResponse> ListCustomDomains(global::Zitadel.Instance.V2beta.ListCustomDomainsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add Trusted Domain
      ///
      /// Adds a trusted domain to the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `iam.write`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Instance.V2beta.AddTrustedDomainResponse> AddTrustedDomain(global::Zitadel.Instance.V2beta.AddTrustedDomainRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove Trusted Domain
      ///
      /// Removes a trusted domain from the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `iam.write`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Instance.V2beta.RemoveTrustedDomainResponse> RemoveTrustedDomain(global::Zitadel.Instance.V2beta.RemoveTrustedDomainRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List Trusted Domains
      ///
      /// Lists trusted domains of the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///   - `iam.read`
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Instance.V2beta.ListTrustedDomainsResponse> ListTrustedDomains(global::Zitadel.Instance.V2beta.ListTrustedDomainsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for InstanceService</summary>
    public partial class InstanceServiceClient : grpc::ClientBase<InstanceServiceClient>
    {
      /// <summary>Creates a new client for InstanceService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public InstanceServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for InstanceService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public InstanceServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected InstanceServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected InstanceServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Delete Instance
      ///
      /// Deletes an instance with the given ID.
      ///
      /// Required permissions:
      ///   - `system.instance.delete`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.DeleteInstanceResponse DeleteInstance(global::Zitadel.Instance.V2beta.DeleteInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteInstance(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete Instance
      ///
      /// Deletes an instance with the given ID.
      ///
      /// Required permissions:
      ///   - `system.instance.delete`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.DeleteInstanceResponse DeleteInstance(global::Zitadel.Instance.V2beta.DeleteInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteInstance, null, options, request);
      }
      /// <summary>
      /// Delete Instance
      ///
      /// Deletes an instance with the given ID.
      ///
      /// Required permissions:
      ///   - `system.instance.delete`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.DeleteInstanceResponse> DeleteInstanceAsync(global::Zitadel.Instance.V2beta.DeleteInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteInstanceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete Instance
      ///
      /// Deletes an instance with the given ID.
      ///
      /// Required permissions:
      ///   - `system.instance.delete`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.DeleteInstanceResponse> DeleteInstanceAsync(global::Zitadel.Instance.V2beta.DeleteInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteInstance, null, options, request);
      }
      /// <summary>
      /// Get Instance
      ///
      /// Returns the instance in the current context.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///   - `iam.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.GetInstanceResponse GetInstance(global::Zitadel.Instance.V2beta.GetInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInstance(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Instance
      ///
      /// Returns the instance in the current context.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///   - `iam.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.GetInstanceResponse GetInstance(global::Zitadel.Instance.V2beta.GetInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetInstance, null, options, request);
      }
      /// <summary>
      /// Get Instance
      ///
      /// Returns the instance in the current context.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///   - `iam.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.GetInstanceResponse> GetInstanceAsync(global::Zitadel.Instance.V2beta.GetInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInstanceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get Instance
      ///
      /// Returns the instance in the current context.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///   - `iam.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.GetInstanceResponse> GetInstanceAsync(global::Zitadel.Instance.V2beta.GetInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetInstance, null, options, request);
      }
      /// <summary>
      /// Update Instance
      ///
      /// Updates instance in context with the given name.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///   - `iam.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.UpdateInstanceResponse UpdateInstance(global::Zitadel.Instance.V2beta.UpdateInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateInstance(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update Instance
      ///
      /// Updates instance in context with the given name.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///   - `iam.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.UpdateInstanceResponse UpdateInstance(global::Zitadel.Instance.V2beta.UpdateInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateInstance, null, options, request);
      }
      /// <summary>
      /// Update Instance
      ///
      /// Updates instance in context with the given name.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///   - `iam.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.UpdateInstanceResponse> UpdateInstanceAsync(global::Zitadel.Instance.V2beta.UpdateInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateInstanceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update Instance
      ///
      /// Updates instance in context with the given name.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///   - `iam.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.UpdateInstanceResponse> UpdateInstanceAsync(global::Zitadel.Instance.V2beta.UpdateInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateInstance, null, options, request);
      }
      /// <summary>
      /// List Instances
      ///
      /// Lists instances matching the given query.
      /// The query can be used to filter either by instance ID or domain.
      /// The request is paginated and returns 100 results by default.
      ///
      /// Required permissions:
      ///  - `system.instance.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.ListInstancesResponse ListInstances(global::Zitadel.Instance.V2beta.ListInstancesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListInstances(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Instances
      ///
      /// Lists instances matching the given query.
      /// The query can be used to filter either by instance ID or domain.
      /// The request is paginated and returns 100 results by default.
      ///
      /// Required permissions:
      ///  - `system.instance.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.ListInstancesResponse ListInstances(global::Zitadel.Instance.V2beta.ListInstancesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListInstances, null, options, request);
      }
      /// <summary>
      /// List Instances
      ///
      /// Lists instances matching the given query.
      /// The query can be used to filter either by instance ID or domain.
      /// The request is paginated and returns 100 results by default.
      ///
      /// Required permissions:
      ///  - `system.instance.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.ListInstancesResponse> ListInstancesAsync(global::Zitadel.Instance.V2beta.ListInstancesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListInstancesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Instances
      ///
      /// Lists instances matching the given query.
      /// The query can be used to filter either by instance ID or domain.
      /// The request is paginated and returns 100 results by default.
      ///
      /// Required permissions:
      ///  - `system.instance.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.ListInstancesResponse> ListInstancesAsync(global::Zitadel.Instance.V2beta.ListInstancesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListInstances, null, options, request);
      }
      /// <summary>
      /// Add Custom Domain
      ///
      /// Adds a custom domain to the instance in context.
      ///
      /// The instance_id in the input message will be used in the future
      ///
      /// Required permissions:
      ///   - `system.domain.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.AddCustomDomainResponse AddCustomDomain(global::Zitadel.Instance.V2beta.AddCustomDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCustomDomain(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add Custom Domain
      ///
      /// Adds a custom domain to the instance in context.
      ///
      /// The instance_id in the input message will be used in the future
      ///
      /// Required permissions:
      ///   - `system.domain.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.AddCustomDomainResponse AddCustomDomain(global::Zitadel.Instance.V2beta.AddCustomDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddCustomDomain, null, options, request);
      }
      /// <summary>
      /// Add Custom Domain
      ///
      /// Adds a custom domain to the instance in context.
      ///
      /// The instance_id in the input message will be used in the future
      ///
      /// Required permissions:
      ///   - `system.domain.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.AddCustomDomainResponse> AddCustomDomainAsync(global::Zitadel.Instance.V2beta.AddCustomDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddCustomDomainAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add Custom Domain
      ///
      /// Adds a custom domain to the instance in context.
      ///
      /// The instance_id in the input message will be used in the future
      ///
      /// Required permissions:
      ///   - `system.domain.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.AddCustomDomainResponse> AddCustomDomainAsync(global::Zitadel.Instance.V2beta.AddCustomDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddCustomDomain, null, options, request);
      }
      /// <summary>
      /// Remove Custom Domain
      ///
      /// Removes a custom domain from the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `system.domain.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.RemoveCustomDomainResponse RemoveCustomDomain(global::Zitadel.Instance.V2beta.RemoveCustomDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveCustomDomain(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Custom Domain
      ///
      /// Removes a custom domain from the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `system.domain.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.RemoveCustomDomainResponse RemoveCustomDomain(global::Zitadel.Instance.V2beta.RemoveCustomDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveCustomDomain, null, options, request);
      }
      /// <summary>
      /// Remove Custom Domain
      ///
      /// Removes a custom domain from the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `system.domain.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.RemoveCustomDomainResponse> RemoveCustomDomainAsync(global::Zitadel.Instance.V2beta.RemoveCustomDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveCustomDomainAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Custom Domain
      ///
      /// Removes a custom domain from the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `system.domain.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.RemoveCustomDomainResponse> RemoveCustomDomainAsync(global::Zitadel.Instance.V2beta.RemoveCustomDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveCustomDomain, null, options, request);
      }
      /// <summary>
      /// List Custom Domains
      ///
      /// Lists custom domains of the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `iam.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.ListCustomDomainsResponse ListCustomDomains(global::Zitadel.Instance.V2beta.ListCustomDomainsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCustomDomains(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Custom Domains
      ///
      /// Lists custom domains of the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `iam.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.ListCustomDomainsResponse ListCustomDomains(global::Zitadel.Instance.V2beta.ListCustomDomainsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListCustomDomains, null, options, request);
      }
      /// <summary>
      /// List Custom Domains
      ///
      /// Lists custom domains of the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `iam.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.ListCustomDomainsResponse> ListCustomDomainsAsync(global::Zitadel.Instance.V2beta.ListCustomDomainsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListCustomDomainsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Custom Domains
      ///
      /// Lists custom domains of the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `iam.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.ListCustomDomainsResponse> ListCustomDomainsAsync(global::Zitadel.Instance.V2beta.ListCustomDomainsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListCustomDomains, null, options, request);
      }
      /// <summary>
      /// Add Trusted Domain
      ///
      /// Adds a trusted domain to the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `iam.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.AddTrustedDomainResponse AddTrustedDomain(global::Zitadel.Instance.V2beta.AddTrustedDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddTrustedDomain(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add Trusted Domain
      ///
      /// Adds a trusted domain to the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `iam.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.AddTrustedDomainResponse AddTrustedDomain(global::Zitadel.Instance.V2beta.AddTrustedDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddTrustedDomain, null, options, request);
      }
      /// <summary>
      /// Add Trusted Domain
      ///
      /// Adds a trusted domain to the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `iam.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.AddTrustedDomainResponse> AddTrustedDomainAsync(global::Zitadel.Instance.V2beta.AddTrustedDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddTrustedDomainAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add Trusted Domain
      ///
      /// Adds a trusted domain to the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `iam.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.AddTrustedDomainResponse> AddTrustedDomainAsync(global::Zitadel.Instance.V2beta.AddTrustedDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddTrustedDomain, null, options, request);
      }
      /// <summary>
      /// Remove Trusted Domain
      ///
      /// Removes a trusted domain from the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `iam.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.RemoveTrustedDomainResponse RemoveTrustedDomain(global::Zitadel.Instance.V2beta.RemoveTrustedDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveTrustedDomain(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Trusted Domain
      ///
      /// Removes a trusted domain from the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `iam.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.RemoveTrustedDomainResponse RemoveTrustedDomain(global::Zitadel.Instance.V2beta.RemoveTrustedDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveTrustedDomain, null, options, request);
      }
      /// <summary>
      /// Remove Trusted Domain
      ///
      /// Removes a trusted domain from the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `iam.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.RemoveTrustedDomainResponse> RemoveTrustedDomainAsync(global::Zitadel.Instance.V2beta.RemoveTrustedDomainRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveTrustedDomainAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove Trusted Domain
      ///
      /// Removes a trusted domain from the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///  - `iam.write`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.RemoveTrustedDomainResponse> RemoveTrustedDomainAsync(global::Zitadel.Instance.V2beta.RemoveTrustedDomainRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveTrustedDomain, null, options, request);
      }
      /// <summary>
      /// List Trusted Domains
      ///
      /// Lists trusted domains of the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///   - `iam.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.ListTrustedDomainsResponse ListTrustedDomains(global::Zitadel.Instance.V2beta.ListTrustedDomainsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTrustedDomains(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Trusted Domains
      ///
      /// Lists trusted domains of the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///   - `iam.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Instance.V2beta.ListTrustedDomainsResponse ListTrustedDomains(global::Zitadel.Instance.V2beta.ListTrustedDomainsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListTrustedDomains, null, options, request);
      }
      /// <summary>
      /// List Trusted Domains
      ///
      /// Lists trusted domains of the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///   - `iam.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.ListTrustedDomainsResponse> ListTrustedDomainsAsync(global::Zitadel.Instance.V2beta.ListTrustedDomainsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListTrustedDomainsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List Trusted Domains
      ///
      /// Lists trusted domains of the instance.
      ///
      /// The instance_id in the input message will be used in the future.
      ///
      /// Required permissions:
      ///   - `iam.read`
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Instance.V2beta.ListTrustedDomainsResponse> ListTrustedDomainsAsync(global::Zitadel.Instance.V2beta.ListTrustedDomainsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListTrustedDomains, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override InstanceServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new InstanceServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(InstanceServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_DeleteInstance, serviceImpl.DeleteInstance)
          .AddMethod(__Method_GetInstance, serviceImpl.GetInstance)
          .AddMethod(__Method_UpdateInstance, serviceImpl.UpdateInstance)
          .AddMethod(__Method_ListInstances, serviceImpl.ListInstances)
          .AddMethod(__Method_AddCustomDomain, serviceImpl.AddCustomDomain)
          .AddMethod(__Method_RemoveCustomDomain, serviceImpl.RemoveCustomDomain)
          .AddMethod(__Method_ListCustomDomains, serviceImpl.ListCustomDomains)
          .AddMethod(__Method_AddTrustedDomain, serviceImpl.AddTrustedDomain)
          .AddMethod(__Method_RemoveTrustedDomain, serviceImpl.RemoveTrustedDomain)
          .AddMethod(__Method_ListTrustedDomains, serviceImpl.ListTrustedDomains).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, InstanceServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_DeleteInstance, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Instance.V2beta.DeleteInstanceRequest, global::Zitadel.Instance.V2beta.DeleteInstanceResponse>(serviceImpl.DeleteInstance));
      serviceBinder.AddMethod(__Method_GetInstance, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Instance.V2beta.GetInstanceRequest, global::Zitadel.Instance.V2beta.GetInstanceResponse>(serviceImpl.GetInstance));
      serviceBinder.AddMethod(__Method_UpdateInstance, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Instance.V2beta.UpdateInstanceRequest, global::Zitadel.Instance.V2beta.UpdateInstanceResponse>(serviceImpl.UpdateInstance));
      serviceBinder.AddMethod(__Method_ListInstances, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Instance.V2beta.ListInstancesRequest, global::Zitadel.Instance.V2beta.ListInstancesResponse>(serviceImpl.ListInstances));
      serviceBinder.AddMethod(__Method_AddCustomDomain, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Instance.V2beta.AddCustomDomainRequest, global::Zitadel.Instance.V2beta.AddCustomDomainResponse>(serviceImpl.AddCustomDomain));
      serviceBinder.AddMethod(__Method_RemoveCustomDomain, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Instance.V2beta.RemoveCustomDomainRequest, global::Zitadel.Instance.V2beta.RemoveCustomDomainResponse>(serviceImpl.RemoveCustomDomain));
      serviceBinder.AddMethod(__Method_ListCustomDomains, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Instance.V2beta.ListCustomDomainsRequest, global::Zitadel.Instance.V2beta.ListCustomDomainsResponse>(serviceImpl.ListCustomDomains));
      serviceBinder.AddMethod(__Method_AddTrustedDomain, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Instance.V2beta.AddTrustedDomainRequest, global::Zitadel.Instance.V2beta.AddTrustedDomainResponse>(serviceImpl.AddTrustedDomain));
      serviceBinder.AddMethod(__Method_RemoveTrustedDomain, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Instance.V2beta.RemoveTrustedDomainRequest, global::Zitadel.Instance.V2beta.RemoveTrustedDomainResponse>(serviceImpl.RemoveTrustedDomain));
      serviceBinder.AddMethod(__Method_ListTrustedDomains, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Instance.V2beta.ListTrustedDomainsRequest, global::Zitadel.Instance.V2beta.ListTrustedDomainsResponse>(serviceImpl.ListTrustedDomains));
    }

  }
}
#endregion
