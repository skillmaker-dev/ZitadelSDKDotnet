// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: zitadel/user/v2beta/user_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Zitadel.User.V2beta {
  public static partial class UserService
  {
    static readonly string __ServiceName = "zitadel.user.v2beta.UserService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.AddHumanUserRequest> __Marshaller_zitadel_user_v2beta_AddHumanUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.AddHumanUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.AddHumanUserResponse> __Marshaller_zitadel_user_v2beta_AddHumanUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.AddHumanUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.GetUserByIDRequest> __Marshaller_zitadel_user_v2beta_GetUserByIDRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.GetUserByIDRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.GetUserByIDResponse> __Marshaller_zitadel_user_v2beta_GetUserByIDResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.GetUserByIDResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.ListUsersRequest> __Marshaller_zitadel_user_v2beta_ListUsersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.ListUsersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.ListUsersResponse> __Marshaller_zitadel_user_v2beta_ListUsersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.ListUsersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.SetEmailRequest> __Marshaller_zitadel_user_v2beta_SetEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.SetEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.SetEmailResponse> __Marshaller_zitadel_user_v2beta_SetEmailResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.SetEmailResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.ResendEmailCodeRequest> __Marshaller_zitadel_user_v2beta_ResendEmailCodeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.ResendEmailCodeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.ResendEmailCodeResponse> __Marshaller_zitadel_user_v2beta_ResendEmailCodeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.ResendEmailCodeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.VerifyEmailRequest> __Marshaller_zitadel_user_v2beta_VerifyEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.VerifyEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.VerifyEmailResponse> __Marshaller_zitadel_user_v2beta_VerifyEmailResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.VerifyEmailResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.SetPhoneRequest> __Marshaller_zitadel_user_v2beta_SetPhoneRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.SetPhoneRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.SetPhoneResponse> __Marshaller_zitadel_user_v2beta_SetPhoneResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.SetPhoneResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.RemovePhoneRequest> __Marshaller_zitadel_user_v2beta_RemovePhoneRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.RemovePhoneRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.RemovePhoneResponse> __Marshaller_zitadel_user_v2beta_RemovePhoneResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.RemovePhoneResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.ResendPhoneCodeRequest> __Marshaller_zitadel_user_v2beta_ResendPhoneCodeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.ResendPhoneCodeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.ResendPhoneCodeResponse> __Marshaller_zitadel_user_v2beta_ResendPhoneCodeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.ResendPhoneCodeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.VerifyPhoneRequest> __Marshaller_zitadel_user_v2beta_VerifyPhoneRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.VerifyPhoneRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.VerifyPhoneResponse> __Marshaller_zitadel_user_v2beta_VerifyPhoneResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.VerifyPhoneResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.UpdateHumanUserRequest> __Marshaller_zitadel_user_v2beta_UpdateHumanUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.UpdateHumanUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.UpdateHumanUserResponse> __Marshaller_zitadel_user_v2beta_UpdateHumanUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.UpdateHumanUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.DeactivateUserRequest> __Marshaller_zitadel_user_v2beta_DeactivateUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.DeactivateUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.DeactivateUserResponse> __Marshaller_zitadel_user_v2beta_DeactivateUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.DeactivateUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.ReactivateUserRequest> __Marshaller_zitadel_user_v2beta_ReactivateUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.ReactivateUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.ReactivateUserResponse> __Marshaller_zitadel_user_v2beta_ReactivateUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.ReactivateUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.LockUserRequest> __Marshaller_zitadel_user_v2beta_LockUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.LockUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.LockUserResponse> __Marshaller_zitadel_user_v2beta_LockUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.LockUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.UnlockUserRequest> __Marshaller_zitadel_user_v2beta_UnlockUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.UnlockUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.UnlockUserResponse> __Marshaller_zitadel_user_v2beta_UnlockUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.UnlockUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.DeleteUserRequest> __Marshaller_zitadel_user_v2beta_DeleteUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.DeleteUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.DeleteUserResponse> __Marshaller_zitadel_user_v2beta_DeleteUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.DeleteUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.RegisterPasskeyRequest> __Marshaller_zitadel_user_v2beta_RegisterPasskeyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.RegisterPasskeyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.RegisterPasskeyResponse> __Marshaller_zitadel_user_v2beta_RegisterPasskeyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.RegisterPasskeyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.VerifyPasskeyRegistrationRequest> __Marshaller_zitadel_user_v2beta_VerifyPasskeyRegistrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.VerifyPasskeyRegistrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.VerifyPasskeyRegistrationResponse> __Marshaller_zitadel_user_v2beta_VerifyPasskeyRegistrationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.VerifyPasskeyRegistrationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkRequest> __Marshaller_zitadel_user_v2beta_CreatePasskeyRegistrationLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkResponse> __Marshaller_zitadel_user_v2beta_CreatePasskeyRegistrationLinkResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.RegisterU2FRequest> __Marshaller_zitadel_user_v2beta_RegisterU2FRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.RegisterU2FRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.RegisterU2FResponse> __Marshaller_zitadel_user_v2beta_RegisterU2FResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.RegisterU2FResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.VerifyU2FRegistrationRequest> __Marshaller_zitadel_user_v2beta_VerifyU2FRegistrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.VerifyU2FRegistrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.VerifyU2FRegistrationResponse> __Marshaller_zitadel_user_v2beta_VerifyU2FRegistrationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.VerifyU2FRegistrationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.RegisterTOTPRequest> __Marshaller_zitadel_user_v2beta_RegisterTOTPRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.RegisterTOTPRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.RegisterTOTPResponse> __Marshaller_zitadel_user_v2beta_RegisterTOTPResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.RegisterTOTPResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.VerifyTOTPRegistrationRequest> __Marshaller_zitadel_user_v2beta_VerifyTOTPRegistrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.VerifyTOTPRegistrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.VerifyTOTPRegistrationResponse> __Marshaller_zitadel_user_v2beta_VerifyTOTPRegistrationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.VerifyTOTPRegistrationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.RemoveTOTPRequest> __Marshaller_zitadel_user_v2beta_RemoveTOTPRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.RemoveTOTPRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.RemoveTOTPResponse> __Marshaller_zitadel_user_v2beta_RemoveTOTPResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.RemoveTOTPResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.AddOTPSMSRequest> __Marshaller_zitadel_user_v2beta_AddOTPSMSRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.AddOTPSMSRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.AddOTPSMSResponse> __Marshaller_zitadel_user_v2beta_AddOTPSMSResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.AddOTPSMSResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.RemoveOTPSMSRequest> __Marshaller_zitadel_user_v2beta_RemoveOTPSMSRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.RemoveOTPSMSRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.RemoveOTPSMSResponse> __Marshaller_zitadel_user_v2beta_RemoveOTPSMSResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.RemoveOTPSMSResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.AddOTPEmailRequest> __Marshaller_zitadel_user_v2beta_AddOTPEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.AddOTPEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.AddOTPEmailResponse> __Marshaller_zitadel_user_v2beta_AddOTPEmailResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.AddOTPEmailResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.RemoveOTPEmailRequest> __Marshaller_zitadel_user_v2beta_RemoveOTPEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.RemoveOTPEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.RemoveOTPEmailResponse> __Marshaller_zitadel_user_v2beta_RemoveOTPEmailResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.RemoveOTPEmailResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.StartIdentityProviderIntentRequest> __Marshaller_zitadel_user_v2beta_StartIdentityProviderIntentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.StartIdentityProviderIntentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.StartIdentityProviderIntentResponse> __Marshaller_zitadel_user_v2beta_StartIdentityProviderIntentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.StartIdentityProviderIntentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentRequest> __Marshaller_zitadel_user_v2beta_RetrieveIdentityProviderIntentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentResponse> __Marshaller_zitadel_user_v2beta_RetrieveIdentityProviderIntentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.AddIDPLinkRequest> __Marshaller_zitadel_user_v2beta_AddIDPLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.AddIDPLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.AddIDPLinkResponse> __Marshaller_zitadel_user_v2beta_AddIDPLinkResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.AddIDPLinkResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.PasswordResetRequest> __Marshaller_zitadel_user_v2beta_PasswordResetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.PasswordResetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.PasswordResetResponse> __Marshaller_zitadel_user_v2beta_PasswordResetResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.PasswordResetResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.SetPasswordRequest> __Marshaller_zitadel_user_v2beta_SetPasswordRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.SetPasswordRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.SetPasswordResponse> __Marshaller_zitadel_user_v2beta_SetPasswordResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.SetPasswordResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.ListAuthenticationMethodTypesRequest> __Marshaller_zitadel_user_v2beta_ListAuthenticationMethodTypesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.ListAuthenticationMethodTypesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.User.V2beta.ListAuthenticationMethodTypesResponse> __Marshaller_zitadel_user_v2beta_ListAuthenticationMethodTypesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.User.V2beta.ListAuthenticationMethodTypesResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.AddHumanUserRequest, global::Zitadel.User.V2beta.AddHumanUserResponse> __Method_AddHumanUser = new grpc::Method<global::Zitadel.User.V2beta.AddHumanUserRequest, global::Zitadel.User.V2beta.AddHumanUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddHumanUser",
        __Marshaller_zitadel_user_v2beta_AddHumanUserRequest,
        __Marshaller_zitadel_user_v2beta_AddHumanUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.GetUserByIDRequest, global::Zitadel.User.V2beta.GetUserByIDResponse> __Method_GetUserByID = new grpc::Method<global::Zitadel.User.V2beta.GetUserByIDRequest, global::Zitadel.User.V2beta.GetUserByIDResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserByID",
        __Marshaller_zitadel_user_v2beta_GetUserByIDRequest,
        __Marshaller_zitadel_user_v2beta_GetUserByIDResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.ListUsersRequest, global::Zitadel.User.V2beta.ListUsersResponse> __Method_ListUsers = new grpc::Method<global::Zitadel.User.V2beta.ListUsersRequest, global::Zitadel.User.V2beta.ListUsersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListUsers",
        __Marshaller_zitadel_user_v2beta_ListUsersRequest,
        __Marshaller_zitadel_user_v2beta_ListUsersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.SetEmailRequest, global::Zitadel.User.V2beta.SetEmailResponse> __Method_SetEmail = new grpc::Method<global::Zitadel.User.V2beta.SetEmailRequest, global::Zitadel.User.V2beta.SetEmailResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetEmail",
        __Marshaller_zitadel_user_v2beta_SetEmailRequest,
        __Marshaller_zitadel_user_v2beta_SetEmailResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.ResendEmailCodeRequest, global::Zitadel.User.V2beta.ResendEmailCodeResponse> __Method_ResendEmailCode = new grpc::Method<global::Zitadel.User.V2beta.ResendEmailCodeRequest, global::Zitadel.User.V2beta.ResendEmailCodeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResendEmailCode",
        __Marshaller_zitadel_user_v2beta_ResendEmailCodeRequest,
        __Marshaller_zitadel_user_v2beta_ResendEmailCodeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.VerifyEmailRequest, global::Zitadel.User.V2beta.VerifyEmailResponse> __Method_VerifyEmail = new grpc::Method<global::Zitadel.User.V2beta.VerifyEmailRequest, global::Zitadel.User.V2beta.VerifyEmailResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyEmail",
        __Marshaller_zitadel_user_v2beta_VerifyEmailRequest,
        __Marshaller_zitadel_user_v2beta_VerifyEmailResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.SetPhoneRequest, global::Zitadel.User.V2beta.SetPhoneResponse> __Method_SetPhone = new grpc::Method<global::Zitadel.User.V2beta.SetPhoneRequest, global::Zitadel.User.V2beta.SetPhoneResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetPhone",
        __Marshaller_zitadel_user_v2beta_SetPhoneRequest,
        __Marshaller_zitadel_user_v2beta_SetPhoneResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.RemovePhoneRequest, global::Zitadel.User.V2beta.RemovePhoneResponse> __Method_RemovePhone = new grpc::Method<global::Zitadel.User.V2beta.RemovePhoneRequest, global::Zitadel.User.V2beta.RemovePhoneResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemovePhone",
        __Marshaller_zitadel_user_v2beta_RemovePhoneRequest,
        __Marshaller_zitadel_user_v2beta_RemovePhoneResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.ResendPhoneCodeRequest, global::Zitadel.User.V2beta.ResendPhoneCodeResponse> __Method_ResendPhoneCode = new grpc::Method<global::Zitadel.User.V2beta.ResendPhoneCodeRequest, global::Zitadel.User.V2beta.ResendPhoneCodeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResendPhoneCode",
        __Marshaller_zitadel_user_v2beta_ResendPhoneCodeRequest,
        __Marshaller_zitadel_user_v2beta_ResendPhoneCodeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.VerifyPhoneRequest, global::Zitadel.User.V2beta.VerifyPhoneResponse> __Method_VerifyPhone = new grpc::Method<global::Zitadel.User.V2beta.VerifyPhoneRequest, global::Zitadel.User.V2beta.VerifyPhoneResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyPhone",
        __Marshaller_zitadel_user_v2beta_VerifyPhoneRequest,
        __Marshaller_zitadel_user_v2beta_VerifyPhoneResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.UpdateHumanUserRequest, global::Zitadel.User.V2beta.UpdateHumanUserResponse> __Method_UpdateHumanUser = new grpc::Method<global::Zitadel.User.V2beta.UpdateHumanUserRequest, global::Zitadel.User.V2beta.UpdateHumanUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateHumanUser",
        __Marshaller_zitadel_user_v2beta_UpdateHumanUserRequest,
        __Marshaller_zitadel_user_v2beta_UpdateHumanUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.DeactivateUserRequest, global::Zitadel.User.V2beta.DeactivateUserResponse> __Method_DeactivateUser = new grpc::Method<global::Zitadel.User.V2beta.DeactivateUserRequest, global::Zitadel.User.V2beta.DeactivateUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeactivateUser",
        __Marshaller_zitadel_user_v2beta_DeactivateUserRequest,
        __Marshaller_zitadel_user_v2beta_DeactivateUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.ReactivateUserRequest, global::Zitadel.User.V2beta.ReactivateUserResponse> __Method_ReactivateUser = new grpc::Method<global::Zitadel.User.V2beta.ReactivateUserRequest, global::Zitadel.User.V2beta.ReactivateUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReactivateUser",
        __Marshaller_zitadel_user_v2beta_ReactivateUserRequest,
        __Marshaller_zitadel_user_v2beta_ReactivateUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.LockUserRequest, global::Zitadel.User.V2beta.LockUserResponse> __Method_LockUser = new grpc::Method<global::Zitadel.User.V2beta.LockUserRequest, global::Zitadel.User.V2beta.LockUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LockUser",
        __Marshaller_zitadel_user_v2beta_LockUserRequest,
        __Marshaller_zitadel_user_v2beta_LockUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.UnlockUserRequest, global::Zitadel.User.V2beta.UnlockUserResponse> __Method_UnlockUser = new grpc::Method<global::Zitadel.User.V2beta.UnlockUserRequest, global::Zitadel.User.V2beta.UnlockUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnlockUser",
        __Marshaller_zitadel_user_v2beta_UnlockUserRequest,
        __Marshaller_zitadel_user_v2beta_UnlockUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.DeleteUserRequest, global::Zitadel.User.V2beta.DeleteUserResponse> __Method_DeleteUser = new grpc::Method<global::Zitadel.User.V2beta.DeleteUserRequest, global::Zitadel.User.V2beta.DeleteUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteUser",
        __Marshaller_zitadel_user_v2beta_DeleteUserRequest,
        __Marshaller_zitadel_user_v2beta_DeleteUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.RegisterPasskeyRequest, global::Zitadel.User.V2beta.RegisterPasskeyResponse> __Method_RegisterPasskey = new grpc::Method<global::Zitadel.User.V2beta.RegisterPasskeyRequest, global::Zitadel.User.V2beta.RegisterPasskeyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegisterPasskey",
        __Marshaller_zitadel_user_v2beta_RegisterPasskeyRequest,
        __Marshaller_zitadel_user_v2beta_RegisterPasskeyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.VerifyPasskeyRegistrationRequest, global::Zitadel.User.V2beta.VerifyPasskeyRegistrationResponse> __Method_VerifyPasskeyRegistration = new grpc::Method<global::Zitadel.User.V2beta.VerifyPasskeyRegistrationRequest, global::Zitadel.User.V2beta.VerifyPasskeyRegistrationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyPasskeyRegistration",
        __Marshaller_zitadel_user_v2beta_VerifyPasskeyRegistrationRequest,
        __Marshaller_zitadel_user_v2beta_VerifyPasskeyRegistrationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkRequest, global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkResponse> __Method_CreatePasskeyRegistrationLink = new grpc::Method<global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkRequest, global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreatePasskeyRegistrationLink",
        __Marshaller_zitadel_user_v2beta_CreatePasskeyRegistrationLinkRequest,
        __Marshaller_zitadel_user_v2beta_CreatePasskeyRegistrationLinkResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.RegisterU2FRequest, global::Zitadel.User.V2beta.RegisterU2FResponse> __Method_RegisterU2F = new grpc::Method<global::Zitadel.User.V2beta.RegisterU2FRequest, global::Zitadel.User.V2beta.RegisterU2FResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegisterU2F",
        __Marshaller_zitadel_user_v2beta_RegisterU2FRequest,
        __Marshaller_zitadel_user_v2beta_RegisterU2FResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.VerifyU2FRegistrationRequest, global::Zitadel.User.V2beta.VerifyU2FRegistrationResponse> __Method_VerifyU2FRegistration = new grpc::Method<global::Zitadel.User.V2beta.VerifyU2FRegistrationRequest, global::Zitadel.User.V2beta.VerifyU2FRegistrationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyU2FRegistration",
        __Marshaller_zitadel_user_v2beta_VerifyU2FRegistrationRequest,
        __Marshaller_zitadel_user_v2beta_VerifyU2FRegistrationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.RegisterTOTPRequest, global::Zitadel.User.V2beta.RegisterTOTPResponse> __Method_RegisterTOTP = new grpc::Method<global::Zitadel.User.V2beta.RegisterTOTPRequest, global::Zitadel.User.V2beta.RegisterTOTPResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RegisterTOTP",
        __Marshaller_zitadel_user_v2beta_RegisterTOTPRequest,
        __Marshaller_zitadel_user_v2beta_RegisterTOTPResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.VerifyTOTPRegistrationRequest, global::Zitadel.User.V2beta.VerifyTOTPRegistrationResponse> __Method_VerifyTOTPRegistration = new grpc::Method<global::Zitadel.User.V2beta.VerifyTOTPRegistrationRequest, global::Zitadel.User.V2beta.VerifyTOTPRegistrationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyTOTPRegistration",
        __Marshaller_zitadel_user_v2beta_VerifyTOTPRegistrationRequest,
        __Marshaller_zitadel_user_v2beta_VerifyTOTPRegistrationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.RemoveTOTPRequest, global::Zitadel.User.V2beta.RemoveTOTPResponse> __Method_RemoveTOTP = new grpc::Method<global::Zitadel.User.V2beta.RemoveTOTPRequest, global::Zitadel.User.V2beta.RemoveTOTPResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveTOTP",
        __Marshaller_zitadel_user_v2beta_RemoveTOTPRequest,
        __Marshaller_zitadel_user_v2beta_RemoveTOTPResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.AddOTPSMSRequest, global::Zitadel.User.V2beta.AddOTPSMSResponse> __Method_AddOTPSMS = new grpc::Method<global::Zitadel.User.V2beta.AddOTPSMSRequest, global::Zitadel.User.V2beta.AddOTPSMSResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddOTPSMS",
        __Marshaller_zitadel_user_v2beta_AddOTPSMSRequest,
        __Marshaller_zitadel_user_v2beta_AddOTPSMSResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.RemoveOTPSMSRequest, global::Zitadel.User.V2beta.RemoveOTPSMSResponse> __Method_RemoveOTPSMS = new grpc::Method<global::Zitadel.User.V2beta.RemoveOTPSMSRequest, global::Zitadel.User.V2beta.RemoveOTPSMSResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveOTPSMS",
        __Marshaller_zitadel_user_v2beta_RemoveOTPSMSRequest,
        __Marshaller_zitadel_user_v2beta_RemoveOTPSMSResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.AddOTPEmailRequest, global::Zitadel.User.V2beta.AddOTPEmailResponse> __Method_AddOTPEmail = new grpc::Method<global::Zitadel.User.V2beta.AddOTPEmailRequest, global::Zitadel.User.V2beta.AddOTPEmailResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddOTPEmail",
        __Marshaller_zitadel_user_v2beta_AddOTPEmailRequest,
        __Marshaller_zitadel_user_v2beta_AddOTPEmailResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.RemoveOTPEmailRequest, global::Zitadel.User.V2beta.RemoveOTPEmailResponse> __Method_RemoveOTPEmail = new grpc::Method<global::Zitadel.User.V2beta.RemoveOTPEmailRequest, global::Zitadel.User.V2beta.RemoveOTPEmailResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveOTPEmail",
        __Marshaller_zitadel_user_v2beta_RemoveOTPEmailRequest,
        __Marshaller_zitadel_user_v2beta_RemoveOTPEmailResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.StartIdentityProviderIntentRequest, global::Zitadel.User.V2beta.StartIdentityProviderIntentResponse> __Method_StartIdentityProviderIntent = new grpc::Method<global::Zitadel.User.V2beta.StartIdentityProviderIntentRequest, global::Zitadel.User.V2beta.StartIdentityProviderIntentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartIdentityProviderIntent",
        __Marshaller_zitadel_user_v2beta_StartIdentityProviderIntentRequest,
        __Marshaller_zitadel_user_v2beta_StartIdentityProviderIntentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentRequest, global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentResponse> __Method_RetrieveIdentityProviderIntent = new grpc::Method<global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentRequest, global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RetrieveIdentityProviderIntent",
        __Marshaller_zitadel_user_v2beta_RetrieveIdentityProviderIntentRequest,
        __Marshaller_zitadel_user_v2beta_RetrieveIdentityProviderIntentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.AddIDPLinkRequest, global::Zitadel.User.V2beta.AddIDPLinkResponse> __Method_AddIDPLink = new grpc::Method<global::Zitadel.User.V2beta.AddIDPLinkRequest, global::Zitadel.User.V2beta.AddIDPLinkResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddIDPLink",
        __Marshaller_zitadel_user_v2beta_AddIDPLinkRequest,
        __Marshaller_zitadel_user_v2beta_AddIDPLinkResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.PasswordResetRequest, global::Zitadel.User.V2beta.PasswordResetResponse> __Method_PasswordReset = new grpc::Method<global::Zitadel.User.V2beta.PasswordResetRequest, global::Zitadel.User.V2beta.PasswordResetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PasswordReset",
        __Marshaller_zitadel_user_v2beta_PasswordResetRequest,
        __Marshaller_zitadel_user_v2beta_PasswordResetResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.SetPasswordRequest, global::Zitadel.User.V2beta.SetPasswordResponse> __Method_SetPassword = new grpc::Method<global::Zitadel.User.V2beta.SetPasswordRequest, global::Zitadel.User.V2beta.SetPasswordResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetPassword",
        __Marshaller_zitadel_user_v2beta_SetPasswordRequest,
        __Marshaller_zitadel_user_v2beta_SetPasswordResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.User.V2beta.ListAuthenticationMethodTypesRequest, global::Zitadel.User.V2beta.ListAuthenticationMethodTypesResponse> __Method_ListAuthenticationMethodTypes = new grpc::Method<global::Zitadel.User.V2beta.ListAuthenticationMethodTypesRequest, global::Zitadel.User.V2beta.ListAuthenticationMethodTypesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListAuthenticationMethodTypes",
        __Marshaller_zitadel_user_v2beta_ListAuthenticationMethodTypesRequest,
        __Marshaller_zitadel_user_v2beta_ListAuthenticationMethodTypesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Zitadel.User.V2beta.UserServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of UserService</summary>
    [grpc::BindServiceMethod(typeof(UserService), "BindService")]
    public abstract partial class UserServiceBase
    {
      /// <summary>
      /// Create a new human user
      ///
      /// Create/import a new user with the type human. The newly created user will get a verification email if either the email address is not marked as verified and you did not request the verification to be returned.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA)
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.AddHumanUserResponse> AddHumanUser(global::Zitadel.User.V2beta.AddHumanUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// User by ID
      ///
      /// Returns the full user object (human or machine) including the profile, email, etc.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.GetUserByIDResponse> GetUserByID(global::Zitadel.User.V2beta.GetUserByIDRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Search Users
      ///
      /// Search for users. By default, we will return all users of your instance that you have permission to read. Make sure to include a limit and sorting for pagination.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.ListUsersResponse> ListUsers(global::Zitadel.User.V2beta.ListUsersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Change the user email
      ///
      /// Change the email address of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by email.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.SetEmailResponse> SetEmail(global::Zitadel.User.V2beta.SetEmailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Resend code to verify user email
      ///
      /// Resend code to verify user email
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.ResendEmailCodeResponse> ResendEmailCode(global::Zitadel.User.V2beta.ResendEmailCodeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Verify the email
      ///
      /// Verify the email with the generated code.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.VerifyEmailResponse> VerifyEmail(global::Zitadel.User.V2beta.VerifyEmailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Set the user phone
      ///
      /// Set the phone number of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by sms.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.SetPhoneResponse> SetPhone(global::Zitadel.User.V2beta.SetPhoneRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove the user phone
      ///
      /// Remove the user phone
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.RemovePhoneResponse> RemovePhone(global::Zitadel.User.V2beta.RemovePhoneRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Resend code to verify user phone
      ///
      /// Resend code to verify user phone
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.ResendPhoneCodeResponse> ResendPhoneCode(global::Zitadel.User.V2beta.ResendPhoneCodeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Verify the phone
      ///
      /// Verify the phone with the generated code.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.VerifyPhoneResponse> VerifyPhone(global::Zitadel.User.V2beta.VerifyPhoneRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Update User
      ///
      /// Update all information from a user.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.UpdateHumanUserResponse> UpdateHumanUser(global::Zitadel.User.V2beta.UpdateHumanUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deactivate user
      ///
      /// The state of the user will be changed to 'deactivated'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'deactivated'. Use deactivate user when the user should not be able to use the account anymore, but you still need access to the user data.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.DeactivateUserResponse> DeactivateUser(global::Zitadel.User.V2beta.DeactivateUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Reactivate user
      ///
      /// Reactivate a user with the state 'deactivated'. The user will be able to log in again afterward. The endpoint returns an error if the user is not in the state 'deactivated'.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.ReactivateUserResponse> ReactivateUser(global::Zitadel.User.V2beta.ReactivateUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lock user
      ///
      /// The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.LockUserResponse> LockUser(global::Zitadel.User.V2beta.LockUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Unlock user
      ///
      /// The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.UnlockUserResponse> UnlockUser(global::Zitadel.User.V2beta.UnlockUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete user
      ///
      /// The state of the user will be changed to 'deleted'. The user will not be able to log in anymore. Endpoints requesting this user will return an error 'User not found.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.DeleteUserResponse> DeleteUser(global::Zitadel.User.V2beta.DeleteUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Start the registration of passkey for a user
      ///
      /// Start the registration of a passkey for a user, as a response the public key credential creation options are returned, which are used to verify the passkey.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.RegisterPasskeyResponse> RegisterPasskey(global::Zitadel.User.V2beta.RegisterPasskeyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Verify a passkey for a user
      ///
      /// Verify the passkey registration with the public key credential.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.VerifyPasskeyRegistrationResponse> VerifyPasskeyRegistration(global::Zitadel.User.V2beta.VerifyPasskeyRegistrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a passkey registration link for a user
      ///
      /// Create a passkey registration link which includes a code and either return it or send it to the user.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkResponse> CreatePasskeyRegistrationLink(global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Start the registration of a u2f token for a user
      ///
      /// Start the registration of a u2f token for a user, as a response the public key credential creation options are returned, which are used to verify the u2f token.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.RegisterU2FResponse> RegisterU2F(global::Zitadel.User.V2beta.RegisterU2FRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Verify a u2f token for a user
      ///
      /// Verify the u2f token registration with the public key credential.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.VerifyU2FRegistrationResponse> VerifyU2FRegistration(global::Zitadel.User.V2beta.VerifyU2FRegistrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Start the registration of a TOTP generator for a user
      ///
      /// Start the registration of a TOTP generator for a user, as a response a secret returned, which is used to initialize a TOTP app or device.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.RegisterTOTPResponse> RegisterTOTP(global::Zitadel.User.V2beta.RegisterTOTPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Verify a TOTP generator for a user
      ///
      /// Verify the TOTP registration with a generated code.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.VerifyTOTPRegistrationResponse> VerifyTOTPRegistration(global::Zitadel.User.V2beta.VerifyTOTPRegistrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove TOTP generator from a user
      ///
      /// Remove the configured TOTP generator of a user. As only one TOTP generator per user is allowed, the user will not have TOTP as a second factor afterward.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.RemoveTOTPResponse> RemoveTOTP(global::Zitadel.User.V2beta.RemoveTOTPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add OTP SMS for a user
      ///
      /// Add a new One-Time Password (OTP) SMS factor to the authenticated user. OTP SMS will enable the user to verify a OTP with the latest verified phone number. The phone number has to be verified to add the second factor.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.AddOTPSMSResponse> AddOTPSMS(global::Zitadel.User.V2beta.AddOTPSMSRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove One-Time Password (OTP) SMS from a user
      ///
      /// Remove the configured One-Time Password (OTP) SMS factor of a user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.RemoveOTPSMSResponse> RemoveOTPSMS(global::Zitadel.User.V2beta.RemoveOTPSMSRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add OTP Email for a user
      ///
      /// Add a new One-Time Password (OTP) Email factor to the authenticated user. OTP Email will enable the user to verify a OTP with the latest verified email. The email has to be verified to add the second factor.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.AddOTPEmailResponse> AddOTPEmail(global::Zitadel.User.V2beta.AddOTPEmailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove One-Time Password (OTP) Email from a user
      ///
      /// Remove the configured One-Time Password (OTP) Email factor of a user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.RemoveOTPEmailResponse> RemoveOTPEmail(global::Zitadel.User.V2beta.RemoveOTPEmailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Start flow with an identity provider
      ///
      /// Start a flow with an identity provider, for external login, registration or linking.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.StartIdentityProviderIntentResponse> StartIdentityProviderIntent(global::Zitadel.User.V2beta.StartIdentityProviderIntentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Retrieve the information returned by the identity provider
      ///
      /// Retrieve the information returned by the identity provider for registration or updating an existing user with new information.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentResponse> RetrieveIdentityProviderIntent(global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add link to an identity provider to an user
      ///
      /// Add link to an identity provider to an user.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.AddIDPLinkResponse> AddIDPLink(global::Zitadel.User.V2beta.AddIDPLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Request a code to reset a password
      ///
      /// Request a code to reset a password.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.PasswordResetResponse> PasswordReset(global::Zitadel.User.V2beta.PasswordResetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Change password
      ///
      /// Change the password of a user with either a verification code or the current password.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.SetPasswordResponse> SetPassword(global::Zitadel.User.V2beta.SetPasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// List all possible authentication methods of a user
      ///
      /// List all possible authentication methods of a user like password, passwordless, (T)OTP and more.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.User.V2beta.ListAuthenticationMethodTypesResponse> ListAuthenticationMethodTypes(global::Zitadel.User.V2beta.ListAuthenticationMethodTypesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for UserService</summary>
    public partial class UserServiceClient : grpc::ClientBase<UserServiceClient>
    {
      /// <summary>Creates a new client for UserService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public UserServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for UserService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public UserServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected UserServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected UserServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Create a new human user
      ///
      /// Create/import a new user with the type human. The newly created user will get a verification email if either the email address is not marked as verified and you did not request the verification to be returned.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.AddHumanUserResponse AddHumanUser(global::Zitadel.User.V2beta.AddHumanUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddHumanUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new human user
      ///
      /// Create/import a new user with the type human. The newly created user will get a verification email if either the email address is not marked as verified and you did not request the verification to be returned.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.AddHumanUserResponse AddHumanUser(global::Zitadel.User.V2beta.AddHumanUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddHumanUser, null, options, request);
      }
      /// <summary>
      /// Create a new human user
      ///
      /// Create/import a new user with the type human. The newly created user will get a verification email if either the email address is not marked as verified and you did not request the verification to be returned.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.AddHumanUserResponse> AddHumanUserAsync(global::Zitadel.User.V2beta.AddHumanUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddHumanUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a new human user
      ///
      /// Create/import a new user with the type human. The newly created user will get a verification email if either the email address is not marked as verified and you did not request the verification to be returned.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA)
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.AddHumanUserResponse> AddHumanUserAsync(global::Zitadel.User.V2beta.AddHumanUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddHumanUser, null, options, request);
      }
      /// <summary>
      /// User by ID
      ///
      /// Returns the full user object (human or machine) including the profile, email, etc.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.GetUserByIDResponse GetUserByID(global::Zitadel.User.V2beta.GetUserByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserByID(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// User by ID
      ///
      /// Returns the full user object (human or machine) including the profile, email, etc.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.GetUserByIDResponse GetUserByID(global::Zitadel.User.V2beta.GetUserByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserByID, null, options, request);
      }
      /// <summary>
      /// User by ID
      ///
      /// Returns the full user object (human or machine) including the profile, email, etc.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.GetUserByIDResponse> GetUserByIDAsync(global::Zitadel.User.V2beta.GetUserByIDRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserByIDAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// User by ID
      ///
      /// Returns the full user object (human or machine) including the profile, email, etc.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.GetUserByIDResponse> GetUserByIDAsync(global::Zitadel.User.V2beta.GetUserByIDRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserByID, null, options, request);
      }
      /// <summary>
      /// Search Users
      ///
      /// Search for users. By default, we will return all users of your instance that you have permission to read. Make sure to include a limit and sorting for pagination.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.ListUsersResponse ListUsers(global::Zitadel.User.V2beta.ListUsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Users
      ///
      /// Search for users. By default, we will return all users of your instance that you have permission to read. Make sure to include a limit and sorting for pagination.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.ListUsersResponse ListUsers(global::Zitadel.User.V2beta.ListUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListUsers, null, options, request);
      }
      /// <summary>
      /// Search Users
      ///
      /// Search for users. By default, we will return all users of your instance that you have permission to read. Make sure to include a limit and sorting for pagination.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.ListUsersResponse> ListUsersAsync(global::Zitadel.User.V2beta.ListUsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search Users
      ///
      /// Search for users. By default, we will return all users of your instance that you have permission to read. Make sure to include a limit and sorting for pagination.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.ListUsersResponse> ListUsersAsync(global::Zitadel.User.V2beta.ListUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListUsers, null, options, request);
      }
      /// <summary>
      /// Change the user email
      ///
      /// Change the email address of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by email.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.SetEmailResponse SetEmail(global::Zitadel.User.V2beta.SetEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change the user email
      ///
      /// Change the email address of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by email.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.SetEmailResponse SetEmail(global::Zitadel.User.V2beta.SetEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetEmail, null, options, request);
      }
      /// <summary>
      /// Change the user email
      ///
      /// Change the email address of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by email.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.SetEmailResponse> SetEmailAsync(global::Zitadel.User.V2beta.SetEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change the user email
      ///
      /// Change the email address of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by email.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.SetEmailResponse> SetEmailAsync(global::Zitadel.User.V2beta.SetEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetEmail, null, options, request);
      }
      /// <summary>
      /// Resend code to verify user email
      ///
      /// Resend code to verify user email
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.ResendEmailCodeResponse ResendEmailCode(global::Zitadel.User.V2beta.ResendEmailCodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendEmailCode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resend code to verify user email
      ///
      /// Resend code to verify user email
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.ResendEmailCodeResponse ResendEmailCode(global::Zitadel.User.V2beta.ResendEmailCodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResendEmailCode, null, options, request);
      }
      /// <summary>
      /// Resend code to verify user email
      ///
      /// Resend code to verify user email
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.ResendEmailCodeResponse> ResendEmailCodeAsync(global::Zitadel.User.V2beta.ResendEmailCodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendEmailCodeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resend code to verify user email
      ///
      /// Resend code to verify user email
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.ResendEmailCodeResponse> ResendEmailCodeAsync(global::Zitadel.User.V2beta.ResendEmailCodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResendEmailCode, null, options, request);
      }
      /// <summary>
      /// Verify the email
      ///
      /// Verify the email with the generated code.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.VerifyEmailResponse VerifyEmail(global::Zitadel.User.V2beta.VerifyEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify the email
      ///
      /// Verify the email with the generated code.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.VerifyEmailResponse VerifyEmail(global::Zitadel.User.V2beta.VerifyEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyEmail, null, options, request);
      }
      /// <summary>
      /// Verify the email
      ///
      /// Verify the email with the generated code.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.VerifyEmailResponse> VerifyEmailAsync(global::Zitadel.User.V2beta.VerifyEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify the email
      ///
      /// Verify the email with the generated code.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.VerifyEmailResponse> VerifyEmailAsync(global::Zitadel.User.V2beta.VerifyEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyEmail, null, options, request);
      }
      /// <summary>
      /// Set the user phone
      ///
      /// Set the phone number of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by sms.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.SetPhoneResponse SetPhone(global::Zitadel.User.V2beta.SetPhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetPhone(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set the user phone
      ///
      /// Set the phone number of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by sms.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.SetPhoneResponse SetPhone(global::Zitadel.User.V2beta.SetPhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetPhone, null, options, request);
      }
      /// <summary>
      /// Set the user phone
      ///
      /// Set the phone number of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by sms.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.SetPhoneResponse> SetPhoneAsync(global::Zitadel.User.V2beta.SetPhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetPhoneAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set the user phone
      ///
      /// Set the phone number of a user. If the state is set to not verified, a verification code will be generated, which can be either returned or sent to the user by sms.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.SetPhoneResponse> SetPhoneAsync(global::Zitadel.User.V2beta.SetPhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetPhone, null, options, request);
      }
      /// <summary>
      /// Remove the user phone
      ///
      /// Remove the user phone
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.RemovePhoneResponse RemovePhone(global::Zitadel.User.V2beta.RemovePhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemovePhone(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove the user phone
      ///
      /// Remove the user phone
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.RemovePhoneResponse RemovePhone(global::Zitadel.User.V2beta.RemovePhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemovePhone, null, options, request);
      }
      /// <summary>
      /// Remove the user phone
      ///
      /// Remove the user phone
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.RemovePhoneResponse> RemovePhoneAsync(global::Zitadel.User.V2beta.RemovePhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemovePhoneAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove the user phone
      ///
      /// Remove the user phone
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.RemovePhoneResponse> RemovePhoneAsync(global::Zitadel.User.V2beta.RemovePhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemovePhone, null, options, request);
      }
      /// <summary>
      /// Resend code to verify user phone
      ///
      /// Resend code to verify user phone
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.ResendPhoneCodeResponse ResendPhoneCode(global::Zitadel.User.V2beta.ResendPhoneCodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendPhoneCode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resend code to verify user phone
      ///
      /// Resend code to verify user phone
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.ResendPhoneCodeResponse ResendPhoneCode(global::Zitadel.User.V2beta.ResendPhoneCodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResendPhoneCode, null, options, request);
      }
      /// <summary>
      /// Resend code to verify user phone
      ///
      /// Resend code to verify user phone
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.ResendPhoneCodeResponse> ResendPhoneCodeAsync(global::Zitadel.User.V2beta.ResendPhoneCodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendPhoneCodeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resend code to verify user phone
      ///
      /// Resend code to verify user phone
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.ResendPhoneCodeResponse> ResendPhoneCodeAsync(global::Zitadel.User.V2beta.ResendPhoneCodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResendPhoneCode, null, options, request);
      }
      /// <summary>
      /// Verify the phone
      ///
      /// Verify the phone with the generated code.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.VerifyPhoneResponse VerifyPhone(global::Zitadel.User.V2beta.VerifyPhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyPhone(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify the phone
      ///
      /// Verify the phone with the generated code.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.VerifyPhoneResponse VerifyPhone(global::Zitadel.User.V2beta.VerifyPhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyPhone, null, options, request);
      }
      /// <summary>
      /// Verify the phone
      ///
      /// Verify the phone with the generated code.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.VerifyPhoneResponse> VerifyPhoneAsync(global::Zitadel.User.V2beta.VerifyPhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyPhoneAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify the phone
      ///
      /// Verify the phone with the generated code.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.VerifyPhoneResponse> VerifyPhoneAsync(global::Zitadel.User.V2beta.VerifyPhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyPhone, null, options, request);
      }
      /// <summary>
      /// Update User
      ///
      /// Update all information from a user.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.UpdateHumanUserResponse UpdateHumanUser(global::Zitadel.User.V2beta.UpdateHumanUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateHumanUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update User
      ///
      /// Update all information from a user.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.UpdateHumanUserResponse UpdateHumanUser(global::Zitadel.User.V2beta.UpdateHumanUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateHumanUser, null, options, request);
      }
      /// <summary>
      /// Update User
      ///
      /// Update all information from a user.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.UpdateHumanUserResponse> UpdateHumanUserAsync(global::Zitadel.User.V2beta.UpdateHumanUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateHumanUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Update User
      ///
      /// Update all information from a user.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.UpdateHumanUserResponse> UpdateHumanUserAsync(global::Zitadel.User.V2beta.UpdateHumanUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateHumanUser, null, options, request);
      }
      /// <summary>
      /// Deactivate user
      ///
      /// The state of the user will be changed to 'deactivated'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'deactivated'. Use deactivate user when the user should not be able to use the account anymore, but you still need access to the user data.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.DeactivateUserResponse DeactivateUser(global::Zitadel.User.V2beta.DeactivateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivate user
      ///
      /// The state of the user will be changed to 'deactivated'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'deactivated'. Use deactivate user when the user should not be able to use the account anymore, but you still need access to the user data.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.DeactivateUserResponse DeactivateUser(global::Zitadel.User.V2beta.DeactivateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeactivateUser, null, options, request);
      }
      /// <summary>
      /// Deactivate user
      ///
      /// The state of the user will be changed to 'deactivated'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'deactivated'. Use deactivate user when the user should not be able to use the account anymore, but you still need access to the user data.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.DeactivateUserResponse> DeactivateUserAsync(global::Zitadel.User.V2beta.DeactivateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivate user
      ///
      /// The state of the user will be changed to 'deactivated'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'deactivated'. Use deactivate user when the user should not be able to use the account anymore, but you still need access to the user data.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.DeactivateUserResponse> DeactivateUserAsync(global::Zitadel.User.V2beta.DeactivateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeactivateUser, null, options, request);
      }
      /// <summary>
      /// Reactivate user
      ///
      /// Reactivate a user with the state 'deactivated'. The user will be able to log in again afterward. The endpoint returns an error if the user is not in the state 'deactivated'.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.ReactivateUserResponse ReactivateUser(global::Zitadel.User.V2beta.ReactivateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reactivate user
      ///
      /// Reactivate a user with the state 'deactivated'. The user will be able to log in again afterward. The endpoint returns an error if the user is not in the state 'deactivated'.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.ReactivateUserResponse ReactivateUser(global::Zitadel.User.V2beta.ReactivateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReactivateUser, null, options, request);
      }
      /// <summary>
      /// Reactivate user
      ///
      /// Reactivate a user with the state 'deactivated'. The user will be able to log in again afterward. The endpoint returns an error if the user is not in the state 'deactivated'.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.ReactivateUserResponse> ReactivateUserAsync(global::Zitadel.User.V2beta.ReactivateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReactivateUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Reactivate user
      ///
      /// Reactivate a user with the state 'deactivated'. The user will be able to log in again afterward. The endpoint returns an error if the user is not in the state 'deactivated'.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.ReactivateUserResponse> ReactivateUserAsync(global::Zitadel.User.V2beta.ReactivateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReactivateUser, null, options, request);
      }
      /// <summary>
      /// Lock user
      ///
      /// The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.LockUserResponse LockUser(global::Zitadel.User.V2beta.LockUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LockUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lock user
      ///
      /// The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.LockUserResponse LockUser(global::Zitadel.User.V2beta.LockUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LockUser, null, options, request);
      }
      /// <summary>
      /// Lock user
      ///
      /// The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.LockUserResponse> LockUserAsync(global::Zitadel.User.V2beta.LockUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LockUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lock user
      ///
      /// The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.LockUserResponse> LockUserAsync(global::Zitadel.User.V2beta.LockUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LockUser, null, options, request);
      }
      /// <summary>
      /// Unlock user
      ///
      /// The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.UnlockUserResponse UnlockUser(global::Zitadel.User.V2beta.UnlockUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnlockUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unlock user
      ///
      /// The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.UnlockUserResponse UnlockUser(global::Zitadel.User.V2beta.UnlockUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnlockUser, null, options, request);
      }
      /// <summary>
      /// Unlock user
      ///
      /// The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.UnlockUserResponse> UnlockUserAsync(global::Zitadel.User.V2beta.UnlockUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnlockUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unlock user
      ///
      /// The state of the user will be changed to 'locked'. The user will not be able to log in anymore. The endpoint returns an error if the user is already in the state 'locked'. Use this endpoint if the user should not be able to log in temporarily because of an event that happened (wrong password, etc.).
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.UnlockUserResponse> UnlockUserAsync(global::Zitadel.User.V2beta.UnlockUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnlockUser, null, options, request);
      }
      /// <summary>
      /// Delete user
      ///
      /// The state of the user will be changed to 'deleted'. The user will not be able to log in anymore. Endpoints requesting this user will return an error 'User not found.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.DeleteUserResponse DeleteUser(global::Zitadel.User.V2beta.DeleteUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete user
      ///
      /// The state of the user will be changed to 'deleted'. The user will not be able to log in anymore. Endpoints requesting this user will return an error 'User not found.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.DeleteUserResponse DeleteUser(global::Zitadel.User.V2beta.DeleteUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteUser, null, options, request);
      }
      /// <summary>
      /// Delete user
      ///
      /// The state of the user will be changed to 'deleted'. The user will not be able to log in anymore. Endpoints requesting this user will return an error 'User not found.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.DeleteUserResponse> DeleteUserAsync(global::Zitadel.User.V2beta.DeleteUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete user
      ///
      /// The state of the user will be changed to 'deleted'. The user will not be able to log in anymore. Endpoints requesting this user will return an error 'User not found.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.DeleteUserResponse> DeleteUserAsync(global::Zitadel.User.V2beta.DeleteUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteUser, null, options, request);
      }
      /// <summary>
      /// Start the registration of passkey for a user
      ///
      /// Start the registration of a passkey for a user, as a response the public key credential creation options are returned, which are used to verify the passkey.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.RegisterPasskeyResponse RegisterPasskey(global::Zitadel.User.V2beta.RegisterPasskeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterPasskey(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Start the registration of passkey for a user
      ///
      /// Start the registration of a passkey for a user, as a response the public key credential creation options are returned, which are used to verify the passkey.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.RegisterPasskeyResponse RegisterPasskey(global::Zitadel.User.V2beta.RegisterPasskeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RegisterPasskey, null, options, request);
      }
      /// <summary>
      /// Start the registration of passkey for a user
      ///
      /// Start the registration of a passkey for a user, as a response the public key credential creation options are returned, which are used to verify the passkey.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.RegisterPasskeyResponse> RegisterPasskeyAsync(global::Zitadel.User.V2beta.RegisterPasskeyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterPasskeyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Start the registration of passkey for a user
      ///
      /// Start the registration of a passkey for a user, as a response the public key credential creation options are returned, which are used to verify the passkey.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.RegisterPasskeyResponse> RegisterPasskeyAsync(global::Zitadel.User.V2beta.RegisterPasskeyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RegisterPasskey, null, options, request);
      }
      /// <summary>
      /// Verify a passkey for a user
      ///
      /// Verify the passkey registration with the public key credential.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.VerifyPasskeyRegistrationResponse VerifyPasskeyRegistration(global::Zitadel.User.V2beta.VerifyPasskeyRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyPasskeyRegistration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify a passkey for a user
      ///
      /// Verify the passkey registration with the public key credential.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.VerifyPasskeyRegistrationResponse VerifyPasskeyRegistration(global::Zitadel.User.V2beta.VerifyPasskeyRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyPasskeyRegistration, null, options, request);
      }
      /// <summary>
      /// Verify a passkey for a user
      ///
      /// Verify the passkey registration with the public key credential.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.VerifyPasskeyRegistrationResponse> VerifyPasskeyRegistrationAsync(global::Zitadel.User.V2beta.VerifyPasskeyRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyPasskeyRegistrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify a passkey for a user
      ///
      /// Verify the passkey registration with the public key credential.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.VerifyPasskeyRegistrationResponse> VerifyPasskeyRegistrationAsync(global::Zitadel.User.V2beta.VerifyPasskeyRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyPasskeyRegistration, null, options, request);
      }
      /// <summary>
      /// Create a passkey registration link for a user
      ///
      /// Create a passkey registration link which includes a code and either return it or send it to the user.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkResponse CreatePasskeyRegistrationLink(global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePasskeyRegistrationLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a passkey registration link for a user
      ///
      /// Create a passkey registration link which includes a code and either return it or send it to the user.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkResponse CreatePasskeyRegistrationLink(global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreatePasskeyRegistrationLink, null, options, request);
      }
      /// <summary>
      /// Create a passkey registration link for a user
      ///
      /// Create a passkey registration link which includes a code and either return it or send it to the user.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkResponse> CreatePasskeyRegistrationLinkAsync(global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreatePasskeyRegistrationLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a passkey registration link for a user
      ///
      /// Create a passkey registration link which includes a code and either return it or send it to the user.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkResponse> CreatePasskeyRegistrationLinkAsync(global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreatePasskeyRegistrationLink, null, options, request);
      }
      /// <summary>
      /// Start the registration of a u2f token for a user
      ///
      /// Start the registration of a u2f token for a user, as a response the public key credential creation options are returned, which are used to verify the u2f token.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.RegisterU2FResponse RegisterU2F(global::Zitadel.User.V2beta.RegisterU2FRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterU2F(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Start the registration of a u2f token for a user
      ///
      /// Start the registration of a u2f token for a user, as a response the public key credential creation options are returned, which are used to verify the u2f token.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.RegisterU2FResponse RegisterU2F(global::Zitadel.User.V2beta.RegisterU2FRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RegisterU2F, null, options, request);
      }
      /// <summary>
      /// Start the registration of a u2f token for a user
      ///
      /// Start the registration of a u2f token for a user, as a response the public key credential creation options are returned, which are used to verify the u2f token.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.RegisterU2FResponse> RegisterU2FAsync(global::Zitadel.User.V2beta.RegisterU2FRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterU2FAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Start the registration of a u2f token for a user
      ///
      /// Start the registration of a u2f token for a user, as a response the public key credential creation options are returned, which are used to verify the u2f token.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.RegisterU2FResponse> RegisterU2FAsync(global::Zitadel.User.V2beta.RegisterU2FRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RegisterU2F, null, options, request);
      }
      /// <summary>
      /// Verify a u2f token for a user
      ///
      /// Verify the u2f token registration with the public key credential.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.VerifyU2FRegistrationResponse VerifyU2FRegistration(global::Zitadel.User.V2beta.VerifyU2FRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyU2FRegistration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify a u2f token for a user
      ///
      /// Verify the u2f token registration with the public key credential.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.VerifyU2FRegistrationResponse VerifyU2FRegistration(global::Zitadel.User.V2beta.VerifyU2FRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyU2FRegistration, null, options, request);
      }
      /// <summary>
      /// Verify a u2f token for a user
      ///
      /// Verify the u2f token registration with the public key credential.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.VerifyU2FRegistrationResponse> VerifyU2FRegistrationAsync(global::Zitadel.User.V2beta.VerifyU2FRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyU2FRegistrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify a u2f token for a user
      ///
      /// Verify the u2f token registration with the public key credential.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.VerifyU2FRegistrationResponse> VerifyU2FRegistrationAsync(global::Zitadel.User.V2beta.VerifyU2FRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyU2FRegistration, null, options, request);
      }
      /// <summary>
      /// Start the registration of a TOTP generator for a user
      ///
      /// Start the registration of a TOTP generator for a user, as a response a secret returned, which is used to initialize a TOTP app or device.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.RegisterTOTPResponse RegisterTOTP(global::Zitadel.User.V2beta.RegisterTOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterTOTP(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Start the registration of a TOTP generator for a user
      ///
      /// Start the registration of a TOTP generator for a user, as a response a secret returned, which is used to initialize a TOTP app or device.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.RegisterTOTPResponse RegisterTOTP(global::Zitadel.User.V2beta.RegisterTOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RegisterTOTP, null, options, request);
      }
      /// <summary>
      /// Start the registration of a TOTP generator for a user
      ///
      /// Start the registration of a TOTP generator for a user, as a response a secret returned, which is used to initialize a TOTP app or device.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.RegisterTOTPResponse> RegisterTOTPAsync(global::Zitadel.User.V2beta.RegisterTOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RegisterTOTPAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Start the registration of a TOTP generator for a user
      ///
      /// Start the registration of a TOTP generator for a user, as a response a secret returned, which is used to initialize a TOTP app or device.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.RegisterTOTPResponse> RegisterTOTPAsync(global::Zitadel.User.V2beta.RegisterTOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RegisterTOTP, null, options, request);
      }
      /// <summary>
      /// Verify a TOTP generator for a user
      ///
      /// Verify the TOTP registration with a generated code.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.VerifyTOTPRegistrationResponse VerifyTOTPRegistration(global::Zitadel.User.V2beta.VerifyTOTPRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyTOTPRegistration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify a TOTP generator for a user
      ///
      /// Verify the TOTP registration with a generated code.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.VerifyTOTPRegistrationResponse VerifyTOTPRegistration(global::Zitadel.User.V2beta.VerifyTOTPRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyTOTPRegistration, null, options, request);
      }
      /// <summary>
      /// Verify a TOTP generator for a user
      ///
      /// Verify the TOTP registration with a generated code.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.VerifyTOTPRegistrationResponse> VerifyTOTPRegistrationAsync(global::Zitadel.User.V2beta.VerifyTOTPRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyTOTPRegistrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify a TOTP generator for a user
      ///
      /// Verify the TOTP registration with a generated code.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.VerifyTOTPRegistrationResponse> VerifyTOTPRegistrationAsync(global::Zitadel.User.V2beta.VerifyTOTPRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyTOTPRegistration, null, options, request);
      }
      /// <summary>
      /// Remove TOTP generator from a user
      ///
      /// Remove the configured TOTP generator of a user. As only one TOTP generator per user is allowed, the user will not have TOTP as a second factor afterward.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.RemoveTOTPResponse RemoveTOTP(global::Zitadel.User.V2beta.RemoveTOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveTOTP(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove TOTP generator from a user
      ///
      /// Remove the configured TOTP generator of a user. As only one TOTP generator per user is allowed, the user will not have TOTP as a second factor afterward.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.RemoveTOTPResponse RemoveTOTP(global::Zitadel.User.V2beta.RemoveTOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveTOTP, null, options, request);
      }
      /// <summary>
      /// Remove TOTP generator from a user
      ///
      /// Remove the configured TOTP generator of a user. As only one TOTP generator per user is allowed, the user will not have TOTP as a second factor afterward.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.RemoveTOTPResponse> RemoveTOTPAsync(global::Zitadel.User.V2beta.RemoveTOTPRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveTOTPAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove TOTP generator from a user
      ///
      /// Remove the configured TOTP generator of a user. As only one TOTP generator per user is allowed, the user will not have TOTP as a second factor afterward.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.RemoveTOTPResponse> RemoveTOTPAsync(global::Zitadel.User.V2beta.RemoveTOTPRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveTOTP, null, options, request);
      }
      /// <summary>
      /// Add OTP SMS for a user
      ///
      /// Add a new One-Time Password (OTP) SMS factor to the authenticated user. OTP SMS will enable the user to verify a OTP with the latest verified phone number. The phone number has to be verified to add the second factor.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.AddOTPSMSResponse AddOTPSMS(global::Zitadel.User.V2beta.AddOTPSMSRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOTPSMS(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add OTP SMS for a user
      ///
      /// Add a new One-Time Password (OTP) SMS factor to the authenticated user. OTP SMS will enable the user to verify a OTP with the latest verified phone number. The phone number has to be verified to add the second factor.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.AddOTPSMSResponse AddOTPSMS(global::Zitadel.User.V2beta.AddOTPSMSRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddOTPSMS, null, options, request);
      }
      /// <summary>
      /// Add OTP SMS for a user
      ///
      /// Add a new One-Time Password (OTP) SMS factor to the authenticated user. OTP SMS will enable the user to verify a OTP with the latest verified phone number. The phone number has to be verified to add the second factor.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.AddOTPSMSResponse> AddOTPSMSAsync(global::Zitadel.User.V2beta.AddOTPSMSRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOTPSMSAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add OTP SMS for a user
      ///
      /// Add a new One-Time Password (OTP) SMS factor to the authenticated user. OTP SMS will enable the user to verify a OTP with the latest verified phone number. The phone number has to be verified to add the second factor.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.AddOTPSMSResponse> AddOTPSMSAsync(global::Zitadel.User.V2beta.AddOTPSMSRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddOTPSMS, null, options, request);
      }
      /// <summary>
      /// Remove One-Time Password (OTP) SMS from a user
      ///
      /// Remove the configured One-Time Password (OTP) SMS factor of a user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.RemoveOTPSMSResponse RemoveOTPSMS(global::Zitadel.User.V2beta.RemoveOTPSMSRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOTPSMS(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove One-Time Password (OTP) SMS from a user
      ///
      /// Remove the configured One-Time Password (OTP) SMS factor of a user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.RemoveOTPSMSResponse RemoveOTPSMS(global::Zitadel.User.V2beta.RemoveOTPSMSRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveOTPSMS, null, options, request);
      }
      /// <summary>
      /// Remove One-Time Password (OTP) SMS from a user
      ///
      /// Remove the configured One-Time Password (OTP) SMS factor of a user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.RemoveOTPSMSResponse> RemoveOTPSMSAsync(global::Zitadel.User.V2beta.RemoveOTPSMSRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOTPSMSAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove One-Time Password (OTP) SMS from a user
      ///
      /// Remove the configured One-Time Password (OTP) SMS factor of a user. As only one OTP SMS per user is allowed, the user will not have OTP SMS as a second factor afterward.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.RemoveOTPSMSResponse> RemoveOTPSMSAsync(global::Zitadel.User.V2beta.RemoveOTPSMSRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveOTPSMS, null, options, request);
      }
      /// <summary>
      /// Add OTP Email for a user
      ///
      /// Add a new One-Time Password (OTP) Email factor to the authenticated user. OTP Email will enable the user to verify a OTP with the latest verified email. The email has to be verified to add the second factor.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.AddOTPEmailResponse AddOTPEmail(global::Zitadel.User.V2beta.AddOTPEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOTPEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add OTP Email for a user
      ///
      /// Add a new One-Time Password (OTP) Email factor to the authenticated user. OTP Email will enable the user to verify a OTP with the latest verified email. The email has to be verified to add the second factor.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.AddOTPEmailResponse AddOTPEmail(global::Zitadel.User.V2beta.AddOTPEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddOTPEmail, null, options, request);
      }
      /// <summary>
      /// Add OTP Email for a user
      ///
      /// Add a new One-Time Password (OTP) Email factor to the authenticated user. OTP Email will enable the user to verify a OTP with the latest verified email. The email has to be verified to add the second factor.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.AddOTPEmailResponse> AddOTPEmailAsync(global::Zitadel.User.V2beta.AddOTPEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOTPEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add OTP Email for a user
      ///
      /// Add a new One-Time Password (OTP) Email factor to the authenticated user. OTP Email will enable the user to verify a OTP with the latest verified email. The email has to be verified to add the second factor.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.AddOTPEmailResponse> AddOTPEmailAsync(global::Zitadel.User.V2beta.AddOTPEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddOTPEmail, null, options, request);
      }
      /// <summary>
      /// Remove One-Time Password (OTP) Email from a user
      ///
      /// Remove the configured One-Time Password (OTP) Email factor of a user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.RemoveOTPEmailResponse RemoveOTPEmail(global::Zitadel.User.V2beta.RemoveOTPEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOTPEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove One-Time Password (OTP) Email from a user
      ///
      /// Remove the configured One-Time Password (OTP) Email factor of a user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.RemoveOTPEmailResponse RemoveOTPEmail(global::Zitadel.User.V2beta.RemoveOTPEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveOTPEmail, null, options, request);
      }
      /// <summary>
      /// Remove One-Time Password (OTP) Email from a user
      ///
      /// Remove the configured One-Time Password (OTP) Email factor of a user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.RemoveOTPEmailResponse> RemoveOTPEmailAsync(global::Zitadel.User.V2beta.RemoveOTPEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOTPEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove One-Time Password (OTP) Email from a user
      ///
      /// Remove the configured One-Time Password (OTP) Email factor of a user. As only one OTP Email per user is allowed, the user will not have OTP Email as a second factor afterward.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.RemoveOTPEmailResponse> RemoveOTPEmailAsync(global::Zitadel.User.V2beta.RemoveOTPEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveOTPEmail, null, options, request);
      }
      /// <summary>
      /// Start flow with an identity provider
      ///
      /// Start a flow with an identity provider, for external login, registration or linking.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.StartIdentityProviderIntentResponse StartIdentityProviderIntent(global::Zitadel.User.V2beta.StartIdentityProviderIntentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartIdentityProviderIntent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Start flow with an identity provider
      ///
      /// Start a flow with an identity provider, for external login, registration or linking.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.StartIdentityProviderIntentResponse StartIdentityProviderIntent(global::Zitadel.User.V2beta.StartIdentityProviderIntentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartIdentityProviderIntent, null, options, request);
      }
      /// <summary>
      /// Start flow with an identity provider
      ///
      /// Start a flow with an identity provider, for external login, registration or linking.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.StartIdentityProviderIntentResponse> StartIdentityProviderIntentAsync(global::Zitadel.User.V2beta.StartIdentityProviderIntentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartIdentityProviderIntentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Start flow with an identity provider
      ///
      /// Start a flow with an identity provider, for external login, registration or linking.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.StartIdentityProviderIntentResponse> StartIdentityProviderIntentAsync(global::Zitadel.User.V2beta.StartIdentityProviderIntentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartIdentityProviderIntent, null, options, request);
      }
      /// <summary>
      /// Retrieve the information returned by the identity provider
      ///
      /// Retrieve the information returned by the identity provider for registration or updating an existing user with new information.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentResponse RetrieveIdentityProviderIntent(global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RetrieveIdentityProviderIntent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve the information returned by the identity provider
      ///
      /// Retrieve the information returned by the identity provider for registration or updating an existing user with new information.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentResponse RetrieveIdentityProviderIntent(global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RetrieveIdentityProviderIntent, null, options, request);
      }
      /// <summary>
      /// Retrieve the information returned by the identity provider
      ///
      /// Retrieve the information returned by the identity provider for registration or updating an existing user with new information.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentResponse> RetrieveIdentityProviderIntentAsync(global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RetrieveIdentityProviderIntentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieve the information returned by the identity provider
      ///
      /// Retrieve the information returned by the identity provider for registration or updating an existing user with new information.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentResponse> RetrieveIdentityProviderIntentAsync(global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RetrieveIdentityProviderIntent, null, options, request);
      }
      /// <summary>
      /// Add link to an identity provider to an user
      ///
      /// Add link to an identity provider to an user.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.AddIDPLinkResponse AddIDPLink(global::Zitadel.User.V2beta.AddIDPLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddIDPLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add link to an identity provider to an user
      ///
      /// Add link to an identity provider to an user.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.AddIDPLinkResponse AddIDPLink(global::Zitadel.User.V2beta.AddIDPLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddIDPLink, null, options, request);
      }
      /// <summary>
      /// Add link to an identity provider to an user
      ///
      /// Add link to an identity provider to an user.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.AddIDPLinkResponse> AddIDPLinkAsync(global::Zitadel.User.V2beta.AddIDPLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddIDPLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add link to an identity provider to an user
      ///
      /// Add link to an identity provider to an user.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.AddIDPLinkResponse> AddIDPLinkAsync(global::Zitadel.User.V2beta.AddIDPLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddIDPLink, null, options, request);
      }
      /// <summary>
      /// Request a code to reset a password
      ///
      /// Request a code to reset a password.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.PasswordResetResponse PasswordReset(global::Zitadel.User.V2beta.PasswordResetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PasswordReset(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Request a code to reset a password
      ///
      /// Request a code to reset a password.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.PasswordResetResponse PasswordReset(global::Zitadel.User.V2beta.PasswordResetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PasswordReset, null, options, request);
      }
      /// <summary>
      /// Request a code to reset a password
      ///
      /// Request a code to reset a password.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.PasswordResetResponse> PasswordResetAsync(global::Zitadel.User.V2beta.PasswordResetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PasswordResetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Request a code to reset a password
      ///
      /// Request a code to reset a password.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.PasswordResetResponse> PasswordResetAsync(global::Zitadel.User.V2beta.PasswordResetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PasswordReset, null, options, request);
      }
      /// <summary>
      /// Change password
      ///
      /// Change the password of a user with either a verification code or the current password.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.SetPasswordResponse SetPassword(global::Zitadel.User.V2beta.SetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change password
      ///
      /// Change the password of a user with either a verification code or the current password.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.SetPasswordResponse SetPassword(global::Zitadel.User.V2beta.SetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetPassword, null, options, request);
      }
      /// <summary>
      /// Change password
      ///
      /// Change the password of a user with either a verification code or the current password.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.SetPasswordResponse> SetPasswordAsync(global::Zitadel.User.V2beta.SetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Change password
      ///
      /// Change the password of a user with either a verification code or the current password.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.SetPasswordResponse> SetPasswordAsync(global::Zitadel.User.V2beta.SetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetPassword, null, options, request);
      }
      /// <summary>
      /// List all possible authentication methods of a user
      ///
      /// List all possible authentication methods of a user like password, passwordless, (T)OTP and more.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.ListAuthenticationMethodTypesResponse ListAuthenticationMethodTypes(global::Zitadel.User.V2beta.ListAuthenticationMethodTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAuthenticationMethodTypes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List all possible authentication methods of a user
      ///
      /// List all possible authentication methods of a user like password, passwordless, (T)OTP and more.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.User.V2beta.ListAuthenticationMethodTypesResponse ListAuthenticationMethodTypes(global::Zitadel.User.V2beta.ListAuthenticationMethodTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListAuthenticationMethodTypes, null, options, request);
      }
      /// <summary>
      /// List all possible authentication methods of a user
      ///
      /// List all possible authentication methods of a user like password, passwordless, (T)OTP and more.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.ListAuthenticationMethodTypesResponse> ListAuthenticationMethodTypesAsync(global::Zitadel.User.V2beta.ListAuthenticationMethodTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAuthenticationMethodTypesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List all possible authentication methods of a user
      ///
      /// List all possible authentication methods of a user like password, passwordless, (T)OTP and more.
      ///
      /// Deprecated: please move to the corresponding endpoint under user service v2 (GA).
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.User.V2beta.ListAuthenticationMethodTypesResponse> ListAuthenticationMethodTypesAsync(global::Zitadel.User.V2beta.ListAuthenticationMethodTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListAuthenticationMethodTypes, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override UserServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new UserServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(UserServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddHumanUser, serviceImpl.AddHumanUser)
          .AddMethod(__Method_GetUserByID, serviceImpl.GetUserByID)
          .AddMethod(__Method_ListUsers, serviceImpl.ListUsers)
          .AddMethod(__Method_SetEmail, serviceImpl.SetEmail)
          .AddMethod(__Method_ResendEmailCode, serviceImpl.ResendEmailCode)
          .AddMethod(__Method_VerifyEmail, serviceImpl.VerifyEmail)
          .AddMethod(__Method_SetPhone, serviceImpl.SetPhone)
          .AddMethod(__Method_RemovePhone, serviceImpl.RemovePhone)
          .AddMethod(__Method_ResendPhoneCode, serviceImpl.ResendPhoneCode)
          .AddMethod(__Method_VerifyPhone, serviceImpl.VerifyPhone)
          .AddMethod(__Method_UpdateHumanUser, serviceImpl.UpdateHumanUser)
          .AddMethod(__Method_DeactivateUser, serviceImpl.DeactivateUser)
          .AddMethod(__Method_ReactivateUser, serviceImpl.ReactivateUser)
          .AddMethod(__Method_LockUser, serviceImpl.LockUser)
          .AddMethod(__Method_UnlockUser, serviceImpl.UnlockUser)
          .AddMethod(__Method_DeleteUser, serviceImpl.DeleteUser)
          .AddMethod(__Method_RegisterPasskey, serviceImpl.RegisterPasskey)
          .AddMethod(__Method_VerifyPasskeyRegistration, serviceImpl.VerifyPasskeyRegistration)
          .AddMethod(__Method_CreatePasskeyRegistrationLink, serviceImpl.CreatePasskeyRegistrationLink)
          .AddMethod(__Method_RegisterU2F, serviceImpl.RegisterU2F)
          .AddMethod(__Method_VerifyU2FRegistration, serviceImpl.VerifyU2FRegistration)
          .AddMethod(__Method_RegisterTOTP, serviceImpl.RegisterTOTP)
          .AddMethod(__Method_VerifyTOTPRegistration, serviceImpl.VerifyTOTPRegistration)
          .AddMethod(__Method_RemoveTOTP, serviceImpl.RemoveTOTP)
          .AddMethod(__Method_AddOTPSMS, serviceImpl.AddOTPSMS)
          .AddMethod(__Method_RemoveOTPSMS, serviceImpl.RemoveOTPSMS)
          .AddMethod(__Method_AddOTPEmail, serviceImpl.AddOTPEmail)
          .AddMethod(__Method_RemoveOTPEmail, serviceImpl.RemoveOTPEmail)
          .AddMethod(__Method_StartIdentityProviderIntent, serviceImpl.StartIdentityProviderIntent)
          .AddMethod(__Method_RetrieveIdentityProviderIntent, serviceImpl.RetrieveIdentityProviderIntent)
          .AddMethod(__Method_AddIDPLink, serviceImpl.AddIDPLink)
          .AddMethod(__Method_PasswordReset, serviceImpl.PasswordReset)
          .AddMethod(__Method_SetPassword, serviceImpl.SetPassword)
          .AddMethod(__Method_ListAuthenticationMethodTypes, serviceImpl.ListAuthenticationMethodTypes).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, UserServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AddHumanUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.AddHumanUserRequest, global::Zitadel.User.V2beta.AddHumanUserResponse>(serviceImpl.AddHumanUser));
      serviceBinder.AddMethod(__Method_GetUserByID, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.GetUserByIDRequest, global::Zitadel.User.V2beta.GetUserByIDResponse>(serviceImpl.GetUserByID));
      serviceBinder.AddMethod(__Method_ListUsers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.ListUsersRequest, global::Zitadel.User.V2beta.ListUsersResponse>(serviceImpl.ListUsers));
      serviceBinder.AddMethod(__Method_SetEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.SetEmailRequest, global::Zitadel.User.V2beta.SetEmailResponse>(serviceImpl.SetEmail));
      serviceBinder.AddMethod(__Method_ResendEmailCode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.ResendEmailCodeRequest, global::Zitadel.User.V2beta.ResendEmailCodeResponse>(serviceImpl.ResendEmailCode));
      serviceBinder.AddMethod(__Method_VerifyEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.VerifyEmailRequest, global::Zitadel.User.V2beta.VerifyEmailResponse>(serviceImpl.VerifyEmail));
      serviceBinder.AddMethod(__Method_SetPhone, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.SetPhoneRequest, global::Zitadel.User.V2beta.SetPhoneResponse>(serviceImpl.SetPhone));
      serviceBinder.AddMethod(__Method_RemovePhone, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.RemovePhoneRequest, global::Zitadel.User.V2beta.RemovePhoneResponse>(serviceImpl.RemovePhone));
      serviceBinder.AddMethod(__Method_ResendPhoneCode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.ResendPhoneCodeRequest, global::Zitadel.User.V2beta.ResendPhoneCodeResponse>(serviceImpl.ResendPhoneCode));
      serviceBinder.AddMethod(__Method_VerifyPhone, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.VerifyPhoneRequest, global::Zitadel.User.V2beta.VerifyPhoneResponse>(serviceImpl.VerifyPhone));
      serviceBinder.AddMethod(__Method_UpdateHumanUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.UpdateHumanUserRequest, global::Zitadel.User.V2beta.UpdateHumanUserResponse>(serviceImpl.UpdateHumanUser));
      serviceBinder.AddMethod(__Method_DeactivateUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.DeactivateUserRequest, global::Zitadel.User.V2beta.DeactivateUserResponse>(serviceImpl.DeactivateUser));
      serviceBinder.AddMethod(__Method_ReactivateUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.ReactivateUserRequest, global::Zitadel.User.V2beta.ReactivateUserResponse>(serviceImpl.ReactivateUser));
      serviceBinder.AddMethod(__Method_LockUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.LockUserRequest, global::Zitadel.User.V2beta.LockUserResponse>(serviceImpl.LockUser));
      serviceBinder.AddMethod(__Method_UnlockUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.UnlockUserRequest, global::Zitadel.User.V2beta.UnlockUserResponse>(serviceImpl.UnlockUser));
      serviceBinder.AddMethod(__Method_DeleteUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.DeleteUserRequest, global::Zitadel.User.V2beta.DeleteUserResponse>(serviceImpl.DeleteUser));
      serviceBinder.AddMethod(__Method_RegisterPasskey, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.RegisterPasskeyRequest, global::Zitadel.User.V2beta.RegisterPasskeyResponse>(serviceImpl.RegisterPasskey));
      serviceBinder.AddMethod(__Method_VerifyPasskeyRegistration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.VerifyPasskeyRegistrationRequest, global::Zitadel.User.V2beta.VerifyPasskeyRegistrationResponse>(serviceImpl.VerifyPasskeyRegistration));
      serviceBinder.AddMethod(__Method_CreatePasskeyRegistrationLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkRequest, global::Zitadel.User.V2beta.CreatePasskeyRegistrationLinkResponse>(serviceImpl.CreatePasskeyRegistrationLink));
      serviceBinder.AddMethod(__Method_RegisterU2F, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.RegisterU2FRequest, global::Zitadel.User.V2beta.RegisterU2FResponse>(serviceImpl.RegisterU2F));
      serviceBinder.AddMethod(__Method_VerifyU2FRegistration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.VerifyU2FRegistrationRequest, global::Zitadel.User.V2beta.VerifyU2FRegistrationResponse>(serviceImpl.VerifyU2FRegistration));
      serviceBinder.AddMethod(__Method_RegisterTOTP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.RegisterTOTPRequest, global::Zitadel.User.V2beta.RegisterTOTPResponse>(serviceImpl.RegisterTOTP));
      serviceBinder.AddMethod(__Method_VerifyTOTPRegistration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.VerifyTOTPRegistrationRequest, global::Zitadel.User.V2beta.VerifyTOTPRegistrationResponse>(serviceImpl.VerifyTOTPRegistration));
      serviceBinder.AddMethod(__Method_RemoveTOTP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.RemoveTOTPRequest, global::Zitadel.User.V2beta.RemoveTOTPResponse>(serviceImpl.RemoveTOTP));
      serviceBinder.AddMethod(__Method_AddOTPSMS, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.AddOTPSMSRequest, global::Zitadel.User.V2beta.AddOTPSMSResponse>(serviceImpl.AddOTPSMS));
      serviceBinder.AddMethod(__Method_RemoveOTPSMS, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.RemoveOTPSMSRequest, global::Zitadel.User.V2beta.RemoveOTPSMSResponse>(serviceImpl.RemoveOTPSMS));
      serviceBinder.AddMethod(__Method_AddOTPEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.AddOTPEmailRequest, global::Zitadel.User.V2beta.AddOTPEmailResponse>(serviceImpl.AddOTPEmail));
      serviceBinder.AddMethod(__Method_RemoveOTPEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.RemoveOTPEmailRequest, global::Zitadel.User.V2beta.RemoveOTPEmailResponse>(serviceImpl.RemoveOTPEmail));
      serviceBinder.AddMethod(__Method_StartIdentityProviderIntent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.StartIdentityProviderIntentRequest, global::Zitadel.User.V2beta.StartIdentityProviderIntentResponse>(serviceImpl.StartIdentityProviderIntent));
      serviceBinder.AddMethod(__Method_RetrieveIdentityProviderIntent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentRequest, global::Zitadel.User.V2beta.RetrieveIdentityProviderIntentResponse>(serviceImpl.RetrieveIdentityProviderIntent));
      serviceBinder.AddMethod(__Method_AddIDPLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.AddIDPLinkRequest, global::Zitadel.User.V2beta.AddIDPLinkResponse>(serviceImpl.AddIDPLink));
      serviceBinder.AddMethod(__Method_PasswordReset, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.PasswordResetRequest, global::Zitadel.User.V2beta.PasswordResetResponse>(serviceImpl.PasswordReset));
      serviceBinder.AddMethod(__Method_SetPassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.SetPasswordRequest, global::Zitadel.User.V2beta.SetPasswordResponse>(serviceImpl.SetPassword));
      serviceBinder.AddMethod(__Method_ListAuthenticationMethodTypes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.User.V2beta.ListAuthenticationMethodTypesRequest, global::Zitadel.User.V2beta.ListAuthenticationMethodTypesResponse>(serviceImpl.ListAuthenticationMethodTypes));
    }

  }
}
#endregion
