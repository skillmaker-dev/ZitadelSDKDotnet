// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: zitadel/webkey/v2beta/key.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Zitadel.Webkey.V2beta {

  /// <summary>Holder for reflection information generated from zitadel/webkey/v2beta/key.proto</summary>
  public static partial class KeyReflection {

    #region Descriptor
    /// <summary>File descriptor for zitadel/webkey/v2beta/key.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static KeyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch96aXRhZGVsL3dlYmtleS92MmJldGEva2V5LnByb3RvEhV6aXRhZGVsLndl",
            "YmtleS52MmJldGEaH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8a",
            "LnByb3RvYy1nZW4tb3BlbmFwaXYyL29wdGlvbnMvYW5ub3RhdGlvbnMucHJv",
            "dG8aF3ZhbGlkYXRlL3ZhbGlkYXRlLnByb3RvIs8DCgZXZWJLZXkSKAoCaWQY",
            "ASABKAlCGJJBFUoTIjY5NjI5MDEyOTA2NDg4MzM0IlICaWQSYAoNY3JlYXRp",
            "b25fZGF0ZRgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXBCH5JB",
            "HEoaIjIwMjQtMTItMThUMDc6NTA6NDcuNDkyWiJSDGNyZWF0aW9uRGF0ZRJc",
            "CgtjaGFuZ2VfZGF0ZRgDIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3Rh",
            "bXBCH5JBHEoaIjIwMjUtMDEtMjNUMTA6MzQ6MTguMDUxWiJSCmNoYW5nZURh",
            "dGUSMgoFc3RhdGUYBCABKA4yHC56aXRhZGVsLndlYmtleS52MmJldGEuU3Rh",
            "dGVSBXN0YXRlEi4KA3JzYRgFIAEoCzIaLnppdGFkZWwud2Via2V5LnYyYmV0",
            "YS5SU0FIAFIDcnNhEjQKBWVjZHNhGAYgASgLMhwueml0YWRlbC53ZWJrZXku",
            "djJiZXRhLkVDRFNBSABSBWVjZHNhEjoKB2VkMjU1MTkYByABKAsyHi56aXRh",
            "ZGVsLndlYmtleS52MmJldGEuRUQyNTUxOUgAUgdlZDI1NTE5QgUKA2tleSKz",
            "AQoDUlNBElAKBGJpdHMYASABKA4yHi56aXRhZGVsLndlYmtleS52MmJldGEu",
            "UlNBQml0c0IckkEPOg1SU0FfQklUU18yMDQ4+kIHggEEEAEgAFIEYml0cxJa",
            "CgZoYXNoZXIYAiABKA4yIC56aXRhZGVsLndlYmtleS52MmJldGEuUlNBSGFz",
            "aGVyQiCSQRM6EVJTQV9IQVNIRVJfU0hBMjU2+kIHggEEEAEgAFIGaGFzaGVy",
            "ImEKBUVDRFNBElgKBWN1cnZlGAEgASgOMiEueml0YWRlbC53ZWJrZXkudjJi",
            "ZXRhLkVDRFNBQ3VydmVCH5JBEjoQRUNEU0FfQ1VSVkVfUDI1NvpCB4IBBBAB",
            "IABSBWN1cnZlIgkKB0VEMjU1MTkqagoFU3RhdGUSFQoRU1RBVEVfVU5TUEVD",
            "SUZJRUQQABIRCg1TVEFURV9JTklUSUFMEAESEAoMU1RBVEVfQUNUSVZFEAIS",
            "EgoOU1RBVEVfSU5BQ1RJVkUQAxIRCg1TVEFURV9SRU1PVkVEEAQqXAoHUlNB",
            "Qml0cxIYChRSU0FfQklUU19VTlNQRUNJRklFRBAAEhEKDVJTQV9CSVRTXzIw",
            "NDgQARIRCg1SU0FfQklUU18zMDcyEAISEQoNUlNBX0JJVFNfNDA5NhADKmwK",
            "CVJTQUhhc2hlchIaChZSU0FfSEFTSEVSX1VOU1BFQ0lGSUVEEAASFQoRUlNB",
            "X0hBU0hFUl9TSEEyNTYQARIVChFSU0FfSEFTSEVSX1NIQTM4NBACEhUKEVJT",
            "QV9IQVNIRVJfU0hBNTEyEAMqawoKRUNEU0FDdXJ2ZRIbChdFQ0RTQV9DVVJW",
            "RV9VTlNQRUNJRklFRBAAEhQKEEVDRFNBX0NVUlZFX1AyNTYQARIUChBFQ0RT",
            "QV9DVVJWRV9QMzg0EAISFAoQRUNEU0FfQ1VSVkVfUDUxMhADQtUBChljb20u",
            "eml0YWRlbC53ZWJrZXkudjJiZXRhQghLZXlQcm90b1ABWjhnaXRodWIuY29t",
            "L3ppdGFkZWwveml0YWRlbC9wa2cvZ3JwYy93ZWJrZXkvdjJiZXRhO3dlYmtl",
            "eaICA1pXWKoCFVppdGFkZWwuV2Via2V5LlYyYmV0YcoCFVppdGFkZWxcV2Vi",
            "a2V5XFYyYmV0YeICIVppdGFkZWxcV2Via2V5XFYyYmV0YVxHUEJNZXRhZGF0",
            "YeoCF1ppdGFkZWw6OldlYmtleTo6VjJiZXRhYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Grpc.Gateway.ProtocGenOpenapiv2.Options.AnnotationsReflection.Descriptor, global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Zitadel.Webkey.V2beta.State), typeof(global::Zitadel.Webkey.V2beta.RSABits), typeof(global::Zitadel.Webkey.V2beta.RSAHasher), typeof(global::Zitadel.Webkey.V2beta.ECDSACurve), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Zitadel.Webkey.V2beta.WebKey), global::Zitadel.Webkey.V2beta.WebKey.Parser, new[]{ "Id", "CreationDate", "ChangeDate", "State", "Rsa", "Ecdsa", "Ed25519" }, new[]{ "Key" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Zitadel.Webkey.V2beta.RSA), global::Zitadel.Webkey.V2beta.RSA.Parser, new[]{ "Bits", "Hasher" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Zitadel.Webkey.V2beta.ECDSA), global::Zitadel.Webkey.V2beta.ECDSA.Parser, new[]{ "Curve" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Zitadel.Webkey.V2beta.ED25519), global::Zitadel.Webkey.V2beta.ED25519.Parser, null, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum State {
    [pbr::OriginalName("STATE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// A newly created key is in the initial state and published to the public key endpoint.
    /// </summary>
    [pbr::OriginalName("STATE_INITIAL")] Initial = 1,
    /// <summary>
    /// The active key is used to sign tokens. Only one key can be active at a time.
    /// </summary>
    [pbr::OriginalName("STATE_ACTIVE")] Active = 2,
    /// <summary>
    /// The inactive key is not used to sign tokens anymore, but still published to the public key endpoint.
    /// </summary>
    [pbr::OriginalName("STATE_INACTIVE")] Inactive = 3,
    /// <summary>
    /// The removed key is not used to sign tokens anymore and not published to the public key endpoint.
    /// </summary>
    [pbr::OriginalName("STATE_REMOVED")] Removed = 4,
  }

  public enum RSABits {
    [pbr::OriginalName("RSA_BITS_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// 2048 bit RSA key
    /// </summary>
    [pbr::OriginalName("RSA_BITS_2048")] _2048 = 1,
    /// <summary>
    /// 3072 bit RSA key
    /// </summary>
    [pbr::OriginalName("RSA_BITS_3072")] _3072 = 2,
    /// <summary>
    /// 4096 bit RSA key
    /// </summary>
    [pbr::OriginalName("RSA_BITS_4096")] _4096 = 3,
  }

  public enum RSAHasher {
    [pbr::OriginalName("RSA_HASHER_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// SHA256 hashing algorithm resulting in the RS256 algorithm header
    /// </summary>
    [pbr::OriginalName("RSA_HASHER_SHA256")] Sha256 = 1,
    /// <summary>
    /// SHA384 hashing algorithm resulting in the RS384 algorithm header
    /// </summary>
    [pbr::OriginalName("RSA_HASHER_SHA384")] Sha384 = 2,
    /// <summary>
    /// SHA512 hashing algorithm resulting in the RS512 algorithm header
    /// </summary>
    [pbr::OriginalName("RSA_HASHER_SHA512")] Sha512 = 3,
  }

  public enum ECDSACurve {
    [pbr::OriginalName("ECDSA_CURVE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// NIST P-256 curve resulting in the ES256 algorithm header
    /// </summary>
    [pbr::OriginalName("ECDSA_CURVE_P256")] P256 = 1,
    /// <summary>
    /// NIST P-384 curve resulting in the ES384 algorithm header
    /// </summary>
    [pbr::OriginalName("ECDSA_CURVE_P384")] P384 = 2,
    /// <summary>
    /// NIST P-512 curve resulting in the ES512 algorithm header
    /// </summary>
    [pbr::OriginalName("ECDSA_CURVE_P512")] P512 = 3,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class WebKey : pb::IMessage<WebKey>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<WebKey> _parser = new pb::MessageParser<WebKey>(() => new WebKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<WebKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Zitadel.Webkey.V2beta.KeyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WebKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WebKey(WebKey other) : this() {
      id_ = other.id_;
      creationDate_ = other.creationDate_ != null ? other.creationDate_.Clone() : null;
      changeDate_ = other.changeDate_ != null ? other.changeDate_.Clone() : null;
      state_ = other.state_;
      switch (other.KeyCase) {
        case KeyOneofCase.Rsa:
          Rsa = other.Rsa.Clone();
          break;
        case KeyOneofCase.Ecdsa:
          Ecdsa = other.Ecdsa.Clone();
          break;
        case KeyOneofCase.Ed25519:
          Ed25519 = other.Ed25519.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public WebKey Clone() {
      return new WebKey(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// The unique identifier of the key.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "creation_date" field.</summary>
    public const int CreationDateFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp creationDate_;
    /// <summary>
    /// The timestamp of the key creation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreationDate {
      get { return creationDate_; }
      set {
        creationDate_ = value;
      }
    }

    /// <summary>Field number for the "change_date" field.</summary>
    public const int ChangeDateFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp changeDate_;
    /// <summary>
    /// The timestamp of the last change to the key (e.g. creation, activation, deactivation).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ChangeDate {
      get { return changeDate_; }
      set {
        changeDate_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 4;
    private global::Zitadel.Webkey.V2beta.State state_ = global::Zitadel.Webkey.V2beta.State.Unspecified;
    /// <summary>
    /// State of the key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Zitadel.Webkey.V2beta.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "rsa" field.</summary>
    public const int RsaFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Zitadel.Webkey.V2beta.RSA Rsa {
      get { return keyCase_ == KeyOneofCase.Rsa ? (global::Zitadel.Webkey.V2beta.RSA) key_ : null; }
      set {
        key_ = value;
        keyCase_ = value == null ? KeyOneofCase.None : KeyOneofCase.Rsa;
      }
    }

    /// <summary>Field number for the "ecdsa" field.</summary>
    public const int EcdsaFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Zitadel.Webkey.V2beta.ECDSA Ecdsa {
      get { return keyCase_ == KeyOneofCase.Ecdsa ? (global::Zitadel.Webkey.V2beta.ECDSA) key_ : null; }
      set {
        key_ = value;
        keyCase_ = value == null ? KeyOneofCase.None : KeyOneofCase.Ecdsa;
      }
    }

    /// <summary>Field number for the "ed25519" field.</summary>
    public const int Ed25519FieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Zitadel.Webkey.V2beta.ED25519 Ed25519 {
      get { return keyCase_ == KeyOneofCase.Ed25519 ? (global::Zitadel.Webkey.V2beta.ED25519) key_ : null; }
      set {
        key_ = value;
        keyCase_ = value == null ? KeyOneofCase.None : KeyOneofCase.Ed25519;
      }
    }

    private object key_;
    /// <summary>Enum of possible cases for the "key" oneof.</summary>
    public enum KeyOneofCase {
      None = 0,
      Rsa = 5,
      Ecdsa = 6,
      Ed25519 = 7,
    }
    private KeyOneofCase keyCase_ = KeyOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyOneofCase KeyCase {
      get { return keyCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKey() {
      keyCase_ = KeyOneofCase.None;
      key_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as WebKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(WebKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(CreationDate, other.CreationDate)) return false;
      if (!object.Equals(ChangeDate, other.ChangeDate)) return false;
      if (State != other.State) return false;
      if (!object.Equals(Rsa, other.Rsa)) return false;
      if (!object.Equals(Ecdsa, other.Ecdsa)) return false;
      if (!object.Equals(Ed25519, other.Ed25519)) return false;
      if (KeyCase != other.KeyCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (creationDate_ != null) hash ^= CreationDate.GetHashCode();
      if (changeDate_ != null) hash ^= ChangeDate.GetHashCode();
      if (State != global::Zitadel.Webkey.V2beta.State.Unspecified) hash ^= State.GetHashCode();
      if (keyCase_ == KeyOneofCase.Rsa) hash ^= Rsa.GetHashCode();
      if (keyCase_ == KeyOneofCase.Ecdsa) hash ^= Ecdsa.GetHashCode();
      if (keyCase_ == KeyOneofCase.Ed25519) hash ^= Ed25519.GetHashCode();
      hash ^= (int) keyCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (creationDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreationDate);
      }
      if (changeDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ChangeDate);
      }
      if (State != global::Zitadel.Webkey.V2beta.State.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) State);
      }
      if (keyCase_ == KeyOneofCase.Rsa) {
        output.WriteRawTag(42);
        output.WriteMessage(Rsa);
      }
      if (keyCase_ == KeyOneofCase.Ecdsa) {
        output.WriteRawTag(50);
        output.WriteMessage(Ecdsa);
      }
      if (keyCase_ == KeyOneofCase.Ed25519) {
        output.WriteRawTag(58);
        output.WriteMessage(Ed25519);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (creationDate_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(CreationDate);
      }
      if (changeDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ChangeDate);
      }
      if (State != global::Zitadel.Webkey.V2beta.State.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) State);
      }
      if (keyCase_ == KeyOneofCase.Rsa) {
        output.WriteRawTag(42);
        output.WriteMessage(Rsa);
      }
      if (keyCase_ == KeyOneofCase.Ecdsa) {
        output.WriteRawTag(50);
        output.WriteMessage(Ecdsa);
      }
      if (keyCase_ == KeyOneofCase.Ed25519) {
        output.WriteRawTag(58);
        output.WriteMessage(Ed25519);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (creationDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreationDate);
      }
      if (changeDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ChangeDate);
      }
      if (State != global::Zitadel.Webkey.V2beta.State.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (keyCase_ == KeyOneofCase.Rsa) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Rsa);
      }
      if (keyCase_ == KeyOneofCase.Ecdsa) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ecdsa);
      }
      if (keyCase_ == KeyOneofCase.Ed25519) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ed25519);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(WebKey other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.creationDate_ != null) {
        if (creationDate_ == null) {
          CreationDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreationDate.MergeFrom(other.CreationDate);
      }
      if (other.changeDate_ != null) {
        if (changeDate_ == null) {
          ChangeDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ChangeDate.MergeFrom(other.ChangeDate);
      }
      if (other.State != global::Zitadel.Webkey.V2beta.State.Unspecified) {
        State = other.State;
      }
      switch (other.KeyCase) {
        case KeyOneofCase.Rsa:
          if (Rsa == null) {
            Rsa = new global::Zitadel.Webkey.V2beta.RSA();
          }
          Rsa.MergeFrom(other.Rsa);
          break;
        case KeyOneofCase.Ecdsa:
          if (Ecdsa == null) {
            Ecdsa = new global::Zitadel.Webkey.V2beta.ECDSA();
          }
          Ecdsa.MergeFrom(other.Ecdsa);
          break;
        case KeyOneofCase.Ed25519:
          if (Ed25519 == null) {
            Ed25519 = new global::Zitadel.Webkey.V2beta.ED25519();
          }
          Ed25519.MergeFrom(other.Ed25519);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (creationDate_ == null) {
              CreationDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreationDate);
            break;
          }
          case 26: {
            if (changeDate_ == null) {
              ChangeDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ChangeDate);
            break;
          }
          case 32: {
            State = (global::Zitadel.Webkey.V2beta.State) input.ReadEnum();
            break;
          }
          case 42: {
            global::Zitadel.Webkey.V2beta.RSA subBuilder = new global::Zitadel.Webkey.V2beta.RSA();
            if (keyCase_ == KeyOneofCase.Rsa) {
              subBuilder.MergeFrom(Rsa);
            }
            input.ReadMessage(subBuilder);
            Rsa = subBuilder;
            break;
          }
          case 50: {
            global::Zitadel.Webkey.V2beta.ECDSA subBuilder = new global::Zitadel.Webkey.V2beta.ECDSA();
            if (keyCase_ == KeyOneofCase.Ecdsa) {
              subBuilder.MergeFrom(Ecdsa);
            }
            input.ReadMessage(subBuilder);
            Ecdsa = subBuilder;
            break;
          }
          case 58: {
            global::Zitadel.Webkey.V2beta.ED25519 subBuilder = new global::Zitadel.Webkey.V2beta.ED25519();
            if (keyCase_ == KeyOneofCase.Ed25519) {
              subBuilder.MergeFrom(Ed25519);
            }
            input.ReadMessage(subBuilder);
            Ed25519 = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (creationDate_ == null) {
              CreationDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreationDate);
            break;
          }
          case 26: {
            if (changeDate_ == null) {
              ChangeDate = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ChangeDate);
            break;
          }
          case 32: {
            State = (global::Zitadel.Webkey.V2beta.State) input.ReadEnum();
            break;
          }
          case 42: {
            global::Zitadel.Webkey.V2beta.RSA subBuilder = new global::Zitadel.Webkey.V2beta.RSA();
            if (keyCase_ == KeyOneofCase.Rsa) {
              subBuilder.MergeFrom(Rsa);
            }
            input.ReadMessage(subBuilder);
            Rsa = subBuilder;
            break;
          }
          case 50: {
            global::Zitadel.Webkey.V2beta.ECDSA subBuilder = new global::Zitadel.Webkey.V2beta.ECDSA();
            if (keyCase_ == KeyOneofCase.Ecdsa) {
              subBuilder.MergeFrom(Ecdsa);
            }
            input.ReadMessage(subBuilder);
            Ecdsa = subBuilder;
            break;
          }
          case 58: {
            global::Zitadel.Webkey.V2beta.ED25519 subBuilder = new global::Zitadel.Webkey.V2beta.ED25519();
            if (keyCase_ == KeyOneofCase.Ed25519) {
              subBuilder.MergeFrom(Ed25519);
            }
            input.ReadMessage(subBuilder);
            Ed25519 = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class RSA : pb::IMessage<RSA>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RSA> _parser = new pb::MessageParser<RSA>(() => new RSA());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RSA> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Zitadel.Webkey.V2beta.KeyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RSA() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RSA(RSA other) : this() {
      bits_ = other.bits_;
      hasher_ = other.hasher_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RSA Clone() {
      return new RSA(this);
    }

    /// <summary>Field number for the "bits" field.</summary>
    public const int BitsFieldNumber = 1;
    private global::Zitadel.Webkey.V2beta.RSABits bits_ = global::Zitadel.Webkey.V2beta.RSABits.Unspecified;
    /// <summary>
    /// Bit size of the RSA key. Default is 2048 bits.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Zitadel.Webkey.V2beta.RSABits Bits {
      get { return bits_; }
      set {
        bits_ = value;
      }
    }

    /// <summary>Field number for the "hasher" field.</summary>
    public const int HasherFieldNumber = 2;
    private global::Zitadel.Webkey.V2beta.RSAHasher hasher_ = global::Zitadel.Webkey.V2beta.RSAHasher.Unspecified;
    /// <summary>
    /// Signing algrithm used. Default is SHA256.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Zitadel.Webkey.V2beta.RSAHasher Hasher {
      get { return hasher_; }
      set {
        hasher_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RSA);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RSA other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bits != other.Bits) return false;
      if (Hasher != other.Hasher) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Bits != global::Zitadel.Webkey.V2beta.RSABits.Unspecified) hash ^= Bits.GetHashCode();
      if (Hasher != global::Zitadel.Webkey.V2beta.RSAHasher.Unspecified) hash ^= Hasher.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Bits != global::Zitadel.Webkey.V2beta.RSABits.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Bits);
      }
      if (Hasher != global::Zitadel.Webkey.V2beta.RSAHasher.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Hasher);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Bits != global::Zitadel.Webkey.V2beta.RSABits.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Bits);
      }
      if (Hasher != global::Zitadel.Webkey.V2beta.RSAHasher.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Hasher);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Bits != global::Zitadel.Webkey.V2beta.RSABits.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Bits);
      }
      if (Hasher != global::Zitadel.Webkey.V2beta.RSAHasher.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Hasher);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RSA other) {
      if (other == null) {
        return;
      }
      if (other.Bits != global::Zitadel.Webkey.V2beta.RSABits.Unspecified) {
        Bits = other.Bits;
      }
      if (other.Hasher != global::Zitadel.Webkey.V2beta.RSAHasher.Unspecified) {
        Hasher = other.Hasher;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Bits = (global::Zitadel.Webkey.V2beta.RSABits) input.ReadEnum();
            break;
          }
          case 16: {
            Hasher = (global::Zitadel.Webkey.V2beta.RSAHasher) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Bits = (global::Zitadel.Webkey.V2beta.RSABits) input.ReadEnum();
            break;
          }
          case 16: {
            Hasher = (global::Zitadel.Webkey.V2beta.RSAHasher) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ECDSA : pb::IMessage<ECDSA>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ECDSA> _parser = new pb::MessageParser<ECDSA>(() => new ECDSA());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ECDSA> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Zitadel.Webkey.V2beta.KeyReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECDSA() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECDSA(ECDSA other) : this() {
      curve_ = other.curve_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ECDSA Clone() {
      return new ECDSA(this);
    }

    /// <summary>Field number for the "curve" field.</summary>
    public const int CurveFieldNumber = 1;
    private global::Zitadel.Webkey.V2beta.ECDSACurve curve_ = global::Zitadel.Webkey.V2beta.ECDSACurve.Unspecified;
    /// <summary>
    /// Curve of the ECDSA key. Default is P-256.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Zitadel.Webkey.V2beta.ECDSACurve Curve {
      get { return curve_; }
      set {
        curve_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ECDSA);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ECDSA other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Curve != other.Curve) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Curve != global::Zitadel.Webkey.V2beta.ECDSACurve.Unspecified) hash ^= Curve.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Curve != global::Zitadel.Webkey.V2beta.ECDSACurve.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Curve);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Curve != global::Zitadel.Webkey.V2beta.ECDSACurve.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Curve);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Curve != global::Zitadel.Webkey.V2beta.ECDSACurve.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Curve);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ECDSA other) {
      if (other == null) {
        return;
      }
      if (other.Curve != global::Zitadel.Webkey.V2beta.ECDSACurve.Unspecified) {
        Curve = other.Curve;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Curve = (global::Zitadel.Webkey.V2beta.ECDSACurve) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Curve = (global::Zitadel.Webkey.V2beta.ECDSACurve) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class ED25519 : pb::IMessage<ED25519>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ED25519> _parser = new pb::MessageParser<ED25519>(() => new ED25519());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ED25519> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Zitadel.Webkey.V2beta.KeyReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ED25519() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ED25519(ED25519 other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ED25519 Clone() {
      return new ED25519(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ED25519);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ED25519 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ED25519 other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
