// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: zitadel/resources/user/v3alpha/user_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Zitadel.Resources.User.V3alpha {
  public static partial class ZITADELUsers
  {
    static readonly string __ServiceName = "zitadel.resources.user.v3alpha.ZITADELUsers";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.SearchUsersRequest> __Marshaller_zitadel_resources_user_v3alpha_SearchUsersRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.SearchUsersRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.SearchUsersResponse> __Marshaller_zitadel_resources_user_v3alpha_SearchUsersResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.SearchUsersResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.GetUserRequest> __Marshaller_zitadel_resources_user_v3alpha_GetUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.GetUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.GetUserResponse> __Marshaller_zitadel_resources_user_v3alpha_GetUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.GetUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.CreateUserRequest> __Marshaller_zitadel_resources_user_v3alpha_CreateUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.CreateUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.CreateUserResponse> __Marshaller_zitadel_resources_user_v3alpha_CreateUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.CreateUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.PatchUserRequest> __Marshaller_zitadel_resources_user_v3alpha_PatchUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.PatchUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.PatchUserResponse> __Marshaller_zitadel_resources_user_v3alpha_PatchUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.PatchUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.DeactivateUserRequest> __Marshaller_zitadel_resources_user_v3alpha_DeactivateUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.DeactivateUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.DeactivateUserResponse> __Marshaller_zitadel_resources_user_v3alpha_DeactivateUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.DeactivateUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.ActivateUserRequest> __Marshaller_zitadel_resources_user_v3alpha_ActivateUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.ActivateUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.ActivateUserResponse> __Marshaller_zitadel_resources_user_v3alpha_ActivateUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.ActivateUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.LockUserRequest> __Marshaller_zitadel_resources_user_v3alpha_LockUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.LockUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.LockUserResponse> __Marshaller_zitadel_resources_user_v3alpha_LockUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.LockUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.UnlockUserRequest> __Marshaller_zitadel_resources_user_v3alpha_UnlockUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.UnlockUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.UnlockUserResponse> __Marshaller_zitadel_resources_user_v3alpha_UnlockUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.UnlockUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.DeleteUserRequest> __Marshaller_zitadel_resources_user_v3alpha_DeleteUserRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.DeleteUserRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.DeleteUserResponse> __Marshaller_zitadel_resources_user_v3alpha_DeleteUserResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.DeleteUserResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.SetContactEmailRequest> __Marshaller_zitadel_resources_user_v3alpha_SetContactEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.SetContactEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.SetContactEmailResponse> __Marshaller_zitadel_resources_user_v3alpha_SetContactEmailResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.SetContactEmailResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.VerifyContactEmailRequest> __Marshaller_zitadel_resources_user_v3alpha_VerifyContactEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.VerifyContactEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.VerifyContactEmailResponse> __Marshaller_zitadel_resources_user_v3alpha_VerifyContactEmailResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.VerifyContactEmailResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeRequest> __Marshaller_zitadel_resources_user_v3alpha_ResendContactEmailCodeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeResponse> __Marshaller_zitadel_resources_user_v3alpha_ResendContactEmailCodeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.SetContactPhoneRequest> __Marshaller_zitadel_resources_user_v3alpha_SetContactPhoneRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.SetContactPhoneRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.SetContactPhoneResponse> __Marshaller_zitadel_resources_user_v3alpha_SetContactPhoneResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.SetContactPhoneResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneRequest> __Marshaller_zitadel_resources_user_v3alpha_VerifyContactPhoneRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneResponse> __Marshaller_zitadel_resources_user_v3alpha_VerifyContactPhoneResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeRequest> __Marshaller_zitadel_resources_user_v3alpha_ResendContactPhoneCodeRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeResponse> __Marshaller_zitadel_resources_user_v3alpha_ResendContactPhoneCodeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.AddUsernameRequest> __Marshaller_zitadel_resources_user_v3alpha_AddUsernameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.AddUsernameRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.AddUsernameResponse> __Marshaller_zitadel_resources_user_v3alpha_AddUsernameResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.AddUsernameResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.RemoveUsernameRequest> __Marshaller_zitadel_resources_user_v3alpha_RemoveUsernameRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.RemoveUsernameRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.RemoveUsernameResponse> __Marshaller_zitadel_resources_user_v3alpha_RemoveUsernameResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.RemoveUsernameResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.SetPasswordRequest> __Marshaller_zitadel_resources_user_v3alpha_SetPasswordRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.SetPasswordRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.SetPasswordResponse> __Marshaller_zitadel_resources_user_v3alpha_SetPasswordResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.SetPasswordResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.RequestPasswordResetRequest> __Marshaller_zitadel_resources_user_v3alpha_RequestPasswordResetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.RequestPasswordResetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.RequestPasswordResetResponse> __Marshaller_zitadel_resources_user_v3alpha_RequestPasswordResetResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.RequestPasswordResetResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationRequest> __Marshaller_zitadel_resources_user_v3alpha_StartWebAuthNRegistrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationResponse> __Marshaller_zitadel_resources_user_v3alpha_StartWebAuthNRegistrationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationRequest> __Marshaller_zitadel_resources_user_v3alpha_VerifyWebAuthNRegistrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationResponse> __Marshaller_zitadel_resources_user_v3alpha_VerifyWebAuthNRegistrationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkRequest> __Marshaller_zitadel_resources_user_v3alpha_CreateWebAuthNRegistrationLinkRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkResponse> __Marshaller_zitadel_resources_user_v3alpha_CreateWebAuthNRegistrationLinkResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorRequest> __Marshaller_zitadel_resources_user_v3alpha_RemoveWebAuthNAuthenticatorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorResponse> __Marshaller_zitadel_resources_user_v3alpha_RemoveWebAuthNAuthenticatorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationRequest> __Marshaller_zitadel_resources_user_v3alpha_StartTOTPRegistrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationResponse> __Marshaller_zitadel_resources_user_v3alpha_StartTOTPRegistrationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationRequest> __Marshaller_zitadel_resources_user_v3alpha_VerifyTOTPRegistrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationResponse> __Marshaller_zitadel_resources_user_v3alpha_VerifyTOTPRegistrationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorRequest> __Marshaller_zitadel_resources_user_v3alpha_RemoveTOTPAuthenticatorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorResponse> __Marshaller_zitadel_resources_user_v3alpha_RemoveTOTPAuthenticatorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorRequest> __Marshaller_zitadel_resources_user_v3alpha_AddOTPSMSAuthenticatorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorResponse> __Marshaller_zitadel_resources_user_v3alpha_AddOTPSMSAuthenticatorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationRequest> __Marshaller_zitadel_resources_user_v3alpha_VerifyOTPSMSRegistrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationResponse> __Marshaller_zitadel_resources_user_v3alpha_VerifyOTPSMSRegistrationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorRequest> __Marshaller_zitadel_resources_user_v3alpha_RemoveOTPSMSAuthenticatorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorResponse> __Marshaller_zitadel_resources_user_v3alpha_RemoveOTPSMSAuthenticatorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorRequest> __Marshaller_zitadel_resources_user_v3alpha_AddOTPEmailAuthenticatorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorResponse> __Marshaller_zitadel_resources_user_v3alpha_AddOTPEmailAuthenticatorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationRequest> __Marshaller_zitadel_resources_user_v3alpha_VerifyOTPEmailRegistrationRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationResponse> __Marshaller_zitadel_resources_user_v3alpha_VerifyOTPEmailRegistrationResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorRequest> __Marshaller_zitadel_resources_user_v3alpha_RemoveOTPEmailAuthenticatorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorResponse> __Marshaller_zitadel_resources_user_v3alpha_RemoveOTPEmailAuthenticatorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentRequest> __Marshaller_zitadel_resources_user_v3alpha_StartIdentityProviderIntentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentResponse> __Marshaller_zitadel_resources_user_v3alpha_StartIdentityProviderIntentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentRequest> __Marshaller_zitadel_resources_user_v3alpha_GetIdentityProviderIntentRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentResponse> __Marshaller_zitadel_resources_user_v3alpha_GetIdentityProviderIntentResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorRequest> __Marshaller_zitadel_resources_user_v3alpha_AddIDPAuthenticatorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorResponse> __Marshaller_zitadel_resources_user_v3alpha_AddIDPAuthenticatorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorRequest> __Marshaller_zitadel_resources_user_v3alpha_RemoveIDPAuthenticatorRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorResponse> __Marshaller_zitadel_resources_user_v3alpha_RemoveIDPAuthenticatorResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.SearchUsersRequest, global::Zitadel.Resources.User.V3alpha.SearchUsersResponse> __Method_SearchUsers = new grpc::Method<global::Zitadel.Resources.User.V3alpha.SearchUsersRequest, global::Zitadel.Resources.User.V3alpha.SearchUsersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SearchUsers",
        __Marshaller_zitadel_resources_user_v3alpha_SearchUsersRequest,
        __Marshaller_zitadel_resources_user_v3alpha_SearchUsersResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.GetUserRequest, global::Zitadel.Resources.User.V3alpha.GetUserResponse> __Method_GetUser = new grpc::Method<global::Zitadel.Resources.User.V3alpha.GetUserRequest, global::Zitadel.Resources.User.V3alpha.GetUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUser",
        __Marshaller_zitadel_resources_user_v3alpha_GetUserRequest,
        __Marshaller_zitadel_resources_user_v3alpha_GetUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.CreateUserRequest, global::Zitadel.Resources.User.V3alpha.CreateUserResponse> __Method_CreateUser = new grpc::Method<global::Zitadel.Resources.User.V3alpha.CreateUserRequest, global::Zitadel.Resources.User.V3alpha.CreateUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateUser",
        __Marshaller_zitadel_resources_user_v3alpha_CreateUserRequest,
        __Marshaller_zitadel_resources_user_v3alpha_CreateUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.PatchUserRequest, global::Zitadel.Resources.User.V3alpha.PatchUserResponse> __Method_PatchUser = new grpc::Method<global::Zitadel.Resources.User.V3alpha.PatchUserRequest, global::Zitadel.Resources.User.V3alpha.PatchUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PatchUser",
        __Marshaller_zitadel_resources_user_v3alpha_PatchUserRequest,
        __Marshaller_zitadel_resources_user_v3alpha_PatchUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.DeactivateUserRequest, global::Zitadel.Resources.User.V3alpha.DeactivateUserResponse> __Method_DeactivateUser = new grpc::Method<global::Zitadel.Resources.User.V3alpha.DeactivateUserRequest, global::Zitadel.Resources.User.V3alpha.DeactivateUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeactivateUser",
        __Marshaller_zitadel_resources_user_v3alpha_DeactivateUserRequest,
        __Marshaller_zitadel_resources_user_v3alpha_DeactivateUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.ActivateUserRequest, global::Zitadel.Resources.User.V3alpha.ActivateUserResponse> __Method_ActivateUser = new grpc::Method<global::Zitadel.Resources.User.V3alpha.ActivateUserRequest, global::Zitadel.Resources.User.V3alpha.ActivateUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ActivateUser",
        __Marshaller_zitadel_resources_user_v3alpha_ActivateUserRequest,
        __Marshaller_zitadel_resources_user_v3alpha_ActivateUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.LockUserRequest, global::Zitadel.Resources.User.V3alpha.LockUserResponse> __Method_LockUser = new grpc::Method<global::Zitadel.Resources.User.V3alpha.LockUserRequest, global::Zitadel.Resources.User.V3alpha.LockUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "LockUser",
        __Marshaller_zitadel_resources_user_v3alpha_LockUserRequest,
        __Marshaller_zitadel_resources_user_v3alpha_LockUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.UnlockUserRequest, global::Zitadel.Resources.User.V3alpha.UnlockUserResponse> __Method_UnlockUser = new grpc::Method<global::Zitadel.Resources.User.V3alpha.UnlockUserRequest, global::Zitadel.Resources.User.V3alpha.UnlockUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UnlockUser",
        __Marshaller_zitadel_resources_user_v3alpha_UnlockUserRequest,
        __Marshaller_zitadel_resources_user_v3alpha_UnlockUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.DeleteUserRequest, global::Zitadel.Resources.User.V3alpha.DeleteUserResponse> __Method_DeleteUser = new grpc::Method<global::Zitadel.Resources.User.V3alpha.DeleteUserRequest, global::Zitadel.Resources.User.V3alpha.DeleteUserResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteUser",
        __Marshaller_zitadel_resources_user_v3alpha_DeleteUserRequest,
        __Marshaller_zitadel_resources_user_v3alpha_DeleteUserResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.SetContactEmailRequest, global::Zitadel.Resources.User.V3alpha.SetContactEmailResponse> __Method_SetContactEmail = new grpc::Method<global::Zitadel.Resources.User.V3alpha.SetContactEmailRequest, global::Zitadel.Resources.User.V3alpha.SetContactEmailResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetContactEmail",
        __Marshaller_zitadel_resources_user_v3alpha_SetContactEmailRequest,
        __Marshaller_zitadel_resources_user_v3alpha_SetContactEmailResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.VerifyContactEmailRequest, global::Zitadel.Resources.User.V3alpha.VerifyContactEmailResponse> __Method_VerifyContactEmail = new grpc::Method<global::Zitadel.Resources.User.V3alpha.VerifyContactEmailRequest, global::Zitadel.Resources.User.V3alpha.VerifyContactEmailResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyContactEmail",
        __Marshaller_zitadel_resources_user_v3alpha_VerifyContactEmailRequest,
        __Marshaller_zitadel_resources_user_v3alpha_VerifyContactEmailResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeRequest, global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeResponse> __Method_ResendContactEmailCode = new grpc::Method<global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeRequest, global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResendContactEmailCode",
        __Marshaller_zitadel_resources_user_v3alpha_ResendContactEmailCodeRequest,
        __Marshaller_zitadel_resources_user_v3alpha_ResendContactEmailCodeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.SetContactPhoneRequest, global::Zitadel.Resources.User.V3alpha.SetContactPhoneResponse> __Method_SetContactPhone = new grpc::Method<global::Zitadel.Resources.User.V3alpha.SetContactPhoneRequest, global::Zitadel.Resources.User.V3alpha.SetContactPhoneResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetContactPhone",
        __Marshaller_zitadel_resources_user_v3alpha_SetContactPhoneRequest,
        __Marshaller_zitadel_resources_user_v3alpha_SetContactPhoneResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneRequest, global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneResponse> __Method_VerifyContactPhone = new grpc::Method<global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneRequest, global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyContactPhone",
        __Marshaller_zitadel_resources_user_v3alpha_VerifyContactPhoneRequest,
        __Marshaller_zitadel_resources_user_v3alpha_VerifyContactPhoneResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeRequest, global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeResponse> __Method_ResendContactPhoneCode = new grpc::Method<global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeRequest, global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ResendContactPhoneCode",
        __Marshaller_zitadel_resources_user_v3alpha_ResendContactPhoneCodeRequest,
        __Marshaller_zitadel_resources_user_v3alpha_ResendContactPhoneCodeResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.AddUsernameRequest, global::Zitadel.Resources.User.V3alpha.AddUsernameResponse> __Method_AddUsername = new grpc::Method<global::Zitadel.Resources.User.V3alpha.AddUsernameRequest, global::Zitadel.Resources.User.V3alpha.AddUsernameResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddUsername",
        __Marshaller_zitadel_resources_user_v3alpha_AddUsernameRequest,
        __Marshaller_zitadel_resources_user_v3alpha_AddUsernameResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.RemoveUsernameRequest, global::Zitadel.Resources.User.V3alpha.RemoveUsernameResponse> __Method_RemoveUsername = new grpc::Method<global::Zitadel.Resources.User.V3alpha.RemoveUsernameRequest, global::Zitadel.Resources.User.V3alpha.RemoveUsernameResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveUsername",
        __Marshaller_zitadel_resources_user_v3alpha_RemoveUsernameRequest,
        __Marshaller_zitadel_resources_user_v3alpha_RemoveUsernameResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.SetPasswordRequest, global::Zitadel.Resources.User.V3alpha.SetPasswordResponse> __Method_SetPassword = new grpc::Method<global::Zitadel.Resources.User.V3alpha.SetPasswordRequest, global::Zitadel.Resources.User.V3alpha.SetPasswordResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "SetPassword",
        __Marshaller_zitadel_resources_user_v3alpha_SetPasswordRequest,
        __Marshaller_zitadel_resources_user_v3alpha_SetPasswordResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.RequestPasswordResetRequest, global::Zitadel.Resources.User.V3alpha.RequestPasswordResetResponse> __Method_RequestPasswordReset = new grpc::Method<global::Zitadel.Resources.User.V3alpha.RequestPasswordResetRequest, global::Zitadel.Resources.User.V3alpha.RequestPasswordResetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RequestPasswordReset",
        __Marshaller_zitadel_resources_user_v3alpha_RequestPasswordResetRequest,
        __Marshaller_zitadel_resources_user_v3alpha_RequestPasswordResetResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationRequest, global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationResponse> __Method_StartWebAuthNRegistration = new grpc::Method<global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationRequest, global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartWebAuthNRegistration",
        __Marshaller_zitadel_resources_user_v3alpha_StartWebAuthNRegistrationRequest,
        __Marshaller_zitadel_resources_user_v3alpha_StartWebAuthNRegistrationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationRequest, global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationResponse> __Method_VerifyWebAuthNRegistration = new grpc::Method<global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationRequest, global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyWebAuthNRegistration",
        __Marshaller_zitadel_resources_user_v3alpha_VerifyWebAuthNRegistrationRequest,
        __Marshaller_zitadel_resources_user_v3alpha_VerifyWebAuthNRegistrationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkRequest, global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkResponse> __Method_CreateWebAuthNRegistrationLink = new grpc::Method<global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkRequest, global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateWebAuthNRegistrationLink",
        __Marshaller_zitadel_resources_user_v3alpha_CreateWebAuthNRegistrationLinkRequest,
        __Marshaller_zitadel_resources_user_v3alpha_CreateWebAuthNRegistrationLinkResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorResponse> __Method_RemoveWebAuthNAuthenticator = new grpc::Method<global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveWebAuthNAuthenticator",
        __Marshaller_zitadel_resources_user_v3alpha_RemoveWebAuthNAuthenticatorRequest,
        __Marshaller_zitadel_resources_user_v3alpha_RemoveWebAuthNAuthenticatorResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationRequest, global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationResponse> __Method_StartTOTPRegistration = new grpc::Method<global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationRequest, global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartTOTPRegistration",
        __Marshaller_zitadel_resources_user_v3alpha_StartTOTPRegistrationRequest,
        __Marshaller_zitadel_resources_user_v3alpha_StartTOTPRegistrationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationRequest, global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationResponse> __Method_VerifyTOTPRegistration = new grpc::Method<global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationRequest, global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyTOTPRegistration",
        __Marshaller_zitadel_resources_user_v3alpha_VerifyTOTPRegistrationRequest,
        __Marshaller_zitadel_resources_user_v3alpha_VerifyTOTPRegistrationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorResponse> __Method_RemoveTOTPAuthenticator = new grpc::Method<global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveTOTPAuthenticator",
        __Marshaller_zitadel_resources_user_v3alpha_RemoveTOTPAuthenticatorRequest,
        __Marshaller_zitadel_resources_user_v3alpha_RemoveTOTPAuthenticatorResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorResponse> __Method_AddOTPSMSAuthenticator = new grpc::Method<global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddOTPSMSAuthenticator",
        __Marshaller_zitadel_resources_user_v3alpha_AddOTPSMSAuthenticatorRequest,
        __Marshaller_zitadel_resources_user_v3alpha_AddOTPSMSAuthenticatorResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationRequest, global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationResponse> __Method_VerifyOTPSMSRegistration = new grpc::Method<global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationRequest, global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyOTPSMSRegistration",
        __Marshaller_zitadel_resources_user_v3alpha_VerifyOTPSMSRegistrationRequest,
        __Marshaller_zitadel_resources_user_v3alpha_VerifyOTPSMSRegistrationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorResponse> __Method_RemoveOTPSMSAuthenticator = new grpc::Method<global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveOTPSMSAuthenticator",
        __Marshaller_zitadel_resources_user_v3alpha_RemoveOTPSMSAuthenticatorRequest,
        __Marshaller_zitadel_resources_user_v3alpha_RemoveOTPSMSAuthenticatorResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorResponse> __Method_AddOTPEmailAuthenticator = new grpc::Method<global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddOTPEmailAuthenticator",
        __Marshaller_zitadel_resources_user_v3alpha_AddOTPEmailAuthenticatorRequest,
        __Marshaller_zitadel_resources_user_v3alpha_AddOTPEmailAuthenticatorResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationRequest, global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationResponse> __Method_VerifyOTPEmailRegistration = new grpc::Method<global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationRequest, global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyOTPEmailRegistration",
        __Marshaller_zitadel_resources_user_v3alpha_VerifyOTPEmailRegistrationRequest,
        __Marshaller_zitadel_resources_user_v3alpha_VerifyOTPEmailRegistrationResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorResponse> __Method_RemoveOTPEmailAuthenticator = new grpc::Method<global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveOTPEmailAuthenticator",
        __Marshaller_zitadel_resources_user_v3alpha_RemoveOTPEmailAuthenticatorRequest,
        __Marshaller_zitadel_resources_user_v3alpha_RemoveOTPEmailAuthenticatorResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentRequest, global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentResponse> __Method_StartIdentityProviderIntent = new grpc::Method<global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentRequest, global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "StartIdentityProviderIntent",
        __Marshaller_zitadel_resources_user_v3alpha_StartIdentityProviderIntentRequest,
        __Marshaller_zitadel_resources_user_v3alpha_StartIdentityProviderIntentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentRequest, global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentResponse> __Method_GetIdentityProviderIntent = new grpc::Method<global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentRequest, global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetIdentityProviderIntent",
        __Marshaller_zitadel_resources_user_v3alpha_GetIdentityProviderIntentRequest,
        __Marshaller_zitadel_resources_user_v3alpha_GetIdentityProviderIntentResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorResponse> __Method_AddIDPAuthenticator = new grpc::Method<global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddIDPAuthenticator",
        __Marshaller_zitadel_resources_user_v3alpha_AddIDPAuthenticatorRequest,
        __Marshaller_zitadel_resources_user_v3alpha_AddIDPAuthenticatorResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorResponse> __Method_RemoveIDPAuthenticator = new grpc::Method<global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveIDPAuthenticator",
        __Marshaller_zitadel_resources_user_v3alpha_RemoveIDPAuthenticatorRequest,
        __Marshaller_zitadel_resources_user_v3alpha_RemoveIDPAuthenticatorResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Zitadel.Resources.User.V3alpha.UserServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ZITADELUsers</summary>
    [grpc::BindServiceMethod(typeof(ZITADELUsers), "BindService")]
    public abstract partial class ZITADELUsersBase
    {
      /// <summary>
      /// Search users
      ///
      /// Search all matching users. By default, we will return all users of your instance.
      /// Make sure to include a limit and sorting for pagination.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.SearchUsersResponse> SearchUsers(global::Zitadel.Resources.User.V3alpha.SearchUsersRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// User by ID
      ///
      /// Returns the user identified by the requested ID.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.GetUserResponse> GetUser(global::Zitadel.Resources.User.V3alpha.GetUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a user
      ///
      /// Create a new user with an optional data schema.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.CreateUserResponse> CreateUser(global::Zitadel.Resources.User.V3alpha.CreateUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Patch a user
      ///
      /// Patch an existing user with data based on a user schema.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.PatchUserResponse> PatchUser(global::Zitadel.Resources.User.V3alpha.PatchUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Deactivate a user
      ///
      /// Deactivate an existing user and change the state 'deactivated'.
      /// The user will not be able to log in anymore.
      /// Use deactivate user when the user should not be able to use the account anymore,
      /// but you still need access to the user data.
      ///
      /// The endpoint returns an error if the user is already in the state 'deactivated'.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.DeactivateUserResponse> DeactivateUser(global::Zitadel.Resources.User.V3alpha.DeactivateUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Activate a user
      ///
      /// Activate a previously deactivated user and change the state to 'active'.
      /// The user will be able to log in again.
      ///
      /// The endpoint returns an error if the user is not in the state 'deactivated'.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.ActivateUserResponse> ActivateUser(global::Zitadel.Resources.User.V3alpha.ActivateUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Lock a user
      ///
      /// Lock an existing user and change the state 'locked'.
      /// The user will not be able to log in anymore.
      /// Use lock user when the user should temporarily not be able to log in
      /// because of an event that happened (wrong password, etc.)
      ///
      /// The endpoint returns an error if the user is already in the state 'locked'.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.LockUserResponse> LockUser(global::Zitadel.Resources.User.V3alpha.LockUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Unlock a user
      ///
      /// Unlock a previously locked user and change the state to 'active'.
      /// The user will be able to log in again.
      ///
      /// The endpoint returns an error if the user is not in the state 'locked'.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.UnlockUserResponse> UnlockUser(global::Zitadel.Resources.User.V3alpha.UnlockUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Delete a user
      ///
      /// Delete an existing user and change the state to 'deleted'.
      /// The user will be able to log in anymore.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.DeleteUserResponse> DeleteUser(global::Zitadel.Resources.User.V3alpha.DeleteUserRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Set contact email
      ///
      /// Add or update the contact email address of a user.
      /// If the email is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by email.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.SetContactEmailResponse> SetContactEmail(global::Zitadel.Resources.User.V3alpha.SetContactEmailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Verify the contact email
      ///
      /// Verify the contact email with the provided code.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.VerifyContactEmailResponse> VerifyContactEmail(global::Zitadel.Resources.User.V3alpha.VerifyContactEmailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Resend the contact email code
      ///
      /// Resend the email with the verification code for the contact email address.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeResponse> ResendContactEmailCode(global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Set contact phone
      ///
      /// Add or update the contact phone number of a user.
      /// If the phone is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by SMS.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.SetContactPhoneResponse> SetContactPhone(global::Zitadel.Resources.User.V3alpha.SetContactPhoneRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Verify the contact phone
      ///
      /// Verify the contact phone with the provided code.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneResponse> VerifyContactPhone(global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Resend the contact phone code
      ///
      /// Resend the phone with the verification code for the contact phone number.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeResponse> ResendContactPhoneCode(global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add a username
      ///
      /// Add a new unique username to a user. The username will be used to identify the user on authentication.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.AddUsernameResponse> AddUsername(global::Zitadel.Resources.User.V3alpha.AddUsernameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove a username
      ///
      /// Remove an existing username of a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.RemoveUsernameResponse> RemoveUsername(global::Zitadel.Resources.User.V3alpha.RemoveUsernameRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Set a password
      ///
      /// Add, update or reset a user's password with either a verification code or the current password.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.SetPasswordResponse> SetPassword(global::Zitadel.Resources.User.V3alpha.SetPasswordRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Request password reset
      ///
      /// Request a code to be able to set a new password.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.RequestPasswordResetResponse> RequestPasswordReset(global::Zitadel.Resources.User.V3alpha.RequestPasswordResetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Start a WebAuthN registration
      ///
      /// Start the registration of a new WebAuthN device (e.g. Passkeys) for a user.
      /// As a response the public key credential creation options are returned,
      /// which are used to verify the device.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationResponse> StartWebAuthNRegistration(global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Verify a WebAuthN registration
      ///
      /// Verify the WebAuthN registration started by StartWebAuthNRegistration with the public key credential.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationResponse> VerifyWebAuthNRegistration(global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Create a WebAuthN registration link
      ///
      /// Create a link, which includes a code, that can either be returned or directly sent to the user.
      /// The code will allow the user to start a new WebAuthN registration.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkResponse> CreateWebAuthNRegistrationLink(global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove a WebAuthN authenticator
      ///
      /// Remove an existing WebAuthN authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorResponse> RemoveWebAuthNAuthenticator(global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Start a TOTP registration
      ///
      /// Start the registration of a new time-based one-time password (TOTP) generator for a user.
      /// As a response a secret is returned, which is used to initialize a TOTP app or device.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationResponse> StartTOTPRegistration(global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Verify a TOTP registration
      ///
      /// Verify the time-based one-time password (TOTP) registration with the generated code.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationResponse> VerifyTOTPRegistration(global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove a TOTP authenticator
      ///
      /// Remove an existing time-based one-time password (TOTP) authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorResponse> RemoveTOTPAuthenticator(global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add a OTP SMS authenticator
      ///
      /// Add a new one-time password (OTP) SMS authenticator to a user.
      /// If the phone is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by SMS.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorResponse> AddOTPSMSAuthenticator(global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Verify OTP SMS registration
      ///
      /// Verify the OTP SMS registration with the provided code.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationResponse> VerifyOTPSMSRegistration(global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove a OTP SMS authenticator
      ///
      /// Remove an existing one-time password (OTP) SMS authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorResponse> RemoveOTPSMSAuthenticator(global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add a OTP Email authenticator
      ///
      /// Add a new one-time password (OTP) Email authenticator to a user.
      /// If the email is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by email.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorResponse> AddOTPEmailAuthenticator(global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Verify OTP Email registration
      ///
      /// Verify the OTP Email registration with the provided code.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationResponse> VerifyOTPEmailRegistration(global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove a OTP Email authenticator
      ///
      /// Remove an existing one-time password (OTP) Email authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorResponse> RemoveOTPEmailAuthenticator(global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Start an IDP authentication intent
      ///
      /// Start a new authentication intent on configured identity provider (IDP) for external login, registration or linking.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentResponse> StartIdentityProviderIntent(global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Get the information of the IDP authentication intent
      ///
      /// Get the information returned by the identity provider (IDP) for registration or updating an existing user with new information.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentResponse> GetIdentityProviderIntent(global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Add an IDP authenticator to a user
      ///
      /// Add a new identity provider (IDP) authenticator to an existing user.
      /// This will allow the user to authenticate with the provided IDP.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorResponse> AddIDPAuthenticator(global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      /// Remove an IDP authenticator
      ///
      /// Remove an existing identity provider (IDP) authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorResponse> RemoveIDPAuthenticator(global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ZITADELUsers</summary>
    public partial class ZITADELUsersClient : grpc::ClientBase<ZITADELUsersClient>
    {
      /// <summary>Creates a new client for ZITADELUsers</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ZITADELUsersClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ZITADELUsers that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ZITADELUsersClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ZITADELUsersClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ZITADELUsersClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Search users
      ///
      /// Search all matching users. By default, we will return all users of your instance.
      /// Make sure to include a limit and sorting for pagination.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.SearchUsersResponse SearchUsers(global::Zitadel.Resources.User.V3alpha.SearchUsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchUsers(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search users
      ///
      /// Search all matching users. By default, we will return all users of your instance.
      /// Make sure to include a limit and sorting for pagination.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.SearchUsersResponse SearchUsers(global::Zitadel.Resources.User.V3alpha.SearchUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SearchUsers, null, options, request);
      }
      /// <summary>
      /// Search users
      ///
      /// Search all matching users. By default, we will return all users of your instance.
      /// Make sure to include a limit and sorting for pagination.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.SearchUsersResponse> SearchUsersAsync(global::Zitadel.Resources.User.V3alpha.SearchUsersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SearchUsersAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Search users
      ///
      /// Search all matching users. By default, we will return all users of your instance.
      /// Make sure to include a limit and sorting for pagination.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.SearchUsersResponse> SearchUsersAsync(global::Zitadel.Resources.User.V3alpha.SearchUsersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SearchUsers, null, options, request);
      }
      /// <summary>
      /// User by ID
      ///
      /// Returns the user identified by the requested ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.GetUserResponse GetUser(global::Zitadel.Resources.User.V3alpha.GetUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// User by ID
      ///
      /// Returns the user identified by the requested ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.GetUserResponse GetUser(global::Zitadel.Resources.User.V3alpha.GetUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUser, null, options, request);
      }
      /// <summary>
      /// User by ID
      ///
      /// Returns the user identified by the requested ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.GetUserResponse> GetUserAsync(global::Zitadel.Resources.User.V3alpha.GetUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// User by ID
      ///
      /// Returns the user identified by the requested ID.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.GetUserResponse> GetUserAsync(global::Zitadel.Resources.User.V3alpha.GetUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUser, null, options, request);
      }
      /// <summary>
      /// Create a user
      ///
      /// Create a new user with an optional data schema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.CreateUserResponse CreateUser(global::Zitadel.Resources.User.V3alpha.CreateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a user
      ///
      /// Create a new user with an optional data schema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.CreateUserResponse CreateUser(global::Zitadel.Resources.User.V3alpha.CreateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateUser, null, options, request);
      }
      /// <summary>
      /// Create a user
      ///
      /// Create a new user with an optional data schema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.CreateUserResponse> CreateUserAsync(global::Zitadel.Resources.User.V3alpha.CreateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a user
      ///
      /// Create a new user with an optional data schema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.CreateUserResponse> CreateUserAsync(global::Zitadel.Resources.User.V3alpha.CreateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateUser, null, options, request);
      }
      /// <summary>
      /// Patch a user
      ///
      /// Patch an existing user with data based on a user schema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.PatchUserResponse PatchUser(global::Zitadel.Resources.User.V3alpha.PatchUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PatchUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Patch a user
      ///
      /// Patch an existing user with data based on a user schema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.PatchUserResponse PatchUser(global::Zitadel.Resources.User.V3alpha.PatchUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PatchUser, null, options, request);
      }
      /// <summary>
      /// Patch a user
      ///
      /// Patch an existing user with data based on a user schema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.PatchUserResponse> PatchUserAsync(global::Zitadel.Resources.User.V3alpha.PatchUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PatchUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Patch a user
      ///
      /// Patch an existing user with data based on a user schema.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.PatchUserResponse> PatchUserAsync(global::Zitadel.Resources.User.V3alpha.PatchUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PatchUser, null, options, request);
      }
      /// <summary>
      /// Deactivate a user
      ///
      /// Deactivate an existing user and change the state 'deactivated'.
      /// The user will not be able to log in anymore.
      /// Use deactivate user when the user should not be able to use the account anymore,
      /// but you still need access to the user data.
      ///
      /// The endpoint returns an error if the user is already in the state 'deactivated'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.DeactivateUserResponse DeactivateUser(global::Zitadel.Resources.User.V3alpha.DeactivateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivate a user
      ///
      /// Deactivate an existing user and change the state 'deactivated'.
      /// The user will not be able to log in anymore.
      /// Use deactivate user when the user should not be able to use the account anymore,
      /// but you still need access to the user data.
      ///
      /// The endpoint returns an error if the user is already in the state 'deactivated'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.DeactivateUserResponse DeactivateUser(global::Zitadel.Resources.User.V3alpha.DeactivateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeactivateUser, null, options, request);
      }
      /// <summary>
      /// Deactivate a user
      ///
      /// Deactivate an existing user and change the state 'deactivated'.
      /// The user will not be able to log in anymore.
      /// Use deactivate user when the user should not be able to use the account anymore,
      /// but you still need access to the user data.
      ///
      /// The endpoint returns an error if the user is already in the state 'deactivated'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.DeactivateUserResponse> DeactivateUserAsync(global::Zitadel.Resources.User.V3alpha.DeactivateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeactivateUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deactivate a user
      ///
      /// Deactivate an existing user and change the state 'deactivated'.
      /// The user will not be able to log in anymore.
      /// Use deactivate user when the user should not be able to use the account anymore,
      /// but you still need access to the user data.
      ///
      /// The endpoint returns an error if the user is already in the state 'deactivated'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.DeactivateUserResponse> DeactivateUserAsync(global::Zitadel.Resources.User.V3alpha.DeactivateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeactivateUser, null, options, request);
      }
      /// <summary>
      /// Activate a user
      ///
      /// Activate a previously deactivated user and change the state to 'active'.
      /// The user will be able to log in again.
      ///
      /// The endpoint returns an error if the user is not in the state 'deactivated'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.ActivateUserResponse ActivateUser(global::Zitadel.Resources.User.V3alpha.ActivateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ActivateUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Activate a user
      ///
      /// Activate a previously deactivated user and change the state to 'active'.
      /// The user will be able to log in again.
      ///
      /// The endpoint returns an error if the user is not in the state 'deactivated'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.ActivateUserResponse ActivateUser(global::Zitadel.Resources.User.V3alpha.ActivateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ActivateUser, null, options, request);
      }
      /// <summary>
      /// Activate a user
      ///
      /// Activate a previously deactivated user and change the state to 'active'.
      /// The user will be able to log in again.
      ///
      /// The endpoint returns an error if the user is not in the state 'deactivated'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.ActivateUserResponse> ActivateUserAsync(global::Zitadel.Resources.User.V3alpha.ActivateUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ActivateUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Activate a user
      ///
      /// Activate a previously deactivated user and change the state to 'active'.
      /// The user will be able to log in again.
      ///
      /// The endpoint returns an error if the user is not in the state 'deactivated'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.ActivateUserResponse> ActivateUserAsync(global::Zitadel.Resources.User.V3alpha.ActivateUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ActivateUser, null, options, request);
      }
      /// <summary>
      /// Lock a user
      ///
      /// Lock an existing user and change the state 'locked'.
      /// The user will not be able to log in anymore.
      /// Use lock user when the user should temporarily not be able to log in
      /// because of an event that happened (wrong password, etc.)
      ///
      /// The endpoint returns an error if the user is already in the state 'locked'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.LockUserResponse LockUser(global::Zitadel.Resources.User.V3alpha.LockUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LockUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lock a user
      ///
      /// Lock an existing user and change the state 'locked'.
      /// The user will not be able to log in anymore.
      /// Use lock user when the user should temporarily not be able to log in
      /// because of an event that happened (wrong password, etc.)
      ///
      /// The endpoint returns an error if the user is already in the state 'locked'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.LockUserResponse LockUser(global::Zitadel.Resources.User.V3alpha.LockUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_LockUser, null, options, request);
      }
      /// <summary>
      /// Lock a user
      ///
      /// Lock an existing user and change the state 'locked'.
      /// The user will not be able to log in anymore.
      /// Use lock user when the user should temporarily not be able to log in
      /// because of an event that happened (wrong password, etc.)
      ///
      /// The endpoint returns an error if the user is already in the state 'locked'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.LockUserResponse> LockUserAsync(global::Zitadel.Resources.User.V3alpha.LockUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return LockUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lock a user
      ///
      /// Lock an existing user and change the state 'locked'.
      /// The user will not be able to log in anymore.
      /// Use lock user when the user should temporarily not be able to log in
      /// because of an event that happened (wrong password, etc.)
      ///
      /// The endpoint returns an error if the user is already in the state 'locked'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.LockUserResponse> LockUserAsync(global::Zitadel.Resources.User.V3alpha.LockUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_LockUser, null, options, request);
      }
      /// <summary>
      /// Unlock a user
      ///
      /// Unlock a previously locked user and change the state to 'active'.
      /// The user will be able to log in again.
      ///
      /// The endpoint returns an error if the user is not in the state 'locked'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.UnlockUserResponse UnlockUser(global::Zitadel.Resources.User.V3alpha.UnlockUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnlockUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unlock a user
      ///
      /// Unlock a previously locked user and change the state to 'active'.
      /// The user will be able to log in again.
      ///
      /// The endpoint returns an error if the user is not in the state 'locked'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.UnlockUserResponse UnlockUser(global::Zitadel.Resources.User.V3alpha.UnlockUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UnlockUser, null, options, request);
      }
      /// <summary>
      /// Unlock a user
      ///
      /// Unlock a previously locked user and change the state to 'active'.
      /// The user will be able to log in again.
      ///
      /// The endpoint returns an error if the user is not in the state 'locked'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.UnlockUserResponse> UnlockUserAsync(global::Zitadel.Resources.User.V3alpha.UnlockUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UnlockUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Unlock a user
      ///
      /// Unlock a previously locked user and change the state to 'active'.
      /// The user will be able to log in again.
      ///
      /// The endpoint returns an error if the user is not in the state 'locked'.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.UnlockUserResponse> UnlockUserAsync(global::Zitadel.Resources.User.V3alpha.UnlockUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UnlockUser, null, options, request);
      }
      /// <summary>
      /// Delete a user
      ///
      /// Delete an existing user and change the state to 'deleted'.
      /// The user will be able to log in anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.DeleteUserResponse DeleteUser(global::Zitadel.Resources.User.V3alpha.DeleteUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUser(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a user
      ///
      /// Delete an existing user and change the state to 'deleted'.
      /// The user will be able to log in anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.DeleteUserResponse DeleteUser(global::Zitadel.Resources.User.V3alpha.DeleteUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteUser, null, options, request);
      }
      /// <summary>
      /// Delete a user
      ///
      /// Delete an existing user and change the state to 'deleted'.
      /// The user will be able to log in anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.DeleteUserResponse> DeleteUserAsync(global::Zitadel.Resources.User.V3alpha.DeleteUserRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteUserAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Delete a user
      ///
      /// Delete an existing user and change the state to 'deleted'.
      /// The user will be able to log in anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.DeleteUserResponse> DeleteUserAsync(global::Zitadel.Resources.User.V3alpha.DeleteUserRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteUser, null, options, request);
      }
      /// <summary>
      /// Set contact email
      ///
      /// Add or update the contact email address of a user.
      /// If the email is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by email.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.SetContactEmailResponse SetContactEmail(global::Zitadel.Resources.User.V3alpha.SetContactEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetContactEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set contact email
      ///
      /// Add or update the contact email address of a user.
      /// If the email is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by email.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.SetContactEmailResponse SetContactEmail(global::Zitadel.Resources.User.V3alpha.SetContactEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetContactEmail, null, options, request);
      }
      /// <summary>
      /// Set contact email
      ///
      /// Add or update the contact email address of a user.
      /// If the email is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by email.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.SetContactEmailResponse> SetContactEmailAsync(global::Zitadel.Resources.User.V3alpha.SetContactEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetContactEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set contact email
      ///
      /// Add or update the contact email address of a user.
      /// If the email is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by email.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.SetContactEmailResponse> SetContactEmailAsync(global::Zitadel.Resources.User.V3alpha.SetContactEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetContactEmail, null, options, request);
      }
      /// <summary>
      /// Verify the contact email
      ///
      /// Verify the contact email with the provided code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.VerifyContactEmailResponse VerifyContactEmail(global::Zitadel.Resources.User.V3alpha.VerifyContactEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyContactEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify the contact email
      ///
      /// Verify the contact email with the provided code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.VerifyContactEmailResponse VerifyContactEmail(global::Zitadel.Resources.User.V3alpha.VerifyContactEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyContactEmail, null, options, request);
      }
      /// <summary>
      /// Verify the contact email
      ///
      /// Verify the contact email with the provided code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.VerifyContactEmailResponse> VerifyContactEmailAsync(global::Zitadel.Resources.User.V3alpha.VerifyContactEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyContactEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify the contact email
      ///
      /// Verify the contact email with the provided code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.VerifyContactEmailResponse> VerifyContactEmailAsync(global::Zitadel.Resources.User.V3alpha.VerifyContactEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyContactEmail, null, options, request);
      }
      /// <summary>
      /// Resend the contact email code
      ///
      /// Resend the email with the verification code for the contact email address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeResponse ResendContactEmailCode(global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendContactEmailCode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resend the contact email code
      ///
      /// Resend the email with the verification code for the contact email address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeResponse ResendContactEmailCode(global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResendContactEmailCode, null, options, request);
      }
      /// <summary>
      /// Resend the contact email code
      ///
      /// Resend the email with the verification code for the contact email address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeResponse> ResendContactEmailCodeAsync(global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendContactEmailCodeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resend the contact email code
      ///
      /// Resend the email with the verification code for the contact email address.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeResponse> ResendContactEmailCodeAsync(global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResendContactEmailCode, null, options, request);
      }
      /// <summary>
      /// Set contact phone
      ///
      /// Add or update the contact phone number of a user.
      /// If the phone is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by SMS.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.SetContactPhoneResponse SetContactPhone(global::Zitadel.Resources.User.V3alpha.SetContactPhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetContactPhone(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set contact phone
      ///
      /// Add or update the contact phone number of a user.
      /// If the phone is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by SMS.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.SetContactPhoneResponse SetContactPhone(global::Zitadel.Resources.User.V3alpha.SetContactPhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetContactPhone, null, options, request);
      }
      /// <summary>
      /// Set contact phone
      ///
      /// Add or update the contact phone number of a user.
      /// If the phone is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by SMS.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.SetContactPhoneResponse> SetContactPhoneAsync(global::Zitadel.Resources.User.V3alpha.SetContactPhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetContactPhoneAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set contact phone
      ///
      /// Add or update the contact phone number of a user.
      /// If the phone is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by SMS.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.SetContactPhoneResponse> SetContactPhoneAsync(global::Zitadel.Resources.User.V3alpha.SetContactPhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetContactPhone, null, options, request);
      }
      /// <summary>
      /// Verify the contact phone
      ///
      /// Verify the contact phone with the provided code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneResponse VerifyContactPhone(global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyContactPhone(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify the contact phone
      ///
      /// Verify the contact phone with the provided code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneResponse VerifyContactPhone(global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyContactPhone, null, options, request);
      }
      /// <summary>
      /// Verify the contact phone
      ///
      /// Verify the contact phone with the provided code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneResponse> VerifyContactPhoneAsync(global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyContactPhoneAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify the contact phone
      ///
      /// Verify the contact phone with the provided code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneResponse> VerifyContactPhoneAsync(global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyContactPhone, null, options, request);
      }
      /// <summary>
      /// Resend the contact phone code
      ///
      /// Resend the phone with the verification code for the contact phone number.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeResponse ResendContactPhoneCode(global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendContactPhoneCode(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resend the contact phone code
      ///
      /// Resend the phone with the verification code for the contact phone number.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeResponse ResendContactPhoneCode(global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ResendContactPhoneCode, null, options, request);
      }
      /// <summary>
      /// Resend the contact phone code
      ///
      /// Resend the phone with the verification code for the contact phone number.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeResponse> ResendContactPhoneCodeAsync(global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ResendContactPhoneCodeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Resend the contact phone code
      ///
      /// Resend the phone with the verification code for the contact phone number.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeResponse> ResendContactPhoneCodeAsync(global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ResendContactPhoneCode, null, options, request);
      }
      /// <summary>
      /// Add a username
      ///
      /// Add a new unique username to a user. The username will be used to identify the user on authentication.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.AddUsernameResponse AddUsername(global::Zitadel.Resources.User.V3alpha.AddUsernameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddUsername(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a username
      ///
      /// Add a new unique username to a user. The username will be used to identify the user on authentication.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.AddUsernameResponse AddUsername(global::Zitadel.Resources.User.V3alpha.AddUsernameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddUsername, null, options, request);
      }
      /// <summary>
      /// Add a username
      ///
      /// Add a new unique username to a user. The username will be used to identify the user on authentication.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.AddUsernameResponse> AddUsernameAsync(global::Zitadel.Resources.User.V3alpha.AddUsernameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddUsernameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a username
      ///
      /// Add a new unique username to a user. The username will be used to identify the user on authentication.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.AddUsernameResponse> AddUsernameAsync(global::Zitadel.Resources.User.V3alpha.AddUsernameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddUsername, null, options, request);
      }
      /// <summary>
      /// Remove a username
      ///
      /// Remove an existing username of a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.RemoveUsernameResponse RemoveUsername(global::Zitadel.Resources.User.V3alpha.RemoveUsernameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveUsername(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove a username
      ///
      /// Remove an existing username of a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.RemoveUsernameResponse RemoveUsername(global::Zitadel.Resources.User.V3alpha.RemoveUsernameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveUsername, null, options, request);
      }
      /// <summary>
      /// Remove a username
      ///
      /// Remove an existing username of a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.RemoveUsernameResponse> RemoveUsernameAsync(global::Zitadel.Resources.User.V3alpha.RemoveUsernameRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveUsernameAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove a username
      ///
      /// Remove an existing username of a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.RemoveUsernameResponse> RemoveUsernameAsync(global::Zitadel.Resources.User.V3alpha.RemoveUsernameRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveUsername, null, options, request);
      }
      /// <summary>
      /// Set a password
      ///
      /// Add, update or reset a user's password with either a verification code or the current password.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.SetPasswordResponse SetPassword(global::Zitadel.Resources.User.V3alpha.SetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetPassword(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set a password
      ///
      /// Add, update or reset a user's password with either a verification code or the current password.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.SetPasswordResponse SetPassword(global::Zitadel.Resources.User.V3alpha.SetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_SetPassword, null, options, request);
      }
      /// <summary>
      /// Set a password
      ///
      /// Add, update or reset a user's password with either a verification code or the current password.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.SetPasswordResponse> SetPasswordAsync(global::Zitadel.Resources.User.V3alpha.SetPasswordRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return SetPasswordAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Set a password
      ///
      /// Add, update or reset a user's password with either a verification code or the current password.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.SetPasswordResponse> SetPasswordAsync(global::Zitadel.Resources.User.V3alpha.SetPasswordRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_SetPassword, null, options, request);
      }
      /// <summary>
      /// Request password reset
      ///
      /// Request a code to be able to set a new password.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.RequestPasswordResetResponse RequestPasswordReset(global::Zitadel.Resources.User.V3alpha.RequestPasswordResetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RequestPasswordReset(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Request password reset
      ///
      /// Request a code to be able to set a new password.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.RequestPasswordResetResponse RequestPasswordReset(global::Zitadel.Resources.User.V3alpha.RequestPasswordResetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RequestPasswordReset, null, options, request);
      }
      /// <summary>
      /// Request password reset
      ///
      /// Request a code to be able to set a new password.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.RequestPasswordResetResponse> RequestPasswordResetAsync(global::Zitadel.Resources.User.V3alpha.RequestPasswordResetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RequestPasswordResetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Request password reset
      ///
      /// Request a code to be able to set a new password.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.RequestPasswordResetResponse> RequestPasswordResetAsync(global::Zitadel.Resources.User.V3alpha.RequestPasswordResetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RequestPasswordReset, null, options, request);
      }
      /// <summary>
      /// Start a WebAuthN registration
      ///
      /// Start the registration of a new WebAuthN device (e.g. Passkeys) for a user.
      /// As a response the public key credential creation options are returned,
      /// which are used to verify the device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationResponse StartWebAuthNRegistration(global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartWebAuthNRegistration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Start a WebAuthN registration
      ///
      /// Start the registration of a new WebAuthN device (e.g. Passkeys) for a user.
      /// As a response the public key credential creation options are returned,
      /// which are used to verify the device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationResponse StartWebAuthNRegistration(global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartWebAuthNRegistration, null, options, request);
      }
      /// <summary>
      /// Start a WebAuthN registration
      ///
      /// Start the registration of a new WebAuthN device (e.g. Passkeys) for a user.
      /// As a response the public key credential creation options are returned,
      /// which are used to verify the device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationResponse> StartWebAuthNRegistrationAsync(global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartWebAuthNRegistrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Start a WebAuthN registration
      ///
      /// Start the registration of a new WebAuthN device (e.g. Passkeys) for a user.
      /// As a response the public key credential creation options are returned,
      /// which are used to verify the device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationResponse> StartWebAuthNRegistrationAsync(global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartWebAuthNRegistration, null, options, request);
      }
      /// <summary>
      /// Verify a WebAuthN registration
      ///
      /// Verify the WebAuthN registration started by StartWebAuthNRegistration with the public key credential.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationResponse VerifyWebAuthNRegistration(global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyWebAuthNRegistration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify a WebAuthN registration
      ///
      /// Verify the WebAuthN registration started by StartWebAuthNRegistration with the public key credential.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationResponse VerifyWebAuthNRegistration(global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyWebAuthNRegistration, null, options, request);
      }
      /// <summary>
      /// Verify a WebAuthN registration
      ///
      /// Verify the WebAuthN registration started by StartWebAuthNRegistration with the public key credential.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationResponse> VerifyWebAuthNRegistrationAsync(global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyWebAuthNRegistrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify a WebAuthN registration
      ///
      /// Verify the WebAuthN registration started by StartWebAuthNRegistration with the public key credential.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationResponse> VerifyWebAuthNRegistrationAsync(global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyWebAuthNRegistration, null, options, request);
      }
      /// <summary>
      /// Create a WebAuthN registration link
      ///
      /// Create a link, which includes a code, that can either be returned or directly sent to the user.
      /// The code will allow the user to start a new WebAuthN registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkResponse CreateWebAuthNRegistrationLink(global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateWebAuthNRegistrationLink(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a WebAuthN registration link
      ///
      /// Create a link, which includes a code, that can either be returned or directly sent to the user.
      /// The code will allow the user to start a new WebAuthN registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkResponse CreateWebAuthNRegistrationLink(global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateWebAuthNRegistrationLink, null, options, request);
      }
      /// <summary>
      /// Create a WebAuthN registration link
      ///
      /// Create a link, which includes a code, that can either be returned or directly sent to the user.
      /// The code will allow the user to start a new WebAuthN registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkResponse> CreateWebAuthNRegistrationLinkAsync(global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateWebAuthNRegistrationLinkAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Create a WebAuthN registration link
      ///
      /// Create a link, which includes a code, that can either be returned or directly sent to the user.
      /// The code will allow the user to start a new WebAuthN registration.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkResponse> CreateWebAuthNRegistrationLinkAsync(global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateWebAuthNRegistrationLink, null, options, request);
      }
      /// <summary>
      /// Remove a WebAuthN authenticator
      ///
      /// Remove an existing WebAuthN authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorResponse RemoveWebAuthNAuthenticator(global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveWebAuthNAuthenticator(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove a WebAuthN authenticator
      ///
      /// Remove an existing WebAuthN authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorResponse RemoveWebAuthNAuthenticator(global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveWebAuthNAuthenticator, null, options, request);
      }
      /// <summary>
      /// Remove a WebAuthN authenticator
      ///
      /// Remove an existing WebAuthN authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorResponse> RemoveWebAuthNAuthenticatorAsync(global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveWebAuthNAuthenticatorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove a WebAuthN authenticator
      ///
      /// Remove an existing WebAuthN authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorResponse> RemoveWebAuthNAuthenticatorAsync(global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveWebAuthNAuthenticator, null, options, request);
      }
      /// <summary>
      /// Start a TOTP registration
      ///
      /// Start the registration of a new time-based one-time password (TOTP) generator for a user.
      /// As a response a secret is returned, which is used to initialize a TOTP app or device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationResponse StartTOTPRegistration(global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartTOTPRegistration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Start a TOTP registration
      ///
      /// Start the registration of a new time-based one-time password (TOTP) generator for a user.
      /// As a response a secret is returned, which is used to initialize a TOTP app or device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationResponse StartTOTPRegistration(global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartTOTPRegistration, null, options, request);
      }
      /// <summary>
      /// Start a TOTP registration
      ///
      /// Start the registration of a new time-based one-time password (TOTP) generator for a user.
      /// As a response a secret is returned, which is used to initialize a TOTP app or device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationResponse> StartTOTPRegistrationAsync(global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartTOTPRegistrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Start a TOTP registration
      ///
      /// Start the registration of a new time-based one-time password (TOTP) generator for a user.
      /// As a response a secret is returned, which is used to initialize a TOTP app or device.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationResponse> StartTOTPRegistrationAsync(global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartTOTPRegistration, null, options, request);
      }
      /// <summary>
      /// Verify a TOTP registration
      ///
      /// Verify the time-based one-time password (TOTP) registration with the generated code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationResponse VerifyTOTPRegistration(global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyTOTPRegistration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify a TOTP registration
      ///
      /// Verify the time-based one-time password (TOTP) registration with the generated code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationResponse VerifyTOTPRegistration(global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyTOTPRegistration, null, options, request);
      }
      /// <summary>
      /// Verify a TOTP registration
      ///
      /// Verify the time-based one-time password (TOTP) registration with the generated code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationResponse> VerifyTOTPRegistrationAsync(global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyTOTPRegistrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify a TOTP registration
      ///
      /// Verify the time-based one-time password (TOTP) registration with the generated code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationResponse> VerifyTOTPRegistrationAsync(global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyTOTPRegistration, null, options, request);
      }
      /// <summary>
      /// Remove a TOTP authenticator
      ///
      /// Remove an existing time-based one-time password (TOTP) authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorResponse RemoveTOTPAuthenticator(global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveTOTPAuthenticator(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove a TOTP authenticator
      ///
      /// Remove an existing time-based one-time password (TOTP) authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorResponse RemoveTOTPAuthenticator(global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveTOTPAuthenticator, null, options, request);
      }
      /// <summary>
      /// Remove a TOTP authenticator
      ///
      /// Remove an existing time-based one-time password (TOTP) authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorResponse> RemoveTOTPAuthenticatorAsync(global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveTOTPAuthenticatorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove a TOTP authenticator
      ///
      /// Remove an existing time-based one-time password (TOTP) authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorResponse> RemoveTOTPAuthenticatorAsync(global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveTOTPAuthenticator, null, options, request);
      }
      /// <summary>
      /// Add a OTP SMS authenticator
      ///
      /// Add a new one-time password (OTP) SMS authenticator to a user.
      /// If the phone is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by SMS.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorResponse AddOTPSMSAuthenticator(global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOTPSMSAuthenticator(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a OTP SMS authenticator
      ///
      /// Add a new one-time password (OTP) SMS authenticator to a user.
      /// If the phone is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by SMS.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorResponse AddOTPSMSAuthenticator(global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddOTPSMSAuthenticator, null, options, request);
      }
      /// <summary>
      /// Add a OTP SMS authenticator
      ///
      /// Add a new one-time password (OTP) SMS authenticator to a user.
      /// If the phone is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by SMS.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorResponse> AddOTPSMSAuthenticatorAsync(global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOTPSMSAuthenticatorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a OTP SMS authenticator
      ///
      /// Add a new one-time password (OTP) SMS authenticator to a user.
      /// If the phone is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by SMS.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorResponse> AddOTPSMSAuthenticatorAsync(global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddOTPSMSAuthenticator, null, options, request);
      }
      /// <summary>
      /// Verify OTP SMS registration
      ///
      /// Verify the OTP SMS registration with the provided code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationResponse VerifyOTPSMSRegistration(global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyOTPSMSRegistration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify OTP SMS registration
      ///
      /// Verify the OTP SMS registration with the provided code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationResponse VerifyOTPSMSRegistration(global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyOTPSMSRegistration, null, options, request);
      }
      /// <summary>
      /// Verify OTP SMS registration
      ///
      /// Verify the OTP SMS registration with the provided code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationResponse> VerifyOTPSMSRegistrationAsync(global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyOTPSMSRegistrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify OTP SMS registration
      ///
      /// Verify the OTP SMS registration with the provided code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationResponse> VerifyOTPSMSRegistrationAsync(global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyOTPSMSRegistration, null, options, request);
      }
      /// <summary>
      /// Remove a OTP SMS authenticator
      ///
      /// Remove an existing one-time password (OTP) SMS authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorResponse RemoveOTPSMSAuthenticator(global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOTPSMSAuthenticator(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove a OTP SMS authenticator
      ///
      /// Remove an existing one-time password (OTP) SMS authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorResponse RemoveOTPSMSAuthenticator(global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveOTPSMSAuthenticator, null, options, request);
      }
      /// <summary>
      /// Remove a OTP SMS authenticator
      ///
      /// Remove an existing one-time password (OTP) SMS authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorResponse> RemoveOTPSMSAuthenticatorAsync(global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOTPSMSAuthenticatorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove a OTP SMS authenticator
      ///
      /// Remove an existing one-time password (OTP) SMS authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorResponse> RemoveOTPSMSAuthenticatorAsync(global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveOTPSMSAuthenticator, null, options, request);
      }
      /// <summary>
      /// Add a OTP Email authenticator
      ///
      /// Add a new one-time password (OTP) Email authenticator to a user.
      /// If the email is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by email.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorResponse AddOTPEmailAuthenticator(global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOTPEmailAuthenticator(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a OTP Email authenticator
      ///
      /// Add a new one-time password (OTP) Email authenticator to a user.
      /// If the email is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by email.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorResponse AddOTPEmailAuthenticator(global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddOTPEmailAuthenticator, null, options, request);
      }
      /// <summary>
      /// Add a OTP Email authenticator
      ///
      /// Add a new one-time password (OTP) Email authenticator to a user.
      /// If the email is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by email.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorResponse> AddOTPEmailAuthenticatorAsync(global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOTPEmailAuthenticatorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add a OTP Email authenticator
      ///
      /// Add a new one-time password (OTP) Email authenticator to a user.
      /// If the email is not passed as verified, a verification code will be generated,
      /// which can be either returned or will be sent to the user by email.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorResponse> AddOTPEmailAuthenticatorAsync(global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddOTPEmailAuthenticator, null, options, request);
      }
      /// <summary>
      /// Verify OTP Email registration
      ///
      /// Verify the OTP Email registration with the provided code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationResponse VerifyOTPEmailRegistration(global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyOTPEmailRegistration(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify OTP Email registration
      ///
      /// Verify the OTP Email registration with the provided code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationResponse VerifyOTPEmailRegistration(global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_VerifyOTPEmailRegistration, null, options, request);
      }
      /// <summary>
      /// Verify OTP Email registration
      ///
      /// Verify the OTP Email registration with the provided code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationResponse> VerifyOTPEmailRegistrationAsync(global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return VerifyOTPEmailRegistrationAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Verify OTP Email registration
      ///
      /// Verify the OTP Email registration with the provided code.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationResponse> VerifyOTPEmailRegistrationAsync(global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_VerifyOTPEmailRegistration, null, options, request);
      }
      /// <summary>
      /// Remove a OTP Email authenticator
      ///
      /// Remove an existing one-time password (OTP) Email authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorResponse RemoveOTPEmailAuthenticator(global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOTPEmailAuthenticator(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove a OTP Email authenticator
      ///
      /// Remove an existing one-time password (OTP) Email authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorResponse RemoveOTPEmailAuthenticator(global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveOTPEmailAuthenticator, null, options, request);
      }
      /// <summary>
      /// Remove a OTP Email authenticator
      ///
      /// Remove an existing one-time password (OTP) Email authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorResponse> RemoveOTPEmailAuthenticatorAsync(global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOTPEmailAuthenticatorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove a OTP Email authenticator
      ///
      /// Remove an existing one-time password (OTP) Email authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorResponse> RemoveOTPEmailAuthenticatorAsync(global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveOTPEmailAuthenticator, null, options, request);
      }
      /// <summary>
      /// Start an IDP authentication intent
      ///
      /// Start a new authentication intent on configured identity provider (IDP) for external login, registration or linking.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentResponse StartIdentityProviderIntent(global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartIdentityProviderIntent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Start an IDP authentication intent
      ///
      /// Start a new authentication intent on configured identity provider (IDP) for external login, registration or linking.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentResponse StartIdentityProviderIntent(global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_StartIdentityProviderIntent, null, options, request);
      }
      /// <summary>
      /// Start an IDP authentication intent
      ///
      /// Start a new authentication intent on configured identity provider (IDP) for external login, registration or linking.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentResponse> StartIdentityProviderIntentAsync(global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartIdentityProviderIntentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Start an IDP authentication intent
      ///
      /// Start a new authentication intent on configured identity provider (IDP) for external login, registration or linking.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentResponse> StartIdentityProviderIntentAsync(global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_StartIdentityProviderIntent, null, options, request);
      }
      /// <summary>
      /// Get the information of the IDP authentication intent
      ///
      /// Get the information returned by the identity provider (IDP) for registration or updating an existing user with new information.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentResponse GetIdentityProviderIntent(global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIdentityProviderIntent(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the information of the IDP authentication intent
      ///
      /// Get the information returned by the identity provider (IDP) for registration or updating an existing user with new information.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentResponse GetIdentityProviderIntent(global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetIdentityProviderIntent, null, options, request);
      }
      /// <summary>
      /// Get the information of the IDP authentication intent
      ///
      /// Get the information returned by the identity provider (IDP) for registration or updating an existing user with new information.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentResponse> GetIdentityProviderIntentAsync(global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetIdentityProviderIntentAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Get the information of the IDP authentication intent
      ///
      /// Get the information returned by the identity provider (IDP) for registration or updating an existing user with new information.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentResponse> GetIdentityProviderIntentAsync(global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetIdentityProviderIntent, null, options, request);
      }
      /// <summary>
      /// Add an IDP authenticator to a user
      ///
      /// Add a new identity provider (IDP) authenticator to an existing user.
      /// This will allow the user to authenticate with the provided IDP.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorResponse AddIDPAuthenticator(global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddIDPAuthenticator(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add an IDP authenticator to a user
      ///
      /// Add a new identity provider (IDP) authenticator to an existing user.
      /// This will allow the user to authenticate with the provided IDP.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorResponse AddIDPAuthenticator(global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddIDPAuthenticator, null, options, request);
      }
      /// <summary>
      /// Add an IDP authenticator to a user
      ///
      /// Add a new identity provider (IDP) authenticator to an existing user.
      /// This will allow the user to authenticate with the provided IDP.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorResponse> AddIDPAuthenticatorAsync(global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddIDPAuthenticatorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Add an IDP authenticator to a user
      ///
      /// Add a new identity provider (IDP) authenticator to an existing user.
      /// This will allow the user to authenticate with the provided IDP.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorResponse> AddIDPAuthenticatorAsync(global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddIDPAuthenticator, null, options, request);
      }
      /// <summary>
      /// Remove an IDP authenticator
      ///
      /// Remove an existing identity provider (IDP) authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorResponse RemoveIDPAuthenticator(global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveIDPAuthenticator(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove an IDP authenticator
      ///
      /// Remove an existing identity provider (IDP) authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorResponse RemoveIDPAuthenticator(global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveIDPAuthenticator, null, options, request);
      }
      /// <summary>
      /// Remove an IDP authenticator
      ///
      /// Remove an existing identity provider (IDP) authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorResponse> RemoveIDPAuthenticatorAsync(global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveIDPAuthenticatorAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Remove an IDP authenticator
      ///
      /// Remove an existing identity provider (IDP) authenticator from a user, so it cannot be used for authentication anymore.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorResponse> RemoveIDPAuthenticatorAsync(global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveIDPAuthenticator, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ZITADELUsersClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ZITADELUsersClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ZITADELUsersBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_SearchUsers, serviceImpl.SearchUsers)
          .AddMethod(__Method_GetUser, serviceImpl.GetUser)
          .AddMethod(__Method_CreateUser, serviceImpl.CreateUser)
          .AddMethod(__Method_PatchUser, serviceImpl.PatchUser)
          .AddMethod(__Method_DeactivateUser, serviceImpl.DeactivateUser)
          .AddMethod(__Method_ActivateUser, serviceImpl.ActivateUser)
          .AddMethod(__Method_LockUser, serviceImpl.LockUser)
          .AddMethod(__Method_UnlockUser, serviceImpl.UnlockUser)
          .AddMethod(__Method_DeleteUser, serviceImpl.DeleteUser)
          .AddMethod(__Method_SetContactEmail, serviceImpl.SetContactEmail)
          .AddMethod(__Method_VerifyContactEmail, serviceImpl.VerifyContactEmail)
          .AddMethod(__Method_ResendContactEmailCode, serviceImpl.ResendContactEmailCode)
          .AddMethod(__Method_SetContactPhone, serviceImpl.SetContactPhone)
          .AddMethod(__Method_VerifyContactPhone, serviceImpl.VerifyContactPhone)
          .AddMethod(__Method_ResendContactPhoneCode, serviceImpl.ResendContactPhoneCode)
          .AddMethod(__Method_AddUsername, serviceImpl.AddUsername)
          .AddMethod(__Method_RemoveUsername, serviceImpl.RemoveUsername)
          .AddMethod(__Method_SetPassword, serviceImpl.SetPassword)
          .AddMethod(__Method_RequestPasswordReset, serviceImpl.RequestPasswordReset)
          .AddMethod(__Method_StartWebAuthNRegistration, serviceImpl.StartWebAuthNRegistration)
          .AddMethod(__Method_VerifyWebAuthNRegistration, serviceImpl.VerifyWebAuthNRegistration)
          .AddMethod(__Method_CreateWebAuthNRegistrationLink, serviceImpl.CreateWebAuthNRegistrationLink)
          .AddMethod(__Method_RemoveWebAuthNAuthenticator, serviceImpl.RemoveWebAuthNAuthenticator)
          .AddMethod(__Method_StartTOTPRegistration, serviceImpl.StartTOTPRegistration)
          .AddMethod(__Method_VerifyTOTPRegistration, serviceImpl.VerifyTOTPRegistration)
          .AddMethod(__Method_RemoveTOTPAuthenticator, serviceImpl.RemoveTOTPAuthenticator)
          .AddMethod(__Method_AddOTPSMSAuthenticator, serviceImpl.AddOTPSMSAuthenticator)
          .AddMethod(__Method_VerifyOTPSMSRegistration, serviceImpl.VerifyOTPSMSRegistration)
          .AddMethod(__Method_RemoveOTPSMSAuthenticator, serviceImpl.RemoveOTPSMSAuthenticator)
          .AddMethod(__Method_AddOTPEmailAuthenticator, serviceImpl.AddOTPEmailAuthenticator)
          .AddMethod(__Method_VerifyOTPEmailRegistration, serviceImpl.VerifyOTPEmailRegistration)
          .AddMethod(__Method_RemoveOTPEmailAuthenticator, serviceImpl.RemoveOTPEmailAuthenticator)
          .AddMethod(__Method_StartIdentityProviderIntent, serviceImpl.StartIdentityProviderIntent)
          .AddMethod(__Method_GetIdentityProviderIntent, serviceImpl.GetIdentityProviderIntent)
          .AddMethod(__Method_AddIDPAuthenticator, serviceImpl.AddIDPAuthenticator)
          .AddMethod(__Method_RemoveIDPAuthenticator, serviceImpl.RemoveIDPAuthenticator).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ZITADELUsersBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_SearchUsers, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.SearchUsersRequest, global::Zitadel.Resources.User.V3alpha.SearchUsersResponse>(serviceImpl.SearchUsers));
      serviceBinder.AddMethod(__Method_GetUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.GetUserRequest, global::Zitadel.Resources.User.V3alpha.GetUserResponse>(serviceImpl.GetUser));
      serviceBinder.AddMethod(__Method_CreateUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.CreateUserRequest, global::Zitadel.Resources.User.V3alpha.CreateUserResponse>(serviceImpl.CreateUser));
      serviceBinder.AddMethod(__Method_PatchUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.PatchUserRequest, global::Zitadel.Resources.User.V3alpha.PatchUserResponse>(serviceImpl.PatchUser));
      serviceBinder.AddMethod(__Method_DeactivateUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.DeactivateUserRequest, global::Zitadel.Resources.User.V3alpha.DeactivateUserResponse>(serviceImpl.DeactivateUser));
      serviceBinder.AddMethod(__Method_ActivateUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.ActivateUserRequest, global::Zitadel.Resources.User.V3alpha.ActivateUserResponse>(serviceImpl.ActivateUser));
      serviceBinder.AddMethod(__Method_LockUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.LockUserRequest, global::Zitadel.Resources.User.V3alpha.LockUserResponse>(serviceImpl.LockUser));
      serviceBinder.AddMethod(__Method_UnlockUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.UnlockUserRequest, global::Zitadel.Resources.User.V3alpha.UnlockUserResponse>(serviceImpl.UnlockUser));
      serviceBinder.AddMethod(__Method_DeleteUser, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.DeleteUserRequest, global::Zitadel.Resources.User.V3alpha.DeleteUserResponse>(serviceImpl.DeleteUser));
      serviceBinder.AddMethod(__Method_SetContactEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.SetContactEmailRequest, global::Zitadel.Resources.User.V3alpha.SetContactEmailResponse>(serviceImpl.SetContactEmail));
      serviceBinder.AddMethod(__Method_VerifyContactEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.VerifyContactEmailRequest, global::Zitadel.Resources.User.V3alpha.VerifyContactEmailResponse>(serviceImpl.VerifyContactEmail));
      serviceBinder.AddMethod(__Method_ResendContactEmailCode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeRequest, global::Zitadel.Resources.User.V3alpha.ResendContactEmailCodeResponse>(serviceImpl.ResendContactEmailCode));
      serviceBinder.AddMethod(__Method_SetContactPhone, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.SetContactPhoneRequest, global::Zitadel.Resources.User.V3alpha.SetContactPhoneResponse>(serviceImpl.SetContactPhone));
      serviceBinder.AddMethod(__Method_VerifyContactPhone, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneRequest, global::Zitadel.Resources.User.V3alpha.VerifyContactPhoneResponse>(serviceImpl.VerifyContactPhone));
      serviceBinder.AddMethod(__Method_ResendContactPhoneCode, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeRequest, global::Zitadel.Resources.User.V3alpha.ResendContactPhoneCodeResponse>(serviceImpl.ResendContactPhoneCode));
      serviceBinder.AddMethod(__Method_AddUsername, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.AddUsernameRequest, global::Zitadel.Resources.User.V3alpha.AddUsernameResponse>(serviceImpl.AddUsername));
      serviceBinder.AddMethod(__Method_RemoveUsername, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.RemoveUsernameRequest, global::Zitadel.Resources.User.V3alpha.RemoveUsernameResponse>(serviceImpl.RemoveUsername));
      serviceBinder.AddMethod(__Method_SetPassword, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.SetPasswordRequest, global::Zitadel.Resources.User.V3alpha.SetPasswordResponse>(serviceImpl.SetPassword));
      serviceBinder.AddMethod(__Method_RequestPasswordReset, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.RequestPasswordResetRequest, global::Zitadel.Resources.User.V3alpha.RequestPasswordResetResponse>(serviceImpl.RequestPasswordReset));
      serviceBinder.AddMethod(__Method_StartWebAuthNRegistration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationRequest, global::Zitadel.Resources.User.V3alpha.StartWebAuthNRegistrationResponse>(serviceImpl.StartWebAuthNRegistration));
      serviceBinder.AddMethod(__Method_VerifyWebAuthNRegistration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationRequest, global::Zitadel.Resources.User.V3alpha.VerifyWebAuthNRegistrationResponse>(serviceImpl.VerifyWebAuthNRegistration));
      serviceBinder.AddMethod(__Method_CreateWebAuthNRegistrationLink, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkRequest, global::Zitadel.Resources.User.V3alpha.CreateWebAuthNRegistrationLinkResponse>(serviceImpl.CreateWebAuthNRegistrationLink));
      serviceBinder.AddMethod(__Method_RemoveWebAuthNAuthenticator, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.RemoveWebAuthNAuthenticatorResponse>(serviceImpl.RemoveWebAuthNAuthenticator));
      serviceBinder.AddMethod(__Method_StartTOTPRegistration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationRequest, global::Zitadel.Resources.User.V3alpha.StartTOTPRegistrationResponse>(serviceImpl.StartTOTPRegistration));
      serviceBinder.AddMethod(__Method_VerifyTOTPRegistration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationRequest, global::Zitadel.Resources.User.V3alpha.VerifyTOTPRegistrationResponse>(serviceImpl.VerifyTOTPRegistration));
      serviceBinder.AddMethod(__Method_RemoveTOTPAuthenticator, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.RemoveTOTPAuthenticatorResponse>(serviceImpl.RemoveTOTPAuthenticator));
      serviceBinder.AddMethod(__Method_AddOTPSMSAuthenticator, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.AddOTPSMSAuthenticatorResponse>(serviceImpl.AddOTPSMSAuthenticator));
      serviceBinder.AddMethod(__Method_VerifyOTPSMSRegistration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationRequest, global::Zitadel.Resources.User.V3alpha.VerifyOTPSMSRegistrationResponse>(serviceImpl.VerifyOTPSMSRegistration));
      serviceBinder.AddMethod(__Method_RemoveOTPSMSAuthenticator, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.RemoveOTPSMSAuthenticatorResponse>(serviceImpl.RemoveOTPSMSAuthenticator));
      serviceBinder.AddMethod(__Method_AddOTPEmailAuthenticator, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.AddOTPEmailAuthenticatorResponse>(serviceImpl.AddOTPEmailAuthenticator));
      serviceBinder.AddMethod(__Method_VerifyOTPEmailRegistration, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationRequest, global::Zitadel.Resources.User.V3alpha.VerifyOTPEmailRegistrationResponse>(serviceImpl.VerifyOTPEmailRegistration));
      serviceBinder.AddMethod(__Method_RemoveOTPEmailAuthenticator, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.RemoveOTPEmailAuthenticatorResponse>(serviceImpl.RemoveOTPEmailAuthenticator));
      serviceBinder.AddMethod(__Method_StartIdentityProviderIntent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentRequest, global::Zitadel.Resources.User.V3alpha.StartIdentityProviderIntentResponse>(serviceImpl.StartIdentityProviderIntent));
      serviceBinder.AddMethod(__Method_GetIdentityProviderIntent, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentRequest, global::Zitadel.Resources.User.V3alpha.GetIdentityProviderIntentResponse>(serviceImpl.GetIdentityProviderIntent));
      serviceBinder.AddMethod(__Method_AddIDPAuthenticator, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.AddIDPAuthenticatorResponse>(serviceImpl.AddIDPAuthenticator));
      serviceBinder.AddMethod(__Method_RemoveIDPAuthenticator, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorRequest, global::Zitadel.Resources.User.V3alpha.RemoveIDPAuthenticatorResponse>(serviceImpl.RemoveIDPAuthenticator));
    }

  }
}
#endregion
