name: Publish to NuGet and GitHub Packages

on:
  release:
    types: [published]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Extract version from tag
        id: get_version
        run: |
          # Remove 'v' prefix from tag if present (e.g., v1.0.3 -> 1.0.3)
          VERSION=${GITHUB_REF#refs/tags/v}
          VERSION=${VERSION#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Package version: $VERSION"

      - name: Restore dependencies
        run: dotnet restore ZitadelSDK.slnx

      - name: Build
        run: dotnet build ZitadelSDK.slnx --configuration Release --no-restore

      - name: Pack NuGet package
        run: |
          dotnet pack ZitadelSDK/ZitadelSDK.csproj \
            --configuration Release \
            --no-build \
            --output ./artifacts \
            /p:PackageVersion=${{ steps.get_version.outputs.VERSION }}

      - name: Publish to NuGet.org
        run: |
          dotnet nuget push ./artifacts/*.nupkg \
            --api-key ${{ secrets.NUGET_API_KEY }} \
            --source https://api.nuget.org/v3/index.json \
            --skip-duplicate

      - name: Publish to GitHub Packages
        run: |
          dotnet nuget push ./artifacts/*.nupkg \
            --api-key ${{ secrets.GITHUB_TOKEN }} \
            --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json \
            --skip-duplicate

      - name: Upload package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: nuget-package
          path: ./artifacts/*.nupkg
